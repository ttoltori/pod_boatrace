2#直前オッズディレクトリ 2019/01/10～2020/06/03
#Deprecated DIRECTORY_ODDSBEFORE = C:/Dev/workspace/Oxygen/pod_boatrace_test/oddsbefore/
#groupファイル格納先
# simulation step 1
# Deprecated 2022/8/28 Simul2GroupsFileGenerator.java dir_groups_step1=D:/Dev/experiment/expr10/work/groups_store/
#groupsファイルの自動生成定義ファイル(Excel) filepath#sheet
# Deprecated 2022/8/28 GroupFileGenerator.java file_groups_config=C:/Dev/workspace/Oxygen/pod_boatrace/document/expr10/groups_config.xlsx#groups
#simulation log ファイル格納先 (race単位のsimulation統計)
# Deprecated 2022/8/28 dir_simulation_log=D:/Dev/experiment/expr10/work/simulation_result/
############# SimulationSelectTool 設定
# Deprecated simulation selectの自動生成定義ファイル(Excel) filepath#sheet
# Deprecated 2022/8/28 SimulationSelectTool.java file_selected_config=C:/Dev/workspace/Oxygen/pod_boatrace/document/expr10/simul1_test.xlsx#test2
# Deprecated 2022/8/28 SimulationSelectTool.java dir_simulation_store=D:/Dev/experiment/expr10/simulation_test/
# Deprecated 2022/8/28 SimulationSelectTool.java dir_simulation_selected=D:/Dev/experiment/expr10/simulation_selected/
# Deprecated 2022/8/28 SimulationSelectTool.java dir_groups_store=D:/Dev/experiment/expr10/work/groups_store/
# 直前オッズ提供対象期間
# Deprecated BeforeOddsDataServer.java dataserver_odds_period=20180601~20220827
# WebSocketサーバURL（WEKA）20220417 使用しない
# Deprecated websocket_url_weka=ws://localhost:8090


# schedule.tsv (online処理)
DIRECTORY_CSV = C:/Dev/workspace/Oxygen/pod_boatrace_test/csv/

#確定オッズ 2010/1/1～
DIRECTORY_ODDS = C:/boatrace/offline/data/odds/
#DIRECTORY_ODDS = R:/odds/

#monitorオッズ 2021/6/2～
DIRECTORY_ODDSMONITOR = C:/boatrace/offline/data/oddsmonitor/
#DIRECTORY_ODDSMONITOR = R:/oddsmonitor/

#MLのalgorithm定義ファイル
file_algorithm=C:/Dev/github/pod_boatrace/properties/expr10/algorithm.tsv

#MLのclass定義ファイル
file_class=C:/Dev/github/pod_boatrace/properties/expr10/class.tsv

#MLの実験定義ファイル
file_model_config=C:/Dev/github/pod_boatrace/properties/expr10/model_config.tsv

#MLのfeature定義ファイル
file_features=C:/Dev/github/pod_boatrace/properties/expr10/features.tsv

#MLの実験定義ファイル
#file_result_config=C:/Dev/github/pod_boatrace/properties/expr10/result_config.tsv

#MLの実験定義ファイル(Excel) filepath#sheet
# 이 설정값은 변경하지 말것 result_config.xlsx에만 정의할 것 (번호혼선 방지를 위해)
file_result_config=C:/Dev/github/pod_boatrace/document/expr10/st2/result_config.xlsx#result

#MLのpattern定義ファイル
file_pattern=C:/Dev/github/pod_boatrace/properties/expr10/pattern.tsv

#result生成時のベッティング方式を定義
file_strategy=C:/Dev/github/pod_boatrace/properties/expr10/strategy.tsv

#feature set定義ファイル
file_featureset=C:/Dev/github/pod_boatrace/properties/expr10/featureset.tsv

#java実行時のクラスパス
classpath=C:/Dev/workspace/Oxygen/pod_boatrace_test/lib/weka.jar;C:/Dev/github/pod_boatrace/target/classes;

target_db_resource=mybatis-config.0.xml

#arffファイル格納先
dir_model_arff=C:/Dev/experiment/expr10/arff/
#dir_model_arff=D:/Dev/experiment/expr10/tmp/lightgbm/

#model evaluation file
dir_model_evaluation=C:/Dev/experiment/expr10/evaluation/

#modelファイル格納先
dir_model_release=C:/Dev/experiment/expr10/model_release/

#実験結果ファイル格納先
# expr10_result.tsv : 実験結果を累積する
# 1_1_nopattern_3T_123.png : 実験番号1,model番号1,3T,123のgraph
dir_result=F:/Dev/experiment/expr10/result/

# sqlファイルをscanする対象ディレクトリ
dir_sql=C:/Dev/github/pod_boatrace/properties/expr10/

# sqlファイルリスト（コンマ区分）
files_sql=sqls_1.sql,sqls_2.sql

# ResultStat(pattern,bettype,kumiban)毎の開始残高。
# 卍式ベッティング金額計算時に利用する(ベッティング金額 = 残高 * 0.08 * オッズ）
stat_start_balance=100000

# pythonプロジェクトのHOMEディレクトリ python実行時classpathに相当
python_path=C:/Dev/github/py_boatrace

# メモリに保持するClassifierの数
classifier_queue_max=60

# WebSocketサーバURL（PYTHON）
websocket_url_python=ws://localhost:8091

# pythonサーバー用のモデル情報ファイル
# classId::algorighmid::features
# ex) 00005_rank1=r1_123456::cf_lgbm-1_py::en1,en2,en3,nw4,nw5,nw6::category,category,category,float,float,float
file_model_info=C:/Dev/github/pod_boatrace/properties/expr10/model.properties

# pythonサーバーlogging定義ファイル
file_python_log_config=C:/Dev/github/py_boatrace/log_config.json

file_python_log=C:/Dev/github/pod_boatrace_test/logs/python/{}.log

# オッズを直前まで取得して直前オッズやオッズ予測が可能な開始日付(OddsMonitorManagerで使用)
odds_monitoring_start_ymd=20210602

############# rmi data server定義
# simulationデータ提供対象期間
#dataserver_simulation_period=20180601~20230420
#dataserver_simulation_period=20200602~20231004
dataserver_simulation_period=20210603~20211231
dataserver_simulation_grade='ip','G3','G2','G1','SG'

# オッズ提供対象bettype
bettype=1T,2T,3T,2F,3F
rankcnt=3

# classification data 取得対象のmodelnoリスト
#dataserver_classification_models=99080,99100,97080,97100
#dataserver_classification_models=99080,99100,99102,99103,97080,97100,97102,97103
#dataserver_classification_models=99100,90100,90102,90103,70101,79101,70103
#dataserver_classification_models=11402,13402
#dataserver_classification_models=99100,79101,11609,21609
dataserver_classification_models=99100,89101,99101,99102

# rmi接続情報
dataserver.rmi.url=rmi://localhost:51761/boatml
dataserver.rmi.port=51761
######################### bet金額 #####################################
BET_1T=100
BET_2T=100
BET_2F=100
BET_3T=100
BET_3F=100

######################### simulation start #####################################

##1 or 2 or online
## 1=test 2=最終 3=実践
simulation_step=1
dir_groups_step1=D:/simul_TSV/groups_test/

# ResultStatを生成する単位  bettype, prediction, pattern, unified
#stat_unit=bettype,prediction
stat_unit=bettype,prediction,patternid,pattern

##------------- simulation step 1 
#ヒストグラム分割  x=使用しない
file_histogram_values=C:/Dev/github/pod_boatrace/properties/expr10/histogram_values.properties
#file_histogram_values=x

#FSB,GPTのsqlで<optional></optional>を含めるかの可否 yes,no (test_FSB(4)でyes利用)
optional_sql=yes

#MLのシミュレーションtest定義ファイル(Excel) filepath#sheet
#file_simul_config_step1=C:/Dev/github/pod_boatrace/document/expr10/st2/result_config.xlsx#simulation
#dir_simul_output_step1=D:/Dev/experiment/expr10/simulation_step1/simul_STA/
#dir_groups_output_step1=D:/Dev/experiment/expr10/work/groups_store/

file_simul_config_step1=C:/Dev/github/pod_boatrace/document/expr10/st2/bork_simulation_big.xlsx#test_VIC_BIG_2
dir_simul_output_step1=D:/simul_step1/test/
dir_groups_output_step1=D:/simul_step1/test/groups/

# 選択したresultグラフファイルの格納先 EvaluationSimulLoaderResultGraphFilename
dir_result_selected=D:/Dev/experiment/expr10/result_selected
dir_simul_selected=D:/Dev/experiment/expr10/simulation_step1/simul4_4_FPI-5_selected/

# 20220914 EvaluationFileLoader or EvaluationSimul2Loader or 
# EvaluationSimulExcelLoader or EvaluationSimulLoaderBork or EvaluationSimulLoaderPr 
# or EvaluationSimulLoaderPtnId or EvaluationSimulLoaderResultGraphFilename
# or EvaluationSimulLoaderFPI5GraphFilename or EvaluationSimulLoaderFPI7 or EvaluationSimulLoaderFPI8 or EvaluationSimulTsvFileLoader
# or EvaluationSimulLoaderBIG or EvaluationSimulLoaderBV or EvaluationStep2Loader
evaluation_loader=EvaluationSimulLoaderBV

# 20220914 x=EvaluationPatternMatcher  else=EvaluationPatternMatcher2(全patternid一致チェック)
pattern_matcher=x

#groupシミュレーションをexcelで定義
file_group_config_step1=C:/Dev/github/pod_boatrace/document/expr10/simul1_group.xlsx#groups

##------------- simulation step 2
#MLのシミュレーション最終定義ファイル(Excel) filepath#sheet
file_simul_config_step2=C:/Dev/github/pod_boatrace/document/expr10/st2/last_test.xlsx#test
dir_simul_output_step2=D:/simul_step2/
dir_groups_step2=D:/simul_step2/groups/
dir_groups_output_step2=D:/simul_step2/groups/output/

######################### simulation end #####################################

############# model 項目preset
outlier_method=no
outlier_field=sanrentanprize
grade_condition='ip', 'G3', 'G2', 'G1', 'SG'


############# シミュレーション項目preset
# term_split=1の場合 5= probabilityとroddsrankの分布 6=probabilityとboddsrankの分布
# term_split=2の場合 1=분할result 2=분할simulation(bork포함) 3=단일simulation
#graph_type=6
graph_type=4

bork_min=1
bork_max=20
rork_min=1
rork_max=20
pr_min=0.01
pr_max=1
#bork期間単位統計の期間分割数
bork_term_max=10


# 2023/4/2 group file 보존여부
save_group=yes
save_graph=yes
save_stat=yes
delete_saved_stat=yes
save_result=yes
chart_size_x=700
chart_size_y=700

# 2022/7/30 simul_1확인시 시간절약을 위해 !all그래프 한개만 출력하게한다. count/ptn
graph_only_count_all=yes

# 2023/1/11 simul_1이면서 pattern단위 출력일 때, all출력은 생략하려고.
graph_only_pattern=yes


# bork등을 두개로 쪼갤것인가 여부 1=ResultGraphBuilder 2=ResultGraphBuilderSplit
term_split=1

term_days_balance=1
term_days_performance=1
#term_days_balance=15
#term_days_performance=15

# graph出力対象の収益率範囲 min_incomerateを範囲に変えた（result_config#4161から）
incomerate_range=0~99

############# simulation定義を簡略化する。 2022/8/5
# 20230928追加
cond_max=10
# 202310追加
cond_field=incrate
custom=%wk%

limited_formation=no
limited_kumiban=1234-*-*
evaluations_id=x
probability_type=default
used_model_no=x
split=1
result_sql_id=s-all
groups=0
pattern_id=x
# count or literal
pattern_type=count
# mod, ptid, ptn, mod+ptid
pattern_fields=mod+ptid
range_selector=x
bonus_pr=x
bonus_bor=x
bonus_bork=x
bonus_borkbor=x
model_selector=betcnt
result_class_id=Default
simul_class_id=SCDefault
# 20220913 削除 ptncnt_bonus=x
pattern_selector=x
prediction_selector=x
min_betrate=0
min_betcnt=0
min_incomerate=0

# 20221112追加
factor=x
incr=x
limit=x
bork_trim=x
bork_range=x
bork_bor_convert=x
model=x

#期間定義 833_1=result_type 21, 833_2=result_type 22, 833_3=result_type 23, 
term_L1=20230901~20231015
term_L2=20231016~20231115

term_2020=20200602~20210601

term_77=20210602~20220731
term_77R=20220901~20230831
term_555=20210602~20220831
term_555R=20220901~20230831

term_777=20210602~20230228
term_777R=20230301~20230831
term_5555=20210602~20230131
term_5555R=20230301~20230831

term_777_123=20210602~20230228
term_777_r123=20230301~20230831

term_7-3_r1=20230301~20230430
term_7-3_r2=20230501~20230630
term_7-3_r3=20230701~20230831

term_5-3_r1=20220901~20221231
term_5-3_r2=20230101~20230430
term_5-3_r3=20230501~20230831

term_5-4_r1=20230201~20230410
term_5-4_r2=20230411~20230620
term_5-4_r3=20230621~20230831

term_v1_r1=20220801~20221210
term_v1_r2=20221211~20230420
term_v1_r3=20230421~20230831

term_v2_r1=20230301~20230430
term_v2_r2=20230501~20230630
term_v2_r3=20230701~20230831

term_v3_r1=20220901~20221231
term_v3_r2=20230101~20230430
term_v3_r3=20230501~20230831

term_v4_r1=20230201~20230410
term_v4_r2=20230411~20230620
term_v4_r3=20230621~20230831

term_777_1=20210602~20211231
term_777_2=20220101~20220731
term_777_3=20220801~20230228
term_777_R1=20230301~20230515
term_777_R2=20230516~20230731
term_5555_1=20210602~20211031
term_5555_2=20211101~20220331
term_5555_3=20220401~20220831
term_5555_4=20220901~20230131
term_5555_R1=20230201~20230430
term_5555_R2=20230501~20230731

term_555_R1=20220901~20230131
term_555_R2=20230201~20230630

term_77_R1=20220801~20221231
term_77_R2=20230101~20230430
term_77_R3=20230501~20230831

term_55_R1=20220901~20221231
term_55_R2=20230101~20230430
term_55_R3=20230501~20230831

term_5_R1=20230201~20230410
term_5_R2=20230411~20230620
term_5_R3=20230621~20230831


term_6_1=20210602~20210930
term_6_2=20211001~20220131
term_6_3=20220301~20220531
term_6_4=20220601~20220930
term_6_5=20221001~20230131
term_6_6=20230201~20230531
term_8_7=20221201~20230228
term_8_8=20230301~20230531
term_22_1=20210602~20211130
term_22_2=20211201~20220531
term_22_12=20210602~20220531
term_22_3=20220601~20221130
term_22_4=20221201~20230531



term_66_1=20210602~20211130
term_66_2=20211201~20220531
term_66_3=20220601~20221130
term_66_4=20221201~20230531
term_66_R1=20220601~20221130
term_66_R2=20221201~20230531
term_66_T1=20220601~20220930
term_66_T2=20221001~20230131
term_66_T3=20230201~20230531
term_664_3=20220601~20220930
term_664_4=20221001~20230131
term_664_5=20230201~20230531


# 最終結果確認
term_last=20210602~20221031

#term_R2=20230201~20230310
#term_R3=20230311~20230420
#term_R23=20230201~20230420

#term_2y_12=20190602~20210601
#term_2y_R1=20210602~20211231
#term_2y_R2=20220101~20220731

#term_77_1=20210602~20211231
#term_77_2=20220101~20220731
#term_77_3=20220801~20230228
#term_77_R2=20230301~20230531
#term_77_12=20210602~20220731
#term_77_A=20210602~20230531
#term_77_123=20210602~20230228


#term_555_1=20210602~20211031
#term_555_2=20211101~20220331
#term_555_3=20220401~20220831
#term_555_R=20220901~20230131
#term_555_123=20210602~20220831

#term_15_1=20210602~20220831
#term_15_2=20220901~20230131

#term_5_1=20220401~20220831
#term_5_2=20220901~20230131
#term_5_3=20230201~20230228
#term_5_4=20230301~20230331

#term_10_1=20210601~20220331
#term_10_2=20220401~20230131
#term_10_3=20230201~20230228
#term_10_4=20230301~20230331

#term_15_1=20200801~20211031
#term_15_2=20211101~20230131
#term_15_3=20230201~20230228
#term_15_4=20230301~20230331

#term_20_1=20191001~20210531
#term_20_2=20210601~20230131
#term_20_3=20230201~20230228
#term_20_4=20230301~20230331

#term_12_1=20210201~20220131
#term_12_2=20220201~20230131
#term_12_3=20230201~20230228
#term_12_4=20230301~20230331


#term_842_1=20180601~20220131
#term_842_2=20210602~20220131
#term_842_3=20220201~20220531
#term_842_4=20220601~20220731
#
#term_833_1=20180601~20220131
#term_833_2=20210602~20220131
#term_833_3=20220201~20220430
#term_833_4=20220501~20220731
#
#term_662_1=20180601~20211130
#term_662_2=20210602~20211130
#term_662_3=20211201~20220531
#term_662_4=20220601~20220731
#
#term_555_0=20180601~20211031
#term_555_12=20210602~20220331
#term_555_3=20220401~20220830
#
#term_554_1=20180601~20211031
#term_554_2=20210602~20211031
#term_554_3=20211101~20220331
#term_554_4=20220401~20220731
#term_554_9=20210602~20220731
#
#
#term_999=20210602~20220731
#
#term_663_1=20210602~20211130
#term_663_2=20211201~20220531
#term_663_3=20220601~20220831
#
#term_1232_0=20180601~20210601
#term_1232_1=20210602~20220531
#term_1232_2=20220601~20220830
#term_1232_3=20220901~20221031
#term_1232_12=20210602~20220830
#term_1232_23=20220601~20221031
#term_1232_123=20210602~20221031
#
#term_1252_2=20220601~20221031
#
#term_8820=20180601~20210601
#term_882_1=20210602~20220131
#term_882_2=20220201~20220930
#term_882_3=20221001~20221130
#
#
#term_774_12=20210602~20220731
#term_774_3=20220801~20221130
#
#term_1442_1=20210602~20220731
#term_1442_2=20220801~20221130
#term_1442_3=20221201~20230131
#
#term_6662_0=20180601~20210601
#term_6662_1=20210602~20211130
#term_6662_2=20211201~20220531
#term_6662_12=20210602~20220531
#term_6662_3=20220601~20221130
#term_6662_4=20221201~20230131
#
## bork존재기간만 대상
#term_12332_0=20210602~20220531
#term_12332_1=20220601~20220831
#term_12332_2=20220901~20221130
#term_12332_3=20221201~20230131

#term_775_1=20210602~20211231
#term_775_2=20220101~20220731
#term_774_3=20220801~20221130

#term_1262_1=20210602~20220531
#term_1262_2=20220601~20221130

factor_i0=i0
factor_i1=i1
factor_i2=i2
factor_i09=(i0+i1+i2+i3+i4+i5+i6+i7+i8+i9)
factor_i02=i0+i1+i2
factor_i04=i0+i1+i2+i3+i4
factor_i19=(i1+i2+i3+i4+i5+i6+i7+i8+i9)
factor_i39=(i3+i4+i5+i6+i7+i8+i9)
factor_i27=(i2+i3+i4+i5+i6+i7)
factor_si09=(i0*4+i1*2+i2*1.5+i3*4+i4*2+i5+i6+i7+i8+i9)
factor_si02=i0*4+i1*2+i2*1.5
factor_si04=i0*4+i1*2+i2*1.5+i3+i4
factor_si19=(i1*2+i2*1.5+i3+i4+i5+i6+i7+i8+i9)
factor_si39=(i3+i4+i5+i6+i7+i8+i9)
factor_si27=(i2*1.5+i3+i4+i5+i6+i7)
factor_i27=(i2+i3+i4+i5+i6+i7)
factor_i59=(i5+i6+i7+i8+i9)
factor_i04-100=((i0+i1+i2+i3+i4)/100)
factor_i14=i1+i2+i3+i4
factor_tpc0=tpc0
factor_tpc1=tpc1
factor_tpc2=tpc2
factor_tpc02=((tpc0+tpc1+tpc2)::float / (case when (tc0+tc1+tc2) = 0 then 1 else (tc0+tc1+tc2) end)::float)
factor_tpc04=((tpc1+tpc2+tpc3+tpc4)::float / (case when (tc1+tc2+tc3+tc4) = 0 then 1 else (tc1+tc2+tc3+tc4) end)::float)
factor_tpc14=((tpc1+tpc2+tpc3+tpc4)::float / (case when (tc1+tc2+tc3+tc4) = 0 then 1 else (tc1+tc2+tc3+tc4) end)::float)
factor_i09=i0+i1+i2+i3+i4+i5+i6+i7+i8+i9
factor_incrate=incrate
