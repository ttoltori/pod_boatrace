<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pengkong.boatrace.mybatis.client.CustomMapper">
  <resultMap id="ResultArrayMap" type="com.pengkong.boatrace.server.db.dto.DBRecord">
    <!--
      JSJ 自動生成で上書きされた場合、typeHandler宣言の参照用
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="probabilities1" jdbcType="ARRAY" property="probabilities1" typeHandler="com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler"/>
    <result column="probabilities2" jdbcType="ARRAY" property="probabilities2" typeHandler="com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler"/>
    <result column="probabilities3" jdbcType="ARRAY" property="probabilities3" typeHandler="com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler"/>
    <result column="nationwiningrate" jdbcType="ARRAY" property="nationwiningrate" typeHandler="com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler"/>
    <result column="entry" jdbcType="ARRAY" property="entry" typeHandler="com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler"/>
    <result column="betcnt_arr" jdbcType="ARRAY" property="betcnt_arr" typeHandler="com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler"/>
    <result column="hitcnt_arr" jdbcType="ARRAY" property="hitcnt_arr" typeHandler="com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler"/>
    <result column="betamt_arr" jdbcType="ARRAY" property="betamt_arr" typeHandler="com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler"/>
    <result column="hitamt_arr" jdbcType="ARRAY" property="hitamt_arr" typeHandler="com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler"/>
    <result column="bor_min_arr" jdbcType="ARRAY" property="bor_min_arr" typeHandler="com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler"/>
    <result column="bor_max_arr" jdbcType="ARRAY" property="bor_max_arr" typeHandler="com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler"/>
  </resultMap>
  <select id="selectSql" parameterType="hashmap" resultType="com.pengkong.boatrace.server.db.dto.DBRecord" resultMap="ResultArrayMap">
    <![CDATA[
	  	${sql}
    ]]>
  </select>


  <select id="selectRankExtMonthly" parameterType="hashmap" resultType="com.pengkong.boatrace.server.db.dto.RankDbRecord">
    <![CDATA[
  		select * from rank_ext_balance_bak where description = #{description} order by extkey, ym::int
    ]]>
  </select>
  
  <select id="selectSimulationRaces" parameterType="hashmap" resultType="com.pengkong.boatrace.server.db.dto.RankDbRecord">
    <![CDATA[
    	select
			race.ymd, race.jyocd, race.raceno::text, race.sime,
			-- 패턴 유닛명 일람 --
			turn, timezone, racetype_simple racetype, alevelcount::text, 
			substring(wakulevellist from 1 for 2) level1, 'nopattern' nopattern,
			substring(race.wakulevellist from 1 for 5) level12,
			substring(race.wakulevellist from 1 for 11) level1234,
			substring(race.ymd from 5 for 2) mm, 
			-- 패턴 유닛명 일람 --
			entry[1] entry1, entry[2] entry2, entry[3] entry3, entry[4] entry4, entry[5] entry5, entry[6] entry6,
		    ((nationwiningrate1::int)::text || lpad((nation2winingrate1::int)::text,2,'0') || lpad((nation3winingrate1::int)::text,2,'0'))::double precision ranknationrate1, 
		    ((nationwiningrate2::int)::text || lpad((nation2winingrate2::int)::text,2,'0') || lpad((nation3winingrate2::int)::text,2,'0'))::double precision ranknationrate2, 
		    ((nationwiningrate3::int)::text || lpad((nation2winingrate3::int)::text,2,'0') || lpad((nation3winingrate3::int)::text,2,'0'))::double precision ranknationrate3, 
		    ((nationwiningrate4::int)::text || lpad((nation2winingrate4::int)::text,2,'0') || lpad((nation3winingrate4::int)::text,2,'0'))::double precision ranknationrate4, 
		    ((nationwiningrate5::int)::text || lpad((nation2winingrate5::int)::text,2,'0') || lpad((nation3winingrate5::int)::text,2,'0'))::double precision ranknationrate5, 
		    ((nationwiningrate6::int)::text || lpad((nation2winingrate6::int)::text,2,'0') || lpad((nation3winingrate6::int)::text,2,'0'))::double precision ranknationrate6, 
			sanrentanno::text result_rank123,
			tansyono, tansyoprize, nirentanno, nirentanprize, sanrentanno, sanrentanprize, 
			nirenhukuno, nirenhukuprize, sanrenhukuno, sanrenhukuprize
    	from rec_race race, rec_race_waku2 waku2, rec_racer_arr racerarr
    	where race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}
    		and sanrentanno not in ('特払','不成立','発売無') 
    		and race.ymd = racerarr.ymd and race.jyocd = racerarr.jyocd and race.raceno = racerarr.raceno 
    		and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
    	order by ymd, sime
    ]]>
  </select>
  <select id="selectRankFilterAll" resultType="com.pengkong.boatrace.server.db.dto.RankDbRecord">
    <![CDATA[
	   	select
			m.pattern_name, m.attributes, m.algorithm,
			f.*
		from rank_model m, rank_filter f
		where m.description = f.description
    ]]>
  </select>
  <select id="selectRankFilterByRankType" parameterType="hashmap" resultType="com.pengkong.boatrace.server.db.dto.RankDbRecord">
    <![CDATA[
	   	select
			m.pattern_name, m.attributes, m.algorithm,
			f.*
		from rank_model m, rank_filter f
		where m.description = f.description
			and ranktype = #{rankType}
    ]]>
  </select>
  <!-- 빠른 시뮬레이션을 위해 예측기를 사용하지 않고 rank_result를 이용해서 예측한다.-->
  <select id="selectRankClassifierCenter" parameterType="hashmap" resultType="com.pengkong.boatrace.server.db.dto.DBRecord">
    <![CDATA[
		select
		  res.description, res.pattern, ymd, jyocd, raceno::text, predict_rank123
		from rank_result res, rank_filter fil
		where res.description = fil.description
		  and res.pattern = fil.pattern
		  and res.ymd >= #{fromYmd} and res.ymd <= #{toYmd}
		group by res.description, res.pattern, ymd, jyocd, raceno, predict_rank123
		order by res.description, res.pattern, ymd, jyocd, raceno, predict_rank123 
    ]]>
  </select>
  <select id="selectRegressionDbList" parameterType="hashmap" resultType="com.pengkong.boatrace.server.db.dto.DBRecord">
    <![CDATA[
		select
		    cast (race.ymd as int),
		    race.jyocd,
		    race.raceno::text,
			race.turn,
			tansyono::text,
			tansyoprize::text,
			nirentanno::text,
			nirentanprize::text,
			sanrentanno::text,
			sanrentanprize::text,
			nirenhukuno::text,
			nirenhukuprize::text,
			sanrenhukuno::text,
			sanrenhukuprize::text,
			nationwiningrate1::text,
			nationwiningrate2::text,
			nationwiningrate3::text,
			nationwiningrate4::text,
			nationwiningrate5::text,
			nationwiningrate6::text,
			racerwiningrate1::text,
			racerwiningrate2::text,
			racerwiningrate3::text,
			racerwiningrate4::text,
			racerwiningrate5::text,
			racerwiningrate6::text
		from rec_race race, rec_race_waku2 waku2, stat_waku_win swaku
		where 
		  (  tansyono not in ('特払','不成立','発売無') and
		     nirentanno not in ('特払','不成立','発売無') and
		     nirenhukuno not in ('特払','不成立','発売無') and
		     sanrentanno not in ('特払','不成立','発売無') and
		     sanrenhukuno not in ('特払','不成立','発売無')
		  ) 
		  and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
		  and race.ymd = swaku.ymd and race.jyocd = swaku.jyocd and race.raceno = swaku.raceno
		  and race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}  
		  and (tansyono in ('1','2','3') or
		  	   nirentanno in ('12', '13', '21', '31') or
		  	   sanrentanno in ('123', '132', '213', '231', '312', '321') or
		  	   nirenhukuno in ('12', '13') or
		  	   sanrenhukuno in ('123')
		      )
		order by race.ymd
    ]]>
  </select>  
  <!-- 
  -->
  <select id="selectResultWithPatterns" parameterType="hashmap" resultType="com.pengkong.boatrace.server.db.dto.BoatDbRecord">
    <![CDATA[
		select
			stat.ymd,
			stat.sime,
			stat.jyocd,
			stat.raceno::text,
			stat.description,
			stat.bettype,
			stat.bet_kumiban,
			cast(stat.bet_odds as double precision),
			stat.bet_oddsrank,
			stat.result_kumiban,
			cast(stat.result_odds as double precision),
			stat.result_oddsrank,
			stat.result_amt,
			stat.hity, 
			stat.hitn, 
			stat.betamt,
			stat.hitamt,
			race.turn,
			race.alevelcount::text,
			race.racetype,
			substring(race.wakulevellist from 1 for 2) as level1,
			substring(race.wakulevellist from 4 for 2) as level2,
			substring(race.wakulevellist from 7 for 2) as level3,
			substring(race.wakulevellist from 10 for 2) as level4,
			substring(race.levelrank from 1 for 1) as levelrank1,
			substring(race.levelrank from 2 for 1) as levelrank2,
			substring(race.levelrank from 3 for 1) as levelrank3,
			substring(race.levelrank from 4 for 1) as levelrank4,
			substring(race.nationwiningrank from 1 for 1) as nationrank1,
			substring(race.nationwiningrank from 2 for 1) as nationrank2,
			substring(race.nationwiningrank from 3 for 1) as nationrank3,
			substring(race.nationwiningrank from 4 for 1) as nationrank4,
			substring(race.nation2winingrank from 1 for 1) as nation2rank1,
			substring(race.nation2winingrank from 2 for 1) as nation2rank2,
			substring(race.nation2winingrank from 3 for 1) as nation2rank3,
			substring(race.nation2winingrank from 4 for 1) as nation2rank4,
			substring(race.nation3winingrank from 1 for 1) as nation3rank1,
			substring(race.nation3winingrank from 2 for 1) as nation3rank2,
			substring(race.nation3winingrank from 3 for 1) as nation3rank3,
			substring(race.nation3winingrank from 4 for 1) as nation3rank4,
			substring(race.localwiningrank from 1 for 1) as localrank1,
			substring(race.localwiningrank from 2 for 1) as localrank2,
			substring(race.localwiningrank from 3 for 1) as localrank3,
			substring(race.localwiningrank from 4 for 1) as localrank4,
			substring(race.local2winingrank from 1 for 1) as local2rank1,
			substring(race.local2winingrank from 2 for 1) as local2rank2,
			substring(race.local2winingrank from 3 for 1) as local2rank3,
			substring(race.local2winingrank from 4 for 1) as local2rank4,
			substring(race.local3winingrank from 1 for 1) as local3rank1,
			substring(race.local3winingrank from 2 for 1) as local3rank2,
			substring(race.local3winingrank from 3 for 1) as local3rank3,
			substring(race.local3winingrank from 4 for 1) as local3rank4,
			substring(race.motor2rank from 1 for 1) as motor2rank1,
			substring(race.motor2rank from 2 for 1) as motor2rank2,
			substring(race.motor2rank from 3 for 1) as motor2rank3,
			substring(race.motor2rank from 4 for 1) as motor2rank4,
			substring(race.motor3rank from 1 for 1) as motor3rank1,
			substring(race.motor3rank from 2 for 1) as motor3rank2,
			substring(race.motor3rank from 3 for 1) as motor3rank3,
			substring(race.motor3rank from 4 for 1) as motor3rank4,
			cast(waku2.nationwiningrate1 as int)::text as nationrate1,
			cast(waku2.nationwiningrate2 as int)::text as nationrate2,
			cast(waku2.nationwiningrate3 as int)::text as nationrate3,
			cast(waku2.nationwiningrate4 as int)::text as nationrate4,
			cast(waku2.nation2winingrate1 / 10 as int)::text as nation2rate1,
			cast(waku2.nation2winingrate2 / 10 as int)::text as nation2rate2,
			cast(waku2.nation2winingrate3 / 10 as int)::text as nation2rate3,
			cast(waku2.nation2winingrate4 / 10 as int)::text as nation2rate4,
			cast(waku2.nation3winingrate1 / 10 as int)::text as nation3rate1,
			cast(waku2.nation3winingrate2 / 10 as int)::text as nation3rate2,
			cast(waku2.nation3winingrate3 / 10 as int)::text as nation3rate3,
			cast(waku2.nation3winingrate4 / 10 as int)::text as nation3rate4,
			cast(waku2.localwiningrate1 as int)::text as localrate1,
			cast(waku2.localwiningrate2 as int)::text as localrate2,
			cast(waku2.localwiningrate3 as int)::text as localrate3,
			cast(waku2.localwiningrate4 as int)::text as localrate4,
			cast(waku2.local2winingrate1 / 10 as int)::text as local2rate1,
			cast(waku2.local2winingrate2 / 10 as int)::text as local2rate2,
			cast(waku2.local2winingrate3 / 10 as int)::text as local2rate3,
			cast(waku2.local2winingrate4 / 10 as int)::text as local2rate4,
			cast(waku2.local3winingrate1 / 10 as int)::text as local3rate1,
			cast(waku2.local3winingrate2 / 10 as int)::text as local3rate2,
			cast(waku2.local3winingrate3 / 10 as int)::text as local3rate3,
			cast(waku2.local3winingrate4 / 10 as int)::text as local3rate4,
			cast(waku2.motor2winingrate1 / 10 as int)::text as motor2rate1,
			cast(waku2.motor2winingrate2 / 10 as int)::text as motor2rate2,
			cast(waku2.motor2winingrate3 / 10 as int)::text as motor2rate3,
			cast(waku2.motor2winingrate4 / 10 as int)::text as motor2rate4,
			cast(waku2.motor3winingrate1 / 10 as int)::text as motor3rate1,
			cast(waku2.motor3winingrate2 / 10 as int)::text as motor3rate2,
			cast(waku2.motor3winingrate3 / 10 as int)::text as motor3rate3,
			cast(waku2.motor3winingrate4 / 10 as int)::text as motor3rate4,
   			substring(statr.racerwiningrank from 1 for 1) as racerrank1,
			substring(statr.racerwiningrank from 2 for 1) as racerrank2,
			substring(statr.racerwiningrank from 3 for 1) as racerrank3,
			substring(statr.racerwiningrank from 4 for 1) as racerrank4,
			substring(statr.racer2winingrank from 1 for 1) as racer2rank1,
			substring(statr.racer2winingrank from 2 for 1) as racer2rank2,
			substring(statr.racer2winingrank from 3 for 1) as racer2rank3,
			substring(statr.racer2winingrank from 4 for 1) as racer2rank4,
			substring(statr.racer3winingrank from 1 for 1) as racer3rank1,
			substring(statr.racer3winingrank from 2 for 1) as racer3rank2,
			substring(statr.racer3winingrank from 3 for 1) as racer3rank3,
			substring(statr.racer3winingrank from 4 for 1) as racer3rank4,
			cast(swaku.racerwiningrate1 as int)::text as racerrate1,
			cast(swaku.racerwiningrate2 as int)::text as racerrate2,
			cast(swaku.racerwiningrate3 as int)::text as racerrate3,
			cast(swaku.racerwiningrate4 as int)::text as racerrate4,
			cast(swaku.racer2winingrate1 * 10 as int)::text as racer2rate1,
			cast(swaku.racer2winingrate2 * 10 as int)::text as racer2rate2,
			cast(swaku.racer2winingrate3 * 10 as int)::text as racer2rate3,
			cast(swaku.racer2winingrate4 * 10 as int)::text as racer2rate4,
			cast(swaku.racer3winingrate1 * 10 as int)::text as racer3rate1,
			cast(swaku.racer3winingrate2 * 10 as int)::text as racer3rate2,
			cast(swaku.racer3winingrate3 * 10 as int)::text as racer3rate3,
			cast(swaku.racer3winingrate4 * 10 as int)::text as racer3rate4
		from stat_ml_result stat, rec_race race, rec_race_metric metric, rec_race_waku2 waku2, rec_racer_arr racerarr, stat_waku_win swaku, stat_race statr
		where race.ymd = stat.ymd and race.jyocd = stat.jyocd and race.raceno = stat.raceno
		  and race.ymd = metric.ymd and race.jyocd = metric.jyocd and race.raceno = metric.raceno
		  and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
		  and race.ymd = racerarr.ymd and race.jyocd = racerarr.jyocd and race.raceno = racerarr.raceno
		  and race.ymd = swaku.ymd and race.jyocd = swaku.jyocd and race.raceno = swaku.raceno
		  and race.ymd = statr.ymd and race.jyocd = statr.jyocd and race.raceno = statr.raceno
		  and stat.ymd >= #{fromYmd} and stat.ymd <= #{toYmd}
		order by race.ymd, race.sime, race.jyocd
    ]]>
  </select>  
  <select id="selectFinalizedPtnNames" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select
		  description, bettype, kumiban, pattern_name 
		from stat_ml_ptn_final final   
		where final.description = #{description} and final.bettype = #{betType} and final.kumiban = #{kumiban}
		group by description, bettype, kumiban, pattern_name
    ]]>
  </select>  
  <select id="select70" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
		    race.ymd,
		    race.jyocd,
		    race.raceno,
		    race.sime,
			entry[1] entry1, entry[2] entry2, entry[3] entry3, entry[4] entry4, entry[5] entry5, entry[6] entry6,  
			tansyono,
			tansyoprize,
			tansyopopular,
			nirentanno,
			nirentanprize,
			nirentanpopular,
			sanrentanno,
			sanrentanprize,
			sanrentanpopular,
			nirenhukuno,
			nirenhukuprize,
			nirenhukupopular,
			sanrenhukuno,
			sanrenhukuprize,
			sanrenhukupopular 
		from rec_race race, rec_racer_arr racerarr
		where race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}
		  and race.ymd = racerarr.ymd and race.jyocd = racerarr.jyocd and race.raceno = racerarr.raceno
    ]]>
  </select>  
  <select id="select70Step2" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
		  stat.*, 
		  stat.bet_kumiban kumiban201, 
		  race.turn, 
		  race.racetype_simple, 
		  race.alevelcount alcount, 
		  substring(race.wakulevellist from 1 for 5) wakulevel12
		from rec_race race, stat_ml_result stat 
		 where stat.description = #{description} and stat.ymd >= #{fromYmd} and stat.ymd <= #{toYmd} 
		 and race.ymd = stat.ymd and race.jyocd = stat.jyocd and race.raceno = stat.raceno 
    ]]>
  </select>  
  <select id="select70_ori" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
		    race.*,
		    substring(levelrank from 1 for 1) levelrank_1,
		    substring(levelrank from 2 for 1) levelrank_2,
		    substring(levelrank from 3 for 1) levelrank_3,
		    substring(levelrank from 4 for 1) levelrank_4,
		    substring(levelrank from 5 for 1) levelrank_5,
		    substring(levelrank from 6 for 1) levelrank_6,
		    substring(nationwiningrank from 1 for 1) nationwiningrank_1,
		    substring(nationwiningrank from 2 for 1) nationwiningrank_2,
		    substring(nationwiningrank from 3 for 1) nationwiningrank_3,
		    substring(nationwiningrank from 4 for 1) nationwiningrank_4,
		    substring(nationwiningrank from 5 for 1) nationwiningrank_5,
		    substring(nationwiningrank from 6 for 1) nationwiningrank_6,
		    substring(racerwiningrank from 1 for 1) racerwiningrank_1,
		    substring(racerwiningrank from 2 for 1) racerwiningrank_2,
		    substring(racerwiningrank from 3 for 1) racerwiningrank_3,
		    substring(racerwiningrank from 4 for 1) racerwiningrank_4,
		    substring(racerwiningrank from 5 for 1) racerwiningrank_5,
		    substring(racerwiningrank from 6 for 1) racerwiningrank_6,
			entry[1] entry1, entry[2] entry2, entry[3] entry3, entry[4] entry4, entry[5] entry5, entry[6] entry6, 
			sex[1] sex1, sex[2] sex2, sex[3] sex3, sex[4] sex4, sex[5] sex5, sex[6] sex6, 
			age[1] age1, age[2] age2, age[3] age3, age[4] age4, age[5] age5, age[6] age6, 
			level[1] level1, level[2] level2, level[3] level3, level[4] level4, level[5] level5, level[6] level6, 
			weight[1] weight1, weight[2] weight2, weight[3] weight3, weight[4] weight4, weight[5] weight5, weight[6] weight6, 
			branch[1] branch1, branch[2] branch2, branch[3] branch3, branch[4] branch4, branch[5] branch5, branch[6] branch6, 
			exhibit[1] exhibit1, exhibit[2] exhibit2, exhibit[3] exhibit3, exhibit[4] exhibit4, exhibit[5] exhibit5, exhibit[6] exhibit6, 
			startexhibit[1] startexhibit1, startexhibit[2] startexhibit2, startexhibit[3] startexhibit3, startexhibit[4] startexhibit4, startexhibit[5] startexhibit5, startexhibit[6] startexhibit6, 
			flying[1] flying1, flying[2] flying2, flying[3] flying3, flying[4] flying4, flying[5] flying5, flying[6] flying6, 
			late[1] late1, late[2] late2, late[3] late3, late[4] late4, late[5] late5, late[6] late6, 
			averagestart[1] averagestart1, averagestart[2] averagestart2, averagestart[3] averagestart3, averagestart[4] averagestart4, averagestart[5] averagestart5, averagestart[6] averagestart6, 
			avgtime[1] avgtime1, avgtime[2] avgtime2, avgtime[3] avgtime3, avgtime[4] avgtime4, avgtime[5] avgtime5, avgtime[6] avgtime6, 
			motorno[1] motorno1, motorno[2] motorno2, motorno[3] motorno3, motorno[4] motorno4, motorno[5] motorno5, motorno[6] motorno6, 
			waku2.nationwiningrate1,  waku2.nationwiningrate2, waku2.nationwiningrate3, waku2.nationwiningrate4, waku2.nationwiningrate5, waku2.nationwiningrate6,
			nationwining12, nationwining13, nationwining14, nationwining23, nationwining24, nationwining34,
			racerwiningrate1,  racerwiningrate2, racerwiningrate3, racerwiningrate4, racerwiningrate5, racerwiningrate6,
			racerwining12, racerwining13, racerwining14, racerwining23, racerwining24, racerwining34,
			levelrank, nationwiningrank, racerwiningrank, localwiningrank, motorwiningrank, nation2winingrank, racer2winingrank,
			startexhibitrank, exhibitrank, averagestartrank, avgstcondrank, setuwinrank, motor2rank, motor2winingrank,
			wr11122122,
			win1_rank1_famerate wr11famerate, win1_rank2_famerate wr12famerate, win1_rank3_famerate wr13famerate,
			win2_rank1_famerate wr21famerate, win2_rank2_famerate wr22famerate, win2_rank3_famerate wr23famerate, 
			win3_rank1_famerate wr31famerate, win3_rank2_famerate wr32famerate, win3_rank3_famerate wr33famerate
		from rec_race race, rec_race_waku2 waku2, rec_race_waku waku, rec_race_gap rgap 
		     , wrwaku_fame_rank3 rank3, stat_waku_win wakuwin, stat_race_gap sgap, stat_race stat, rec_racer_arr racerarr
		where race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}
		  and race.ymd = waku.ymd and race.jyocd = waku.jyocd and race.raceno = waku.raceno
		  and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
		  and race.ymd = rgap.ymd and race.jyocd = rgap.jyocd and race.raceno = rgap.raceno
		  and race.ymd = rank3.ymd and race.jyocd = rank3.jyocd and race.raceno = rank3.raceno
		  and race.ymd = wakuwin.ymd and race.jyocd = wakuwin.jyocd and race.raceno = wakuwin.raceno
		  and race.ymd = sgap.ymd and race.jyocd = sgap.jyocd and race.raceno = sgap.raceno
		  and race.ymd = stat.ymd and race.jyocd = stat.jyocd and race.raceno = stat.raceno
		  and race.ymd = racerarr.ymd and race.jyocd = racerarr.jyocd and race.raceno = racerarr.raceno
    ]]>
  </select>
  <select id="select66_RaceType" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
			race.*, 
			nationwiningrate1,  nationwiningrate2, nationwiningrate3, nationwiningrate4, nationwiningrate5, nationwiningrate6,
			localwiningrate1,  localwiningrate2, localwiningrate3, localwiningrate4, localwiningrate5, localwiningrate6,
			nationwining12, nationwining13, nationwining14, nationwining23, nationwining24, nationwining34,
			localwining12, localwining13, localwining14, localwining23, localwining24, localwining34
		from rec_race race, rec_race_waku2 waku2, rec_race_gap rgap, wrwaku_fame_rank3 rank3
		    , ref_jyo_stat ref 
		where race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}
		  and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
		  and race.ymd = rgap.ymd and race.jyocd = rgap.jyocd and race.raceno = rgap.raceno
		  and race.ymd = rank3.ymd and race.jyocd = rank3.jyocd and race.raceno = rank3.raceno
		  and race.racekey = 'random'
		  and race.jyocd = ref.jyocd and race.racetype = ref.ptn
		  and ( ref.description = 'racetype_stat' and ref.bettype = '2T' and ref.kumiban = '12'
		        and ref.incomerate > 100
		      )
    ]]>
  </select>  
  <select id="select66" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
			race.*, 
			entry1, entry2,entry3,entry4,entry5,entry6,
			nationwiningrate1,  nationwiningrate2, nationwiningrate3, nationwiningrate4, nationwiningrate5, nationwiningrate6,
			nationwining12, nationwining13, nationwining14, nationwining23, nationwining24, nationwining34,
			racerwiningrate1,  racerwiningrate2, racerwiningrate3, racerwiningrate4, racerwiningrate5, racerwiningrate6,
			racerwining12, racerwining13, racerwining14, racerwining23, racerwining24, racerwining34
		from rec_race race, rec_race_waku2 waku2, rec_race_waku waku, rec_race_gap rgap, wrwaku_fame_rank3 rank3, stat_waku_win wakuwin, stat_race_gap sgap 
		where race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}
		  and race.ymd = waku.ymd and race.jyocd = waku.jyocd and race.raceno = waku.raceno
		  and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
		  and race.ymd = rgap.ymd and race.jyocd = rgap.jyocd and race.raceno = rgap.raceno
		  and race.ymd = rank3.ymd and race.jyocd = rank3.jyocd and race.raceno = rank3.raceno
		  and race.ymd = wakuwin.ymd and race.jyocd = wakuwin.jyocd and race.raceno = wakuwin.raceno
		  and race.ymd = sgap.ymd and race.jyocd = sgap.jyocd and race.raceno = sgap.raceno
    ]]>
  </select>
  <select id="select65_RaceType" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
			race.*, 
			nationwiningrate1,  nationwiningrate2, nationwiningrate3, nationwiningrate4, nationwiningrate5, nationwiningrate6,
			localwiningrate1,  localwiningrate2, localwiningrate3, localwiningrate4, localwiningrate5, localwiningrate6,
			nationwining12, nationwining13, nationwining14, nationwining23, nationwining24, nationwining34,
			localwining12, localwining13, localwining14, localwining23, localwining24, localwining34,
			racerwiningrate1,  racerwiningrate2, racerwiningrate3, racerwiningrate4, racerwiningrate5, racerwiningrate6,
			racer2winingrate1,  racer2winingrate2, racer2winingrate3, racer2winingrate4, racer2winingrate5, racer2winingrate6,
			racerwining12, racerwining13, racerwining14, racerwining23, racerwining24, racerwining34,
			racer2wining12, racer2wining13, racer2wining14, racer2wining23, racer2wining24, racer2wining34
		from rec_race race, rec_race_waku2 waku2, rec_race_gap rgap, stat_waku_win wakuwin, stat_race_gap sgap, wrwaku_fame_rank3 rank3
		    , ref_jyo_stat ref 
		where race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}
		  and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
		  and race.ymd = rgap.ymd and race.jyocd = rgap.jyocd and race.raceno = rgap.raceno
		  and race.ymd = wakuwin.ymd and race.jyocd = wakuwin.jyocd and race.raceno = wakuwin.raceno
		  and race.ymd = sgap.ymd and race.jyocd = sgap.jyocd and race.raceno = sgap.raceno
		  and race.ymd = rank3.ymd and race.jyocd = rank3.jyocd and race.raceno = rank3.raceno
		  and race.jyocd = ref.jyocd and race.racetype = ref.ptn
		  and ( ref.description = 'racetype_stat' and ref.bettype = '2F' and ref.kumiban = '12'
		        and ref.incomerate > 100
		      )
    ]]>
  </select>
  <select id="select65" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
			race.*, 
			nationwiningrate1,  nationwiningrate2, nationwiningrate3, nationwiningrate4, nationwiningrate5, nationwiningrate6,
			localwiningrate1,  localwiningrate2, localwiningrate3, localwiningrate4, localwiningrate5, localwiningrate6,
			nationwining12, nationwining13, nationwining14, nationwining23, nationwining24, nationwining34,
			localwining12, localwining13, localwining14, localwining23, localwining24, localwining34,
			racerwiningrate1,  racerwiningrate2, racerwiningrate3, racerwiningrate4, racerwiningrate5, racerwiningrate6,
			racer2winingrate1,  racer2winingrate2, racer2winingrate3, racer2winingrate4, racer2winingrate5, racer2winingrate6,
			racerwining12, racerwining13, racerwining14, racerwining23, racerwining24, racerwining34,
			racer2wining12, racer2wining13, racer2wining14, racer2wining23, racer2wining24, racer2wining34
		from rec_race race, rec_race_waku2 waku2, rec_race_gap rgap, stat_waku_win wakuwin, stat_race_gap sgap, wrwaku_fame_rank3 rank3 
		where race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}
		  and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
		  and race.ymd = rgap.ymd and race.jyocd = rgap.jyocd and race.raceno = rgap.raceno
		  and race.ymd = wakuwin.ymd and race.jyocd = wakuwin.jyocd and race.raceno = wakuwin.raceno
		  and race.ymd = sgap.ymd and race.jyocd = sgap.jyocd and race.raceno = sgap.raceno
		  and race.ymd = rank3.ymd and race.jyocd = rank3.jyocd and race.raceno = rank3.raceno
    ]]>
  </select>
  <select id="select59" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
			race.*, 
			nationwiningrate1,  nationwiningrate2, nationwiningrate3, nationwiningrate4, nationwiningrate5, nationwiningrate6,
			nationwining12, nationwining13, nationwining14, nationwining23, nationwining24, nationwining34,
			racerwiningrate1,  racerwiningrate2, racerwiningrate3, racerwiningrate4, racerwiningrate5, racerwiningrate6,
			racerwining12, racerwining13, racerwining14, racerwining23, racerwining24, racerwining34,
			( case nirentanno
			  when '12' then nirentanno || substring(nationwiningrank from 2 for 1)
			  when '13' then nirentanno || substring(nationwiningrank from 3 for 1)
			  when '14' then nirentanno || substring(nationwiningrank from 4 for 1)
			  else nirentanno end) cls			
		from rec_race race, rec_race_waku2 waku2, rec_race_gap rgap, stat_waku_win wakuwin, stat_race_gap sgap, wrwaku_fame_rank3 rank3 
		where race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}
		  and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
		  and race.ymd = rgap.ymd and race.jyocd = rgap.jyocd and race.raceno = rgap.raceno
		  and race.ymd = wakuwin.ymd and race.jyocd = wakuwin.jyocd and race.raceno = wakuwin.raceno
		  and race.ymd = sgap.ymd and race.jyocd = sgap.jyocd and race.raceno = sgap.raceno
		  and race.ymd = rank3.ymd and race.jyocd = rank3.jyocd and race.raceno = rank3.raceno
    ]]>
  </select>
  <select id="select56" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
			race.*, 
			nationwiningrate1,  nationwiningrate2, nationwiningrate3, nationwiningrate4, nationwiningrate5, nationwiningrate6,
			nationwining12, nationwining13, nationwining14, nationwining23, nationwining24, nationwining34,
			racerwiningrate1,  racerwiningrate2, racerwiningrate3, racerwiningrate4, racerwiningrate5, racerwiningrate6,
			racerwining12, racerwining13, racerwining14, racerwining23, racerwining24, racerwining34
		from rec_race race, rec_race_waku2 waku2, rec_race_gap rgap, stat_waku_win wakuwin, stat_race_gap sgap, wrwaku_fame_rank3 rank3 
		where race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}
		  and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
		  and race.ymd = rgap.ymd and race.jyocd = rgap.jyocd and race.raceno = rgap.raceno
		  and race.ymd = wakuwin.ymd and race.jyocd = wakuwin.jyocd and race.raceno = wakuwin.raceno
		  and race.ymd = sgap.ymd and race.jyocd = sgap.jyocd and race.raceno = sgap.raceno
		  and race.ymd = rank3.ymd and race.jyocd = rank3.jyocd and race.raceno = rank3.raceno
		  and race.turn <> '0'
    ]]>
  </select>
  <select id="select55" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
			race.*, 
			nationwiningrate1,  nationwiningrate2, nationwiningrate3, nationwiningrate4, nationwiningrate5, nationwiningrate6,
			nationwining12, nationwining13, nationwining14, nationwining23, nationwining24, nationwining34,
			racerwiningrate1,  racerwiningrate2, racerwiningrate3, racerwiningrate4, racerwiningrate5, racerwiningrate6,
			racerwining12, racerwining13, racerwining14, racerwining23, racerwining24, racerwining34,
			wr11122122
		from rec_race race, rec_race_waku2 waku2, rec_race_gap rgap, stat_waku_win wakuwin, stat_race_gap sgap, wrwaku_fame_rank3 rank3 
		where race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}
		  and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
		  and race.ymd = rgap.ymd and race.jyocd = rgap.jyocd and race.raceno = rgap.raceno
		  and race.ymd = wakuwin.ymd and race.jyocd = wakuwin.jyocd and race.raceno = wakuwin.raceno
		  and race.ymd = sgap.ymd and race.jyocd = sgap.jyocd and race.raceno = sgap.raceno
		  and race.ymd = rank3.ymd and race.jyocd = rank3.jyocd and race.raceno = rank3.raceno
		  and race.jyocd = #{jyoCd}
    ]]>
  </select>
  <select id="select54" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
			race.*, 
			cast(racerruncount1 as numeric(5,2)),
			cast(racerruncount2 as numeric(5,2)), 
			cast(racerruncount3 as numeric(5,2)), 
			cast(racerruncount4 as numeric(5,2)), 
			cast(racerruncount5 as numeric(5,2)), 
			cast(racerruncount6 as numeric(5,2)), 
			racerwiningrate1,  racerwiningrate2, racerwiningrate3, racerwiningrate4, racerwiningrate5, racerwiningrate6,
			racer2winingrate1,  racer2winingrate2, racer2winingrate3, racer2winingrate4, racer2winingrate5, racer2winingrate6,
			cast(racerruncount12 as numeric(5,2)), 
			cast(racerruncount13 as numeric(5,2)), 
			cast(racerruncount14 as numeric(5,2)), 
			cast(racerruncount23 as numeric(5,2)), 
			cast(racerruncount24 as numeric(5,2)), 
			cast(racerruncount34 as numeric(5,2)),
			racerwining12, racerwining13, racerwining14, racerwining23, racerwining24, racerwining34,
			racer2wining12, racer2wining13, racer2wining14, racer2wining23, racer2wining24, racer2wining34
		from rec_race race, stat_race_gap gap, stat_waku_win wakuwin, wrwaku_fame_rank3 rank3 
		where race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}
		  and race.ymd = gap.ymd and race.jyocd = gap.jyocd and race.raceno = gap.raceno
		  and race.ymd = wakuwin.ymd and race.jyocd = wakuwin.jyocd and race.raceno = wakuwin.raceno
		  and race.ymd = rank3.ymd and race.jyocd = rank3.jyocd and race.raceno = rank3.raceno
		  and rank3.wr11122122 = #{wrWaku}
    ]]>
  </select>
  <select id="select52" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
			race.ymd ymd, race.jyocd jyocd, race.raceno raceno, 
			cast(racerruncount1 as numeric(5,2)),
			cast(racerruncount2 as numeric(5,2)), 
			cast(racerruncount3 as numeric(5,2)), 
			cast(racerruncount4 as numeric(5,2)), 
			cast(racerruncount5 as numeric(5,2)), 
			cast(racerruncount6 as numeric(5,2)), 
			racerwiningrate1,  racerwiningrate2, racerwiningrate3, racerwiningrate4, racerwiningrate5, racerwiningrate6,
			racer2winingrate1,  racer2winingrate2, racer2winingrate3, racer2winingrate4, racer2winingrate5, racer2winingrate6,
			cast(racerruncount12 as numeric(5,2)), 
			cast(racerruncount13 as numeric(5,2)), 
			cast(racerruncount14 as numeric(5,2)), 
			cast(racerruncount23 as numeric(5,2)), 
			cast(racerruncount24 as numeric(5,2)), 
			cast(racerruncount34 as numeric(5,2)),
			racerwining12, racerwining13, racerwining14, racerwining23, racerwining24, racerwining34,
			racer2wining12, racer2wining13, racer2wining14, racer2wining23, racer2wining24, racer2wining34
		from rec_race race, stat_race_gap gap, stat_waku_win wakuwin, wrwaku_fame_rank3 rank3 
		where race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}
		  and race.ymd = gap.ymd and race.jyocd = gap.jyocd and race.raceno = gap.raceno
		  and race.ymd = wakuwin.ymd and race.jyocd = wakuwin.jyocd and race.raceno = wakuwin.raceno
		  and race.ymd = rank3.ymd and race.jyocd = rank3.jyocd and race.raceno = rank3.raceno
		  and rank3.wrwaku = #{wrWaku}
    ]]>
  </select>
  <select id="select50" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
			race.ymd ymd, race.jyocd jyocd, race.raceno raceno, 
			nationwiningrate1, nationwiningrate2, nationwiningrate3, nationwiningrate4, nationwiningrate5, nationwiningrate6,
			nation2winingrate1, nation2winingrate2, nation2winingrate3, nation2winingrate4, nation2winingrate5, nation2winingrate6,
			nationwining12, nationwining13, nationwining14, nationwining15, nationwining16, 
			nationwining24, nationwining34, nationwining45, nationwining46,  
			nation2wining12, nation2wining13, nation2wining14, nation2wining15, nation2wining16, 
			nation2wining24, nation2wining34, nation2wining45, nation2wining46 
		from rec_race race, rec_race_waku2 waku2, rec_race_gap gap, wrwaku_fame_rank3 rank3
		where race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}
		  and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
		  and race.ymd = gap.ymd and race.jyocd = gap.jyocd and race.raceno = gap.raceno
		  and race.ymd = rank3.ymd and race.jyocd = rank3.jyocd and race.raceno = rank3.raceno
		  and rank3.wrwaku = #{wrWaku}
    ]]>
  </select>
  <select id="select49" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
			race.ymd ymd, race.jyocd jyocd, race.raceno raceno, 
			waku2.nationwiningrate1, waku2.nationwiningrate2, waku2.nationwiningrate3, waku2.nationwiningrate4, waku2.nationwiningrate5, waku2.nationwiningrate6,
			waku2.localwiningrate1, waku2.localwiningrate2, waku2.localwiningrate3, waku2.localwiningrate4, waku2.localwiningrate5, waku2.localwiningrate6, 
			wakuwin.racerwiningrate1,  wakuwin.racerwiningrate2, wakuwin.racerwiningrate3, wakuwin.racerwiningrate4, wakuwin.racerwiningrate5, wakuwin.racerwiningrate6,
			gap.nationwining12, gap.nationwining13, gap.nationwining14, gap.nationwining23, gap.nationwining24, gap.nationwining34,
			gap.localwining12, gap.localwining13, gap.localwining14, gap.localwining23, gap.localwining24, gap.localwining34,
			gap.racerwining12, gap.racerwining13, gap.racerwining14, gap.racerwining23, gap.racerwining24, gap.racerwining34
		from rec_race race, rec_race_waku2 waku2, rec_race_gap gap, stat_waku_win wakuwin, wrwaku_fame_rank3 rank3
		where race.ymd >= #{fromYmd} and race.ymd <= #{toYmd}
		  and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
		  and race.ymd = gap.ymd and race.jyocd = gap.jyocd and race.raceno = gap.raceno
		  and race.ymd = wakuwin.ymd and race.jyocd = wakuwin.jyocd and race.raceno = wakuwin.raceno
		  and race.ymd = rank3.ymd and race.jyocd = rank3.jyocd and race.raceno = rank3.raceno
		  and rank3.wrwaku = #{wrWaku}
    ]]>
  </select>
  <select id="select47" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select 
			ymd1 ymd, jyocd1 jyocd, raceno1 raceno,
			nationwiningrate1, nationwiningrate2, nationwiningrate3, nationwiningrate4, nationwiningrate5, nationwiningrate6,
			localwiningrate1, localwiningrate2, localwiningrate3, localwiningrate4, localwiningrate5, localwiningrate6, 
			waku2_motor2winingrate1, waku2_motor2winingrate2, waku2_motor2winingrate3, waku2_motor2winingrate4, waku2_motor2winingrate5, waku2_motor2winingrate6,
			avgtime1, avgtime2, avgtime3, avgtime4, avgtime5, avgtime6,
			avgst1, avgst2, avgst3, avgst4, avgst5, avgst6,
			racerwiningrate1,  racerwiningrate2, racerwiningrate3, racerwiningrate4, racerwiningrate5, racerwiningrate6,
			nationwining12, nationwining13, nationwining14, nationwining23, nationwining24, nationwining34,
			localwining12, localwining13, localwining14, localwining23, localwining24, localwining34,
			motor2wining12, motor2wining13, motor2wining14, motor2wining23, motor2wining24, motor2wining34,
			avgst12, avgst13, avgst14, avgst23, avgst24, avgst34,
			avgtime12,avgtime13, avgtime14, avgtime23, avgtime24,  avgtime34,
			racerwining12, racerwining13, racerwining14, racerwining23, racerwining24, racerwining34,
			motorwining12, motorwining13, motorwining14, motorwining23, motorwining24, motorwining34
		from 
		(
		select 
		  race.ymd ymd1, race.jyocd jyocd1, race.raceno raceno1, race.*, waku.*, waku2.*, gap.*,
		  waku2.motor2winingrate1 waku2_motor2winingrate1,
		  waku2.motor2winingrate2 waku2_motor2winingrate2,
		  waku2.motor2winingrate3 waku2_motor2winingrate3,
		  waku2.motor2winingrate4 waku2_motor2winingrate4,
		  waku2.motor2winingrate5 waku2_motor2winingrate5,
		  waku2.motor2winingrate6 waku2_motor2winingrate6,
		  wakuwin.*
		from rec_race race, rec_race_waku waku, rec_race_waku2 waku2, rec_race_gap gap, stat_waku_win wakuwin, wrwaku_fame_rank3 rank3
		where race.ymd = #{ymd}
		  and nirenhukuno not in ('特払','不成立','発売無')
		  and race.ymd = waku.ymd and race.jyocd = waku.jyocd and race.raceno = waku.raceno
		  and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
		  and race.ymd = gap.ymd and race.jyocd = gap.jyocd and race.raceno = gap.raceno
		  and race.ymd = wakuwin.ymd and race.jyocd = wakuwin.jyocd and race.raceno = wakuwin.raceno
		  and race.ymd = rank3.ymd and race.jyocd = rank3.jyocd and race.raceno = rank3.raceno
		  and rank3.wrwaku in ('141','414')
		) tmp
    ]]>
  </select>
  <select id="select43" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select
			ymd1 ymd, jyocd1 jyocd, raceno1 raceno,
			nationwiningrate1, nationwiningrate2, nationwiningrate3, nationwiningrate4, nationwiningrate5, nationwiningrate6,
			nation2winingrate1, nation2winingrate2, nation2winingrate3, nation2winingrate4, nation2winingrate5, nation2winingrate6,	
			localwiningrate1, localwiningrate2, localwiningrate3, localwiningrate4,	localwiningrate5, localwiningrate6,
			local2winingrate1, local2winingrate2, local2winingrate3, local2winingrate4, local2winingrate5, local2winingrate6, 
			waku2_motor2winingrate1, waku2_motor2winingrate2, waku2_motor2winingrate3, waku2_motor2winingrate4, waku2_motor2winingrate5, waku2_motor2winingrate6,
			avgtime1, avgtime2, avgtime3, avgtime4, avgtime5, avgtime6, avgst1, avgst2, avgst3, avgst4, avgst5, avgst6,
			racerwiningrate1, racerwiningrate2, racerwiningrate3, racerwiningrate4, racerwiningrate5, racerwiningrate6, 
			racer2winingrate1, racer2winingrate2, racer2winingrate3, racer2winingrate4, racer2winingrate5, racer2winingrate6
		from 
		(
			select 
			  race.ymd ymd1, race.jyocd jyocd1, race.raceno raceno1, race.*, waku.*, waku2.*, 
			  waku2.motor2winingrate1 waku2_motor2winingrate1,
			  waku2.motor2winingrate2 waku2_motor2winingrate2,
			  waku2.motor2winingrate3 waku2_motor2winingrate3,
			  waku2.motor2winingrate4 waku2_motor2winingrate4,
			  waku2.motor2winingrate5 waku2_motor2winingrate5,
			  waku2.motor2winingrate6 waku2_motor2winingrate6,
			  wakuwin.*
			from rec_race race, rec_race_waku waku, rec_race_waku2 waku2, stat_waku_win wakuwin
			where race.ymd = #{ymd}
			  and nirenhukuno not in ('特払','不成立','発売無')
			  and race.ymd = waku.ymd and race.jyocd = waku.jyocd and race.raceno = waku.raceno
			  and race.ymd = waku2.ymd and race.jyocd = waku2.jyocd and race.raceno = waku2.raceno
			  and race.ymd = wakuwin.ymd and race.jyocd = wakuwin.jyocd and race.raceno = wakuwin.raceno
		) tmp
    ]]>
  </select>
  <select id="selectNtile" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
		select
			race.ymd, race.jyocd, race.raceno,
			(win1_rank1_waku || win1_rank2_waku || win2_rank1_waku || win2_rank2_waku) wrwaku,
			ntiledevi.devi_famerank1 devi
		from rec_race race, rec_fame_rank3 rank3, ntile_deviation ntiledevi
		where race.ymd = #{ymd}
		  and nirenhukuno not in ('特払','不成立','発売無')
		  and race.ymd = rank3.ymd and race.jyocd = rank3.jyocd and race.raceno = rank3.raceno
		  and race.ymd = ntiledevi.ymd and race.jyocd = ntiledevi.jyocd and race.raceno = ntiledevi.raceno
    ]]>
  </select>
  </mapper>