package com.pengkong.boatrace.mybatis.entity;

import java.util.ArrayList;
import java.util.List;

public class MlSimulationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    public MlSimulationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andResultnoIsNull() {
            addCriterion("resultno is null");
            return (Criteria) this;
        }

        public Criteria andResultnoIsNotNull() {
            addCriterion("resultno is not null");
            return (Criteria) this;
        }

        public Criteria andResultnoEqualTo(String value) {
            addCriterion("resultno =", value, "resultno");
            return (Criteria) this;
        }

        public Criteria andResultnoNotEqualTo(String value) {
            addCriterion("resultno <>", value, "resultno");
            return (Criteria) this;
        }

        public Criteria andResultnoGreaterThan(String value) {
            addCriterion("resultno >", value, "resultno");
            return (Criteria) this;
        }

        public Criteria andResultnoGreaterThanOrEqualTo(String value) {
            addCriterion("resultno >=", value, "resultno");
            return (Criteria) this;
        }

        public Criteria andResultnoLessThan(String value) {
            addCriterion("resultno <", value, "resultno");
            return (Criteria) this;
        }

        public Criteria andResultnoLessThanOrEqualTo(String value) {
            addCriterion("resultno <=", value, "resultno");
            return (Criteria) this;
        }

        public Criteria andResultnoLike(String value) {
            addCriterion("resultno like", value, "resultno");
            return (Criteria) this;
        }

        public Criteria andResultnoNotLike(String value) {
            addCriterion("resultno not like", value, "resultno");
            return (Criteria) this;
        }

        public Criteria andResultnoIn(List<String> values) {
            addCriterion("resultno in", values, "resultno");
            return (Criteria) this;
        }

        public Criteria andResultnoNotIn(List<String> values) {
            addCriterion("resultno not in", values, "resultno");
            return (Criteria) this;
        }

        public Criteria andResultnoBetween(String value1, String value2) {
            addCriterion("resultno between", value1, value2, "resultno");
            return (Criteria) this;
        }

        public Criteria andResultnoNotBetween(String value1, String value2) {
            addCriterion("resultno not between", value1, value2, "resultno");
            return (Criteria) this;
        }

        public Criteria andBettypeIsNull() {
            addCriterion("bettype is null");
            return (Criteria) this;
        }

        public Criteria andBettypeIsNotNull() {
            addCriterion("bettype is not null");
            return (Criteria) this;
        }

        public Criteria andBettypeEqualTo(String value) {
            addCriterion("bettype =", value, "bettype");
            return (Criteria) this;
        }

        public Criteria andBettypeNotEqualTo(String value) {
            addCriterion("bettype <>", value, "bettype");
            return (Criteria) this;
        }

        public Criteria andBettypeGreaterThan(String value) {
            addCriterion("bettype >", value, "bettype");
            return (Criteria) this;
        }

        public Criteria andBettypeGreaterThanOrEqualTo(String value) {
            addCriterion("bettype >=", value, "bettype");
            return (Criteria) this;
        }

        public Criteria andBettypeLessThan(String value) {
            addCriterion("bettype <", value, "bettype");
            return (Criteria) this;
        }

        public Criteria andBettypeLessThanOrEqualTo(String value) {
            addCriterion("bettype <=", value, "bettype");
            return (Criteria) this;
        }

        public Criteria andBettypeLike(String value) {
            addCriterion("bettype like", value, "bettype");
            return (Criteria) this;
        }

        public Criteria andBettypeNotLike(String value) {
            addCriterion("bettype not like", value, "bettype");
            return (Criteria) this;
        }

        public Criteria andBettypeIn(List<String> values) {
            addCriterion("bettype in", values, "bettype");
            return (Criteria) this;
        }

        public Criteria andBettypeNotIn(List<String> values) {
            addCriterion("bettype not in", values, "bettype");
            return (Criteria) this;
        }

        public Criteria andBettypeBetween(String value1, String value2) {
            addCriterion("bettype between", value1, value2, "bettype");
            return (Criteria) this;
        }

        public Criteria andBettypeNotBetween(String value1, String value2) {
            addCriterion("bettype not between", value1, value2, "bettype");
            return (Criteria) this;
        }

        public Criteria andKumibanIsNull() {
            addCriterion("kumiban is null");
            return (Criteria) this;
        }

        public Criteria andKumibanIsNotNull() {
            addCriterion("kumiban is not null");
            return (Criteria) this;
        }

        public Criteria andKumibanEqualTo(String value) {
            addCriterion("kumiban =", value, "kumiban");
            return (Criteria) this;
        }

        public Criteria andKumibanNotEqualTo(String value) {
            addCriterion("kumiban <>", value, "kumiban");
            return (Criteria) this;
        }

        public Criteria andKumibanGreaterThan(String value) {
            addCriterion("kumiban >", value, "kumiban");
            return (Criteria) this;
        }

        public Criteria andKumibanGreaterThanOrEqualTo(String value) {
            addCriterion("kumiban >=", value, "kumiban");
            return (Criteria) this;
        }

        public Criteria andKumibanLessThan(String value) {
            addCriterion("kumiban <", value, "kumiban");
            return (Criteria) this;
        }

        public Criteria andKumibanLessThanOrEqualTo(String value) {
            addCriterion("kumiban <=", value, "kumiban");
            return (Criteria) this;
        }

        public Criteria andKumibanLike(String value) {
            addCriterion("kumiban like", value, "kumiban");
            return (Criteria) this;
        }

        public Criteria andKumibanNotLike(String value) {
            addCriterion("kumiban not like", value, "kumiban");
            return (Criteria) this;
        }

        public Criteria andKumibanIn(List<String> values) {
            addCriterion("kumiban in", values, "kumiban");
            return (Criteria) this;
        }

        public Criteria andKumibanNotIn(List<String> values) {
            addCriterion("kumiban not in", values, "kumiban");
            return (Criteria) this;
        }

        public Criteria andKumibanBetween(String value1, String value2) {
            addCriterion("kumiban between", value1, value2, "kumiban");
            return (Criteria) this;
        }

        public Criteria andKumibanNotBetween(String value1, String value2) {
            addCriterion("kumiban not between", value1, value2, "kumiban");
            return (Criteria) this;
        }

        public Criteria andModelnosIsNull() {
            addCriterion("modelnos is null");
            return (Criteria) this;
        }

        public Criteria andModelnosIsNotNull() {
            addCriterion("modelnos is not null");
            return (Criteria) this;
        }

        public Criteria andModelnosEqualTo(Object value) {
            addCriterion("modelnos =", value, "modelnos");
            return (Criteria) this;
        }

        public Criteria andModelnosNotEqualTo(Object value) {
            addCriterion("modelnos <>", value, "modelnos");
            return (Criteria) this;
        }

        public Criteria andModelnosGreaterThan(Object value) {
            addCriterion("modelnos >", value, "modelnos");
            return (Criteria) this;
        }

        public Criteria andModelnosGreaterThanOrEqualTo(Object value) {
            addCriterion("modelnos >=", value, "modelnos");
            return (Criteria) this;
        }

        public Criteria andModelnosLessThan(Object value) {
            addCriterion("modelnos <", value, "modelnos");
            return (Criteria) this;
        }

        public Criteria andModelnosLessThanOrEqualTo(Object value) {
            addCriterion("modelnos <=", value, "modelnos");
            return (Criteria) this;
        }

        public Criteria andModelnosIn(List<Object> values) {
            addCriterion("modelnos in", values, "modelnos");
            return (Criteria) this;
        }

        public Criteria andModelnosNotIn(List<Object> values) {
            addCriterion("modelnos not in", values, "modelnos");
            return (Criteria) this;
        }

        public Criteria andModelnosBetween(Object value1, Object value2) {
            addCriterion("modelnos between", value1, value2, "modelnos");
            return (Criteria) this;
        }

        public Criteria andModelnosNotBetween(Object value1, Object value2) {
            addCriterion("modelnos not between", value1, value2, "modelnos");
            return (Criteria) this;
        }

        public Criteria andPatternidsIsNull() {
            addCriterion("patternids is null");
            return (Criteria) this;
        }

        public Criteria andPatternidsIsNotNull() {
            addCriterion("patternids is not null");
            return (Criteria) this;
        }

        public Criteria andPatternidsEqualTo(Object value) {
            addCriterion("patternids =", value, "patternids");
            return (Criteria) this;
        }

        public Criteria andPatternidsNotEqualTo(Object value) {
            addCriterion("patternids <>", value, "patternids");
            return (Criteria) this;
        }

        public Criteria andPatternidsGreaterThan(Object value) {
            addCriterion("patternids >", value, "patternids");
            return (Criteria) this;
        }

        public Criteria andPatternidsGreaterThanOrEqualTo(Object value) {
            addCriterion("patternids >=", value, "patternids");
            return (Criteria) this;
        }

        public Criteria andPatternidsLessThan(Object value) {
            addCriterion("patternids <", value, "patternids");
            return (Criteria) this;
        }

        public Criteria andPatternidsLessThanOrEqualTo(Object value) {
            addCriterion("patternids <=", value, "patternids");
            return (Criteria) this;
        }

        public Criteria andPatternidsIn(List<Object> values) {
            addCriterion("patternids in", values, "patternids");
            return (Criteria) this;
        }

        public Criteria andPatternidsNotIn(List<Object> values) {
            addCriterion("patternids not in", values, "patternids");
            return (Criteria) this;
        }

        public Criteria andPatternidsBetween(Object value1, Object value2) {
            addCriterion("patternids between", value1, value2, "patternids");
            return (Criteria) this;
        }

        public Criteria andPatternidsNotBetween(Object value1, Object value2) {
            addCriterion("patternids not between", value1, value2, "patternids");
            return (Criteria) this;
        }

        public Criteria andPatternsIsNull() {
            addCriterion("patterns is null");
            return (Criteria) this;
        }

        public Criteria andPatternsIsNotNull() {
            addCriterion("patterns is not null");
            return (Criteria) this;
        }

        public Criteria andPatternsEqualTo(Object value) {
            addCriterion("patterns =", value, "patterns");
            return (Criteria) this;
        }

        public Criteria andPatternsNotEqualTo(Object value) {
            addCriterion("patterns <>", value, "patterns");
            return (Criteria) this;
        }

        public Criteria andPatternsGreaterThan(Object value) {
            addCriterion("patterns >", value, "patterns");
            return (Criteria) this;
        }

        public Criteria andPatternsGreaterThanOrEqualTo(Object value) {
            addCriterion("patterns >=", value, "patterns");
            return (Criteria) this;
        }

        public Criteria andPatternsLessThan(Object value) {
            addCriterion("patterns <", value, "patterns");
            return (Criteria) this;
        }

        public Criteria andPatternsLessThanOrEqualTo(Object value) {
            addCriterion("patterns <=", value, "patterns");
            return (Criteria) this;
        }

        public Criteria andPatternsIn(List<Object> values) {
            addCriterion("patterns in", values, "patterns");
            return (Criteria) this;
        }

        public Criteria andPatternsNotIn(List<Object> values) {
            addCriterion("patterns not in", values, "patterns");
            return (Criteria) this;
        }

        public Criteria andPatternsBetween(Object value1, Object value2) {
            addCriterion("patterns between", value1, value2, "patterns");
            return (Criteria) this;
        }

        public Criteria andPatternsNotBetween(Object value1, Object value2) {
            addCriterion("patterns not between", value1, value2, "patterns");
            return (Criteria) this;
        }

        public Criteria andBetcntIsNull() {
            addCriterion("betcnt is null");
            return (Criteria) this;
        }

        public Criteria andBetcntIsNotNull() {
            addCriterion("betcnt is not null");
            return (Criteria) this;
        }

        public Criteria andBetcntEqualTo(Integer value) {
            addCriterion("betcnt =", value, "betcnt");
            return (Criteria) this;
        }

        public Criteria andBetcntNotEqualTo(Integer value) {
            addCriterion("betcnt <>", value, "betcnt");
            return (Criteria) this;
        }

        public Criteria andBetcntGreaterThan(Integer value) {
            addCriterion("betcnt >", value, "betcnt");
            return (Criteria) this;
        }

        public Criteria andBetcntGreaterThanOrEqualTo(Integer value) {
            addCriterion("betcnt >=", value, "betcnt");
            return (Criteria) this;
        }

        public Criteria andBetcntLessThan(Integer value) {
            addCriterion("betcnt <", value, "betcnt");
            return (Criteria) this;
        }

        public Criteria andBetcntLessThanOrEqualTo(Integer value) {
            addCriterion("betcnt <=", value, "betcnt");
            return (Criteria) this;
        }

        public Criteria andBetcntIn(List<Integer> values) {
            addCriterion("betcnt in", values, "betcnt");
            return (Criteria) this;
        }

        public Criteria andBetcntNotIn(List<Integer> values) {
            addCriterion("betcnt not in", values, "betcnt");
            return (Criteria) this;
        }

        public Criteria andBetcntBetween(Integer value1, Integer value2) {
            addCriterion("betcnt between", value1, value2, "betcnt");
            return (Criteria) this;
        }

        public Criteria andBetcntNotBetween(Integer value1, Integer value2) {
            addCriterion("betcnt not between", value1, value2, "betcnt");
            return (Criteria) this;
        }

        public Criteria andHitcntIsNull() {
            addCriterion("hitcnt is null");
            return (Criteria) this;
        }

        public Criteria andHitcntIsNotNull() {
            addCriterion("hitcnt is not null");
            return (Criteria) this;
        }

        public Criteria andHitcntEqualTo(Integer value) {
            addCriterion("hitcnt =", value, "hitcnt");
            return (Criteria) this;
        }

        public Criteria andHitcntNotEqualTo(Integer value) {
            addCriterion("hitcnt <>", value, "hitcnt");
            return (Criteria) this;
        }

        public Criteria andHitcntGreaterThan(Integer value) {
            addCriterion("hitcnt >", value, "hitcnt");
            return (Criteria) this;
        }

        public Criteria andHitcntGreaterThanOrEqualTo(Integer value) {
            addCriterion("hitcnt >=", value, "hitcnt");
            return (Criteria) this;
        }

        public Criteria andHitcntLessThan(Integer value) {
            addCriterion("hitcnt <", value, "hitcnt");
            return (Criteria) this;
        }

        public Criteria andHitcntLessThanOrEqualTo(Integer value) {
            addCriterion("hitcnt <=", value, "hitcnt");
            return (Criteria) this;
        }

        public Criteria andHitcntIn(List<Integer> values) {
            addCriterion("hitcnt in", values, "hitcnt");
            return (Criteria) this;
        }

        public Criteria andHitcntNotIn(List<Integer> values) {
            addCriterion("hitcnt not in", values, "hitcnt");
            return (Criteria) this;
        }

        public Criteria andHitcntBetween(Integer value1, Integer value2) {
            addCriterion("hitcnt between", value1, value2, "hitcnt");
            return (Criteria) this;
        }

        public Criteria andHitcntNotBetween(Integer value1, Integer value2) {
            addCriterion("hitcnt not between", value1, value2, "hitcnt");
            return (Criteria) this;
        }

        public Criteria andBetamtIsNull() {
            addCriterion("betamt is null");
            return (Criteria) this;
        }

        public Criteria andBetamtIsNotNull() {
            addCriterion("betamt is not null");
            return (Criteria) this;
        }

        public Criteria andBetamtEqualTo(Integer value) {
            addCriterion("betamt =", value, "betamt");
            return (Criteria) this;
        }

        public Criteria andBetamtNotEqualTo(Integer value) {
            addCriterion("betamt <>", value, "betamt");
            return (Criteria) this;
        }

        public Criteria andBetamtGreaterThan(Integer value) {
            addCriterion("betamt >", value, "betamt");
            return (Criteria) this;
        }

        public Criteria andBetamtGreaterThanOrEqualTo(Integer value) {
            addCriterion("betamt >=", value, "betamt");
            return (Criteria) this;
        }

        public Criteria andBetamtLessThan(Integer value) {
            addCriterion("betamt <", value, "betamt");
            return (Criteria) this;
        }

        public Criteria andBetamtLessThanOrEqualTo(Integer value) {
            addCriterion("betamt <=", value, "betamt");
            return (Criteria) this;
        }

        public Criteria andBetamtIn(List<Integer> values) {
            addCriterion("betamt in", values, "betamt");
            return (Criteria) this;
        }

        public Criteria andBetamtNotIn(List<Integer> values) {
            addCriterion("betamt not in", values, "betamt");
            return (Criteria) this;
        }

        public Criteria andBetamtBetween(Integer value1, Integer value2) {
            addCriterion("betamt between", value1, value2, "betamt");
            return (Criteria) this;
        }

        public Criteria andBetamtNotBetween(Integer value1, Integer value2) {
            addCriterion("betamt not between", value1, value2, "betamt");
            return (Criteria) this;
        }

        public Criteria andHitamtIsNull() {
            addCriterion("hitamt is null");
            return (Criteria) this;
        }

        public Criteria andHitamtIsNotNull() {
            addCriterion("hitamt is not null");
            return (Criteria) this;
        }

        public Criteria andHitamtEqualTo(Integer value) {
            addCriterion("hitamt =", value, "hitamt");
            return (Criteria) this;
        }

        public Criteria andHitamtNotEqualTo(Integer value) {
            addCriterion("hitamt <>", value, "hitamt");
            return (Criteria) this;
        }

        public Criteria andHitamtGreaterThan(Integer value) {
            addCriterion("hitamt >", value, "hitamt");
            return (Criteria) this;
        }

        public Criteria andHitamtGreaterThanOrEqualTo(Integer value) {
            addCriterion("hitamt >=", value, "hitamt");
            return (Criteria) this;
        }

        public Criteria andHitamtLessThan(Integer value) {
            addCriterion("hitamt <", value, "hitamt");
            return (Criteria) this;
        }

        public Criteria andHitamtLessThanOrEqualTo(Integer value) {
            addCriterion("hitamt <=", value, "hitamt");
            return (Criteria) this;
        }

        public Criteria andHitamtIn(List<Integer> values) {
            addCriterion("hitamt in", values, "hitamt");
            return (Criteria) this;
        }

        public Criteria andHitamtNotIn(List<Integer> values) {
            addCriterion("hitamt not in", values, "hitamt");
            return (Criteria) this;
        }

        public Criteria andHitamtBetween(Integer value1, Integer value2) {
            addCriterion("hitamt between", value1, value2, "hitamt");
            return (Criteria) this;
        }

        public Criteria andHitamtNotBetween(Integer value1, Integer value2) {
            addCriterion("hitamt not between", value1, value2, "hitamt");
            return (Criteria) this;
        }

        public Criteria andHitrateIsNull() {
            addCriterion("hitrate is null");
            return (Criteria) this;
        }

        public Criteria andHitrateIsNotNull() {
            addCriterion("hitrate is not null");
            return (Criteria) this;
        }

        public Criteria andHitrateEqualTo(Double value) {
            addCriterion("hitrate =", value, "hitrate");
            return (Criteria) this;
        }

        public Criteria andHitrateNotEqualTo(Double value) {
            addCriterion("hitrate <>", value, "hitrate");
            return (Criteria) this;
        }

        public Criteria andHitrateGreaterThan(Double value) {
            addCriterion("hitrate >", value, "hitrate");
            return (Criteria) this;
        }

        public Criteria andHitrateGreaterThanOrEqualTo(Double value) {
            addCriterion("hitrate >=", value, "hitrate");
            return (Criteria) this;
        }

        public Criteria andHitrateLessThan(Double value) {
            addCriterion("hitrate <", value, "hitrate");
            return (Criteria) this;
        }

        public Criteria andHitrateLessThanOrEqualTo(Double value) {
            addCriterion("hitrate <=", value, "hitrate");
            return (Criteria) this;
        }

        public Criteria andHitrateIn(List<Double> values) {
            addCriterion("hitrate in", values, "hitrate");
            return (Criteria) this;
        }

        public Criteria andHitrateNotIn(List<Double> values) {
            addCriterion("hitrate not in", values, "hitrate");
            return (Criteria) this;
        }

        public Criteria andHitrateBetween(Double value1, Double value2) {
            addCriterion("hitrate between", value1, value2, "hitrate");
            return (Criteria) this;
        }

        public Criteria andHitrateNotBetween(Double value1, Double value2) {
            addCriterion("hitrate not between", value1, value2, "hitrate");
            return (Criteria) this;
        }

        public Criteria andIncomerateIsNull() {
            addCriterion("incomerate is null");
            return (Criteria) this;
        }

        public Criteria andIncomerateIsNotNull() {
            addCriterion("incomerate is not null");
            return (Criteria) this;
        }

        public Criteria andIncomerateEqualTo(Double value) {
            addCriterion("incomerate =", value, "incomerate");
            return (Criteria) this;
        }

        public Criteria andIncomerateNotEqualTo(Double value) {
            addCriterion("incomerate <>", value, "incomerate");
            return (Criteria) this;
        }

        public Criteria andIncomerateGreaterThan(Double value) {
            addCriterion("incomerate >", value, "incomerate");
            return (Criteria) this;
        }

        public Criteria andIncomerateGreaterThanOrEqualTo(Double value) {
            addCriterion("incomerate >=", value, "incomerate");
            return (Criteria) this;
        }

        public Criteria andIncomerateLessThan(Double value) {
            addCriterion("incomerate <", value, "incomerate");
            return (Criteria) this;
        }

        public Criteria andIncomerateLessThanOrEqualTo(Double value) {
            addCriterion("incomerate <=", value, "incomerate");
            return (Criteria) this;
        }

        public Criteria andIncomerateIn(List<Double> values) {
            addCriterion("incomerate in", values, "incomerate");
            return (Criteria) this;
        }

        public Criteria andIncomerateNotIn(List<Double> values) {
            addCriterion("incomerate not in", values, "incomerate");
            return (Criteria) this;
        }

        public Criteria andIncomerateBetween(Double value1, Double value2) {
            addCriterion("incomerate between", value1, value2, "incomerate");
            return (Criteria) this;
        }

        public Criteria andIncomerateNotBetween(Double value1, Double value2) {
            addCriterion("incomerate not between", value1, value2, "incomerate");
            return (Criteria) this;
        }

        public Criteria andIncMinIsNull() {
            addCriterion("inc_min is null");
            return (Criteria) this;
        }

        public Criteria andIncMinIsNotNull() {
            addCriterion("inc_min is not null");
            return (Criteria) this;
        }

        public Criteria andIncMinEqualTo(Double value) {
            addCriterion("inc_min =", value, "incMin");
            return (Criteria) this;
        }

        public Criteria andIncMinNotEqualTo(Double value) {
            addCriterion("inc_min <>", value, "incMin");
            return (Criteria) this;
        }

        public Criteria andIncMinGreaterThan(Double value) {
            addCriterion("inc_min >", value, "incMin");
            return (Criteria) this;
        }

        public Criteria andIncMinGreaterThanOrEqualTo(Double value) {
            addCriterion("inc_min >=", value, "incMin");
            return (Criteria) this;
        }

        public Criteria andIncMinLessThan(Double value) {
            addCriterion("inc_min <", value, "incMin");
            return (Criteria) this;
        }

        public Criteria andIncMinLessThanOrEqualTo(Double value) {
            addCriterion("inc_min <=", value, "incMin");
            return (Criteria) this;
        }

        public Criteria andIncMinIn(List<Double> values) {
            addCriterion("inc_min in", values, "incMin");
            return (Criteria) this;
        }

        public Criteria andIncMinNotIn(List<Double> values) {
            addCriterion("inc_min not in", values, "incMin");
            return (Criteria) this;
        }

        public Criteria andIncMinBetween(Double value1, Double value2) {
            addCriterion("inc_min between", value1, value2, "incMin");
            return (Criteria) this;
        }

        public Criteria andIncMinNotBetween(Double value1, Double value2) {
            addCriterion("inc_min not between", value1, value2, "incMin");
            return (Criteria) this;
        }

        public Criteria andIncMaxIsNull() {
            addCriterion("inc_max is null");
            return (Criteria) this;
        }

        public Criteria andIncMaxIsNotNull() {
            addCriterion("inc_max is not null");
            return (Criteria) this;
        }

        public Criteria andIncMaxEqualTo(Double value) {
            addCriterion("inc_max =", value, "incMax");
            return (Criteria) this;
        }

        public Criteria andIncMaxNotEqualTo(Double value) {
            addCriterion("inc_max <>", value, "incMax");
            return (Criteria) this;
        }

        public Criteria andIncMaxGreaterThan(Double value) {
            addCriterion("inc_max >", value, "incMax");
            return (Criteria) this;
        }

        public Criteria andIncMaxGreaterThanOrEqualTo(Double value) {
            addCriterion("inc_max >=", value, "incMax");
            return (Criteria) this;
        }

        public Criteria andIncMaxLessThan(Double value) {
            addCriterion("inc_max <", value, "incMax");
            return (Criteria) this;
        }

        public Criteria andIncMaxLessThanOrEqualTo(Double value) {
            addCriterion("inc_max <=", value, "incMax");
            return (Criteria) this;
        }

        public Criteria andIncMaxIn(List<Double> values) {
            addCriterion("inc_max in", values, "incMax");
            return (Criteria) this;
        }

        public Criteria andIncMaxNotIn(List<Double> values) {
            addCriterion("inc_max not in", values, "incMax");
            return (Criteria) this;
        }

        public Criteria andIncMaxBetween(Double value1, Double value2) {
            addCriterion("inc_max between", value1, value2, "incMax");
            return (Criteria) this;
        }

        public Criteria andIncMaxNotBetween(Double value1, Double value2) {
            addCriterion("inc_max not between", value1, value2, "incMax");
            return (Criteria) this;
        }

        public Criteria andIncMeanIsNull() {
            addCriterion("inc_mean is null");
            return (Criteria) this;
        }

        public Criteria andIncMeanIsNotNull() {
            addCriterion("inc_mean is not null");
            return (Criteria) this;
        }

        public Criteria andIncMeanEqualTo(Double value) {
            addCriterion("inc_mean =", value, "incMean");
            return (Criteria) this;
        }

        public Criteria andIncMeanNotEqualTo(Double value) {
            addCriterion("inc_mean <>", value, "incMean");
            return (Criteria) this;
        }

        public Criteria andIncMeanGreaterThan(Double value) {
            addCriterion("inc_mean >", value, "incMean");
            return (Criteria) this;
        }

        public Criteria andIncMeanGreaterThanOrEqualTo(Double value) {
            addCriterion("inc_mean >=", value, "incMean");
            return (Criteria) this;
        }

        public Criteria andIncMeanLessThan(Double value) {
            addCriterion("inc_mean <", value, "incMean");
            return (Criteria) this;
        }

        public Criteria andIncMeanLessThanOrEqualTo(Double value) {
            addCriterion("inc_mean <=", value, "incMean");
            return (Criteria) this;
        }

        public Criteria andIncMeanIn(List<Double> values) {
            addCriterion("inc_mean in", values, "incMean");
            return (Criteria) this;
        }

        public Criteria andIncMeanNotIn(List<Double> values) {
            addCriterion("inc_mean not in", values, "incMean");
            return (Criteria) this;
        }

        public Criteria andIncMeanBetween(Double value1, Double value2) {
            addCriterion("inc_mean between", value1, value2, "incMean");
            return (Criteria) this;
        }

        public Criteria andIncMeanNotBetween(Double value1, Double value2) {
            addCriterion("inc_mean not between", value1, value2, "incMean");
            return (Criteria) this;
        }

        public Criteria andHitoddsMinIsNull() {
            addCriterion("hitodds_min is null");
            return (Criteria) this;
        }

        public Criteria andHitoddsMinIsNotNull() {
            addCriterion("hitodds_min is not null");
            return (Criteria) this;
        }

        public Criteria andHitoddsMinEqualTo(Double value) {
            addCriterion("hitodds_min =", value, "hitoddsMin");
            return (Criteria) this;
        }

        public Criteria andHitoddsMinNotEqualTo(Double value) {
            addCriterion("hitodds_min <>", value, "hitoddsMin");
            return (Criteria) this;
        }

        public Criteria andHitoddsMinGreaterThan(Double value) {
            addCriterion("hitodds_min >", value, "hitoddsMin");
            return (Criteria) this;
        }

        public Criteria andHitoddsMinGreaterThanOrEqualTo(Double value) {
            addCriterion("hitodds_min >=", value, "hitoddsMin");
            return (Criteria) this;
        }

        public Criteria andHitoddsMinLessThan(Double value) {
            addCriterion("hitodds_min <", value, "hitoddsMin");
            return (Criteria) this;
        }

        public Criteria andHitoddsMinLessThanOrEqualTo(Double value) {
            addCriterion("hitodds_min <=", value, "hitoddsMin");
            return (Criteria) this;
        }

        public Criteria andHitoddsMinIn(List<Double> values) {
            addCriterion("hitodds_min in", values, "hitoddsMin");
            return (Criteria) this;
        }

        public Criteria andHitoddsMinNotIn(List<Double> values) {
            addCriterion("hitodds_min not in", values, "hitoddsMin");
            return (Criteria) this;
        }

        public Criteria andHitoddsMinBetween(Double value1, Double value2) {
            addCriterion("hitodds_min between", value1, value2, "hitoddsMin");
            return (Criteria) this;
        }

        public Criteria andHitoddsMinNotBetween(Double value1, Double value2) {
            addCriterion("hitodds_min not between", value1, value2, "hitoddsMin");
            return (Criteria) this;
        }

        public Criteria andHitoddsMaxIsNull() {
            addCriterion("hitodds_max is null");
            return (Criteria) this;
        }

        public Criteria andHitoddsMaxIsNotNull() {
            addCriterion("hitodds_max is not null");
            return (Criteria) this;
        }

        public Criteria andHitoddsMaxEqualTo(Double value) {
            addCriterion("hitodds_max =", value, "hitoddsMax");
            return (Criteria) this;
        }

        public Criteria andHitoddsMaxNotEqualTo(Double value) {
            addCriterion("hitodds_max <>", value, "hitoddsMax");
            return (Criteria) this;
        }

        public Criteria andHitoddsMaxGreaterThan(Double value) {
            addCriterion("hitodds_max >", value, "hitoddsMax");
            return (Criteria) this;
        }

        public Criteria andHitoddsMaxGreaterThanOrEqualTo(Double value) {
            addCriterion("hitodds_max >=", value, "hitoddsMax");
            return (Criteria) this;
        }

        public Criteria andHitoddsMaxLessThan(Double value) {
            addCriterion("hitodds_max <", value, "hitoddsMax");
            return (Criteria) this;
        }

        public Criteria andHitoddsMaxLessThanOrEqualTo(Double value) {
            addCriterion("hitodds_max <=", value, "hitoddsMax");
            return (Criteria) this;
        }

        public Criteria andHitoddsMaxIn(List<Double> values) {
            addCriterion("hitodds_max in", values, "hitoddsMax");
            return (Criteria) this;
        }

        public Criteria andHitoddsMaxNotIn(List<Double> values) {
            addCriterion("hitodds_max not in", values, "hitoddsMax");
            return (Criteria) this;
        }

        public Criteria andHitoddsMaxBetween(Double value1, Double value2) {
            addCriterion("hitodds_max between", value1, value2, "hitoddsMax");
            return (Criteria) this;
        }

        public Criteria andHitoddsMaxNotBetween(Double value1, Double value2) {
            addCriterion("hitodds_max not between", value1, value2, "hitoddsMax");
            return (Criteria) this;
        }

        public Criteria andHitoddsMeanIsNull() {
            addCriterion("hitodds_mean is null");
            return (Criteria) this;
        }

        public Criteria andHitoddsMeanIsNotNull() {
            addCriterion("hitodds_mean is not null");
            return (Criteria) this;
        }

        public Criteria andHitoddsMeanEqualTo(Double value) {
            addCriterion("hitodds_mean =", value, "hitoddsMean");
            return (Criteria) this;
        }

        public Criteria andHitoddsMeanNotEqualTo(Double value) {
            addCriterion("hitodds_mean <>", value, "hitoddsMean");
            return (Criteria) this;
        }

        public Criteria andHitoddsMeanGreaterThan(Double value) {
            addCriterion("hitodds_mean >", value, "hitoddsMean");
            return (Criteria) this;
        }

        public Criteria andHitoddsMeanGreaterThanOrEqualTo(Double value) {
            addCriterion("hitodds_mean >=", value, "hitoddsMean");
            return (Criteria) this;
        }

        public Criteria andHitoddsMeanLessThan(Double value) {
            addCriterion("hitodds_mean <", value, "hitoddsMean");
            return (Criteria) this;
        }

        public Criteria andHitoddsMeanLessThanOrEqualTo(Double value) {
            addCriterion("hitodds_mean <=", value, "hitoddsMean");
            return (Criteria) this;
        }

        public Criteria andHitoddsMeanIn(List<Double> values) {
            addCriterion("hitodds_mean in", values, "hitoddsMean");
            return (Criteria) this;
        }

        public Criteria andHitoddsMeanNotIn(List<Double> values) {
            addCriterion("hitodds_mean not in", values, "hitoddsMean");
            return (Criteria) this;
        }

        public Criteria andHitoddsMeanBetween(Double value1, Double value2) {
            addCriterion("hitodds_mean between", value1, value2, "hitoddsMean");
            return (Criteria) this;
        }

        public Criteria andHitoddsMeanNotBetween(Double value1, Double value2) {
            addCriterion("hitodds_mean not between", value1, value2, "hitoddsMean");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.ml_simulation
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.ml_simulation
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}