package com.pengkong.boatrace.mybatis.entity;

import java.util.ArrayList;
import java.util.List;

public class RecRacerTrendExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	public RecRacerTrendExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andYmdIsNull() {
			addCriterion("ymd is null");
			return (Criteria) this;
		}

		public Criteria andYmdIsNotNull() {
			addCriterion("ymd is not null");
			return (Criteria) this;
		}

		public Criteria andYmdEqualTo(String value) {
			addCriterion("ymd =", value, "ymd");
			return (Criteria) this;
		}

		public Criteria andYmdNotEqualTo(String value) {
			addCriterion("ymd <>", value, "ymd");
			return (Criteria) this;
		}

		public Criteria andYmdGreaterThan(String value) {
			addCriterion("ymd >", value, "ymd");
			return (Criteria) this;
		}

		public Criteria andYmdGreaterThanOrEqualTo(String value) {
			addCriterion("ymd >=", value, "ymd");
			return (Criteria) this;
		}

		public Criteria andYmdLessThan(String value) {
			addCriterion("ymd <", value, "ymd");
			return (Criteria) this;
		}

		public Criteria andYmdLessThanOrEqualTo(String value) {
			addCriterion("ymd <=", value, "ymd");
			return (Criteria) this;
		}

		public Criteria andYmdLike(String value) {
			addCriterion("ymd like", value, "ymd");
			return (Criteria) this;
		}

		public Criteria andYmdNotLike(String value) {
			addCriterion("ymd not like", value, "ymd");
			return (Criteria) this;
		}

		public Criteria andYmdIn(List<String> values) {
			addCriterion("ymd in", values, "ymd");
			return (Criteria) this;
		}

		public Criteria andYmdNotIn(List<String> values) {
			addCriterion("ymd not in", values, "ymd");
			return (Criteria) this;
		}

		public Criteria andYmdBetween(String value1, String value2) {
			addCriterion("ymd between", value1, value2, "ymd");
			return (Criteria) this;
		}

		public Criteria andYmdNotBetween(String value1, String value2) {
			addCriterion("ymd not between", value1, value2, "ymd");
			return (Criteria) this;
		}

		public Criteria andEntryIsNull() {
			addCriterion("entry is null");
			return (Criteria) this;
		}

		public Criteria andEntryIsNotNull() {
			addCriterion("entry is not null");
			return (Criteria) this;
		}

		public Criteria andEntryEqualTo(Short value) {
			addCriterion("entry =", value, "entry");
			return (Criteria) this;
		}

		public Criteria andEntryNotEqualTo(Short value) {
			addCriterion("entry <>", value, "entry");
			return (Criteria) this;
		}

		public Criteria andEntryGreaterThan(Short value) {
			addCriterion("entry >", value, "entry");
			return (Criteria) this;
		}

		public Criteria andEntryGreaterThanOrEqualTo(Short value) {
			addCriterion("entry >=", value, "entry");
			return (Criteria) this;
		}

		public Criteria andEntryLessThan(Short value) {
			addCriterion("entry <", value, "entry");
			return (Criteria) this;
		}

		public Criteria andEntryLessThanOrEqualTo(Short value) {
			addCriterion("entry <=", value, "entry");
			return (Criteria) this;
		}

		public Criteria andEntryIn(List<Short> values) {
			addCriterion("entry in", values, "entry");
			return (Criteria) this;
		}

		public Criteria andEntryNotIn(List<Short> values) {
			addCriterion("entry not in", values, "entry");
			return (Criteria) this;
		}

		public Criteria andEntryBetween(Short value1, Short value2) {
			addCriterion("entry between", value1, value2, "entry");
			return (Criteria) this;
		}

		public Criteria andEntryNotBetween(Short value1, Short value2) {
			addCriterion("entry not between", value1, value2, "entry");
			return (Criteria) this;
		}

		public Criteria andRuncntIsNull() {
			addCriterion("runcnt is null");
			return (Criteria) this;
		}

		public Criteria andRuncntIsNotNull() {
			addCriterion("runcnt is not null");
			return (Criteria) this;
		}

		public Criteria andRuncntEqualTo(Integer value) {
			addCriterion("runcnt =", value, "runcnt");
			return (Criteria) this;
		}

		public Criteria andRuncntNotEqualTo(Integer value) {
			addCriterion("runcnt <>", value, "runcnt");
			return (Criteria) this;
		}

		public Criteria andRuncntGreaterThan(Integer value) {
			addCriterion("runcnt >", value, "runcnt");
			return (Criteria) this;
		}

		public Criteria andRuncntGreaterThanOrEqualTo(Integer value) {
			addCriterion("runcnt >=", value, "runcnt");
			return (Criteria) this;
		}

		public Criteria andRuncntLessThan(Integer value) {
			addCriterion("runcnt <", value, "runcnt");
			return (Criteria) this;
		}

		public Criteria andRuncntLessThanOrEqualTo(Integer value) {
			addCriterion("runcnt <=", value, "runcnt");
			return (Criteria) this;
		}

		public Criteria andRuncntIn(List<Integer> values) {
			addCriterion("runcnt in", values, "runcnt");
			return (Criteria) this;
		}

		public Criteria andRuncntNotIn(List<Integer> values) {
			addCriterion("runcnt not in", values, "runcnt");
			return (Criteria) this;
		}

		public Criteria andRuncntBetween(Integer value1, Integer value2) {
			addCriterion("runcnt between", value1, value2, "runcnt");
			return (Criteria) this;
		}

		public Criteria andRuncntNotBetween(Integer value1, Integer value2) {
			addCriterion("runcnt not between", value1, value2, "runcnt");
			return (Criteria) this;
		}

		public Criteria andCondIsNull() {
			addCriterion("cond is null");
			return (Criteria) this;
		}

		public Criteria andCondIsNotNull() {
			addCriterion("cond is not null");
			return (Criteria) this;
		}

		public Criteria andCondEqualTo(Double value) {
			addCriterion("cond =", value, "cond");
			return (Criteria) this;
		}

		public Criteria andCondNotEqualTo(Double value) {
			addCriterion("cond <>", value, "cond");
			return (Criteria) this;
		}

		public Criteria andCondGreaterThan(Double value) {
			addCriterion("cond >", value, "cond");
			return (Criteria) this;
		}

		public Criteria andCondGreaterThanOrEqualTo(Double value) {
			addCriterion("cond >=", value, "cond");
			return (Criteria) this;
		}

		public Criteria andCondLessThan(Double value) {
			addCriterion("cond <", value, "cond");
			return (Criteria) this;
		}

		public Criteria andCondLessThanOrEqualTo(Double value) {
			addCriterion("cond <=", value, "cond");
			return (Criteria) this;
		}

		public Criteria andCondIn(List<Double> values) {
			addCriterion("cond in", values, "cond");
			return (Criteria) this;
		}

		public Criteria andCondNotIn(List<Double> values) {
			addCriterion("cond not in", values, "cond");
			return (Criteria) this;
		}

		public Criteria andCondBetween(Double value1, Double value2) {
			addCriterion("cond between", value1, value2, "cond");
			return (Criteria) this;
		}

		public Criteria andCondNotBetween(Double value1, Double value2) {
			addCriterion("cond not between", value1, value2, "cond");
			return (Criteria) this;
		}

		public Criteria andN1pointIsNull() {
			addCriterion("n1point is null");
			return (Criteria) this;
		}

		public Criteria andN1pointIsNotNull() {
			addCriterion("n1point is not null");
			return (Criteria) this;
		}

		public Criteria andN1pointEqualTo(Double value) {
			addCriterion("n1point =", value, "n1point");
			return (Criteria) this;
		}

		public Criteria andN1pointNotEqualTo(Double value) {
			addCriterion("n1point <>", value, "n1point");
			return (Criteria) this;
		}

		public Criteria andN1pointGreaterThan(Double value) {
			addCriterion("n1point >", value, "n1point");
			return (Criteria) this;
		}

		public Criteria andN1pointGreaterThanOrEqualTo(Double value) {
			addCriterion("n1point >=", value, "n1point");
			return (Criteria) this;
		}

		public Criteria andN1pointLessThan(Double value) {
			addCriterion("n1point <", value, "n1point");
			return (Criteria) this;
		}

		public Criteria andN1pointLessThanOrEqualTo(Double value) {
			addCriterion("n1point <=", value, "n1point");
			return (Criteria) this;
		}

		public Criteria andN1pointIn(List<Double> values) {
			addCriterion("n1point in", values, "n1point");
			return (Criteria) this;
		}

		public Criteria andN1pointNotIn(List<Double> values) {
			addCriterion("n1point not in", values, "n1point");
			return (Criteria) this;
		}

		public Criteria andN1pointBetween(Double value1, Double value2) {
			addCriterion("n1point between", value1, value2, "n1point");
			return (Criteria) this;
		}

		public Criteria andN1pointNotBetween(Double value1, Double value2) {
			addCriterion("n1point not between", value1, value2, "n1point");
			return (Criteria) this;
		}

		public Criteria andN2pointIsNull() {
			addCriterion("n2point is null");
			return (Criteria) this;
		}

		public Criteria andN2pointIsNotNull() {
			addCriterion("n2point is not null");
			return (Criteria) this;
		}

		public Criteria andN2pointEqualTo(Double value) {
			addCriterion("n2point =", value, "n2point");
			return (Criteria) this;
		}

		public Criteria andN2pointNotEqualTo(Double value) {
			addCriterion("n2point <>", value, "n2point");
			return (Criteria) this;
		}

		public Criteria andN2pointGreaterThan(Double value) {
			addCriterion("n2point >", value, "n2point");
			return (Criteria) this;
		}

		public Criteria andN2pointGreaterThanOrEqualTo(Double value) {
			addCriterion("n2point >=", value, "n2point");
			return (Criteria) this;
		}

		public Criteria andN2pointLessThan(Double value) {
			addCriterion("n2point <", value, "n2point");
			return (Criteria) this;
		}

		public Criteria andN2pointLessThanOrEqualTo(Double value) {
			addCriterion("n2point <=", value, "n2point");
			return (Criteria) this;
		}

		public Criteria andN2pointIn(List<Double> values) {
			addCriterion("n2point in", values, "n2point");
			return (Criteria) this;
		}

		public Criteria andN2pointNotIn(List<Double> values) {
			addCriterion("n2point not in", values, "n2point");
			return (Criteria) this;
		}

		public Criteria andN2pointBetween(Double value1, Double value2) {
			addCriterion("n2point between", value1, value2, "n2point");
			return (Criteria) this;
		}

		public Criteria andN2pointNotBetween(Double value1, Double value2) {
			addCriterion("n2point not between", value1, value2, "n2point");
			return (Criteria) this;
		}

		public Criteria andN3pointIsNull() {
			addCriterion("n3point is null");
			return (Criteria) this;
		}

		public Criteria andN3pointIsNotNull() {
			addCriterion("n3point is not null");
			return (Criteria) this;
		}

		public Criteria andN3pointEqualTo(Double value) {
			addCriterion("n3point =", value, "n3point");
			return (Criteria) this;
		}

		public Criteria andN3pointNotEqualTo(Double value) {
			addCriterion("n3point <>", value, "n3point");
			return (Criteria) this;
		}

		public Criteria andN3pointGreaterThan(Double value) {
			addCriterion("n3point >", value, "n3point");
			return (Criteria) this;
		}

		public Criteria andN3pointGreaterThanOrEqualTo(Double value) {
			addCriterion("n3point >=", value, "n3point");
			return (Criteria) this;
		}

		public Criteria andN3pointLessThan(Double value) {
			addCriterion("n3point <", value, "n3point");
			return (Criteria) this;
		}

		public Criteria andN3pointLessThanOrEqualTo(Double value) {
			addCriterion("n3point <=", value, "n3point");
			return (Criteria) this;
		}

		public Criteria andN3pointIn(List<Double> values) {
			addCriterion("n3point in", values, "n3point");
			return (Criteria) this;
		}

		public Criteria andN3pointNotIn(List<Double> values) {
			addCriterion("n3point not in", values, "n3point");
			return (Criteria) this;
		}

		public Criteria andN3pointBetween(Double value1, Double value2) {
			addCriterion("n3point between", value1, value2, "n3point");
			return (Criteria) this;
		}

		public Criteria andN3pointNotBetween(Double value1, Double value2) {
			addCriterion("n3point not between", value1, value2, "n3point");
			return (Criteria) this;
		}

		public Criteria andN1pointWakuIsNull() {
			addCriterion("n1point_waku is null");
			return (Criteria) this;
		}

		public Criteria andN1pointWakuIsNotNull() {
			addCriterion("n1point_waku is not null");
			return (Criteria) this;
		}

		public Criteria andN1pointWakuEqualTo(Object value) {
			addCriterion("n1point_waku =", value, "n1pointWaku");
			return (Criteria) this;
		}

		public Criteria andN1pointWakuNotEqualTo(Object value) {
			addCriterion("n1point_waku <>", value, "n1pointWaku");
			return (Criteria) this;
		}

		public Criteria andN1pointWakuGreaterThan(Object value) {
			addCriterion("n1point_waku >", value, "n1pointWaku");
			return (Criteria) this;
		}

		public Criteria andN1pointWakuGreaterThanOrEqualTo(Object value) {
			addCriterion("n1point_waku >=", value, "n1pointWaku");
			return (Criteria) this;
		}

		public Criteria andN1pointWakuLessThan(Object value) {
			addCriterion("n1point_waku <", value, "n1pointWaku");
			return (Criteria) this;
		}

		public Criteria andN1pointWakuLessThanOrEqualTo(Object value) {
			addCriterion("n1point_waku <=", value, "n1pointWaku");
			return (Criteria) this;
		}

		public Criteria andN1pointWakuIn(List<Object> values) {
			addCriterion("n1point_waku in", values, "n1pointWaku");
			return (Criteria) this;
		}

		public Criteria andN1pointWakuNotIn(List<Object> values) {
			addCriterion("n1point_waku not in", values, "n1pointWaku");
			return (Criteria) this;
		}

		public Criteria andN1pointWakuBetween(Object value1, Object value2) {
			addCriterion("n1point_waku between", value1, value2, "n1pointWaku");
			return (Criteria) this;
		}

		public Criteria andN1pointWakuNotBetween(Object value1, Object value2) {
			addCriterion("n1point_waku not between", value1, value2, "n1pointWaku");
			return (Criteria) this;
		}

		public Criteria andN2pointWakuIsNull() {
			addCriterion("n2point_waku is null");
			return (Criteria) this;
		}

		public Criteria andN2pointWakuIsNotNull() {
			addCriterion("n2point_waku is not null");
			return (Criteria) this;
		}

		public Criteria andN2pointWakuEqualTo(Object value) {
			addCriterion("n2point_waku =", value, "n2pointWaku");
			return (Criteria) this;
		}

		public Criteria andN2pointWakuNotEqualTo(Object value) {
			addCriterion("n2point_waku <>", value, "n2pointWaku");
			return (Criteria) this;
		}

		public Criteria andN2pointWakuGreaterThan(Object value) {
			addCriterion("n2point_waku >", value, "n2pointWaku");
			return (Criteria) this;
		}

		public Criteria andN2pointWakuGreaterThanOrEqualTo(Object value) {
			addCriterion("n2point_waku >=", value, "n2pointWaku");
			return (Criteria) this;
		}

		public Criteria andN2pointWakuLessThan(Object value) {
			addCriterion("n2point_waku <", value, "n2pointWaku");
			return (Criteria) this;
		}

		public Criteria andN2pointWakuLessThanOrEqualTo(Object value) {
			addCriterion("n2point_waku <=", value, "n2pointWaku");
			return (Criteria) this;
		}

		public Criteria andN2pointWakuIn(List<Object> values) {
			addCriterion("n2point_waku in", values, "n2pointWaku");
			return (Criteria) this;
		}

		public Criteria andN2pointWakuNotIn(List<Object> values) {
			addCriterion("n2point_waku not in", values, "n2pointWaku");
			return (Criteria) this;
		}

		public Criteria andN2pointWakuBetween(Object value1, Object value2) {
			addCriterion("n2point_waku between", value1, value2, "n2pointWaku");
			return (Criteria) this;
		}

		public Criteria andN2pointWakuNotBetween(Object value1, Object value2) {
			addCriterion("n2point_waku not between", value1, value2, "n2pointWaku");
			return (Criteria) this;
		}

		public Criteria andN3pointWakuIsNull() {
			addCriterion("n3point_waku is null");
			return (Criteria) this;
		}

		public Criteria andN3pointWakuIsNotNull() {
			addCriterion("n3point_waku is not null");
			return (Criteria) this;
		}

		public Criteria andN3pointWakuEqualTo(Object value) {
			addCriterion("n3point_waku =", value, "n3pointWaku");
			return (Criteria) this;
		}

		public Criteria andN3pointWakuNotEqualTo(Object value) {
			addCriterion("n3point_waku <>", value, "n3pointWaku");
			return (Criteria) this;
		}

		public Criteria andN3pointWakuGreaterThan(Object value) {
			addCriterion("n3point_waku >", value, "n3pointWaku");
			return (Criteria) this;
		}

		public Criteria andN3pointWakuGreaterThanOrEqualTo(Object value) {
			addCriterion("n3point_waku >=", value, "n3pointWaku");
			return (Criteria) this;
		}

		public Criteria andN3pointWakuLessThan(Object value) {
			addCriterion("n3point_waku <", value, "n3pointWaku");
			return (Criteria) this;
		}

		public Criteria andN3pointWakuLessThanOrEqualTo(Object value) {
			addCriterion("n3point_waku <=", value, "n3pointWaku");
			return (Criteria) this;
		}

		public Criteria andN3pointWakuIn(List<Object> values) {
			addCriterion("n3point_waku in", values, "n3pointWaku");
			return (Criteria) this;
		}

		public Criteria andN3pointWakuNotIn(List<Object> values) {
			addCriterion("n3point_waku not in", values, "n3pointWaku");
			return (Criteria) this;
		}

		public Criteria andN3pointWakuBetween(Object value1, Object value2) {
			addCriterion("n3point_waku between", value1, value2, "n3pointWaku");
			return (Criteria) this;
		}

		public Criteria andN3pointWakuNotBetween(Object value1, Object value2) {
			addCriterion("n3point_waku not between", value1, value2, "n3pointWaku");
			return (Criteria) this;
		}

		public Criteria andAvgstartWakuIsNull() {
			addCriterion("avgstart_waku is null");
			return (Criteria) this;
		}

		public Criteria andAvgstartWakuIsNotNull() {
			addCriterion("avgstart_waku is not null");
			return (Criteria) this;
		}

		public Criteria andAvgstartWakuEqualTo(Object value) {
			addCriterion("avgstart_waku =", value, "avgstartWaku");
			return (Criteria) this;
		}

		public Criteria andAvgstartWakuNotEqualTo(Object value) {
			addCriterion("avgstart_waku <>", value, "avgstartWaku");
			return (Criteria) this;
		}

		public Criteria andAvgstartWakuGreaterThan(Object value) {
			addCriterion("avgstart_waku >", value, "avgstartWaku");
			return (Criteria) this;
		}

		public Criteria andAvgstartWakuGreaterThanOrEqualTo(Object value) {
			addCriterion("avgstart_waku >=", value, "avgstartWaku");
			return (Criteria) this;
		}

		public Criteria andAvgstartWakuLessThan(Object value) {
			addCriterion("avgstart_waku <", value, "avgstartWaku");
			return (Criteria) this;
		}

		public Criteria andAvgstartWakuLessThanOrEqualTo(Object value) {
			addCriterion("avgstart_waku <=", value, "avgstartWaku");
			return (Criteria) this;
		}

		public Criteria andAvgstartWakuIn(List<Object> values) {
			addCriterion("avgstart_waku in", values, "avgstartWaku");
			return (Criteria) this;
		}

		public Criteria andAvgstartWakuNotIn(List<Object> values) {
			addCriterion("avgstart_waku not in", values, "avgstartWaku");
			return (Criteria) this;
		}

		public Criteria andAvgstartWakuBetween(Object value1, Object value2) {
			addCriterion("avgstart_waku between", value1, value2, "avgstartWaku");
			return (Criteria) this;
		}

		public Criteria andAvgstartWakuNotBetween(Object value1, Object value2) {
			addCriterion("avgstart_waku not between", value1, value2, "avgstartWaku");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.rec_racer_trend
	 * @mbg.generated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.rec_racer_trend
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}