<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pengkong.boatrace.mybatis.client.MlEvaluationMapper">
  <resultMap id="BaseResultMap" type="com.pengkong.boatrace.mybatis.entity.MlEvaluation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="resultno" jdbcType="VARCHAR" property="resultno" />
    <result column="modelno" jdbcType="VARCHAR" property="modelno" />
    <result column="patternid" jdbcType="VARCHAR" property="patternid" />
    <result column="pattern" jdbcType="VARCHAR" property="pattern" />
    <result column="bettype" jdbcType="VARCHAR" property="bettype" />
    <result column="kumiban" jdbcType="VARCHAR" property="kumiban" />
    <result column="betcnt" jdbcType="INTEGER" property="betcnt" />
    <result column="hitcnt" jdbcType="INTEGER" property="hitcnt" />
    <result column="betamt" jdbcType="INTEGER" property="betamt" />
    <result column="hitamt" jdbcType="INTEGER" property="hitamt" />
    <result column="betrate" jdbcType="DOUBLE" property="betrate" />
    <result column="hitrate" jdbcType="DOUBLE" property="hitrate" />
    <result column="incomerate" jdbcType="DOUBLE" property="incomerate" />
    <result column="hmeanrate" jdbcType="DOUBLE" property="hmeanrate" />
    <result column="balance" jdbcType="ARRAY" property="balance" typeHandler="com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler" />
    <result column="bal_slope" jdbcType="ARRAY" property="balSlope" typeHandler="com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler" />
    <result column="pt_precision" jdbcType="DOUBLE" property="ptPrecision" />
    <result column="pt_recall" jdbcType="DOUBLE" property="ptRecall" />
    <result column="pt_fmeasure" jdbcType="DOUBLE" property="ptFmeasure" />
    <result column="inc_min" jdbcType="DOUBLE" property="incMin" />
    <result column="inc_max" jdbcType="DOUBLE" property="incMax" />
    <result column="inc_mean" jdbcType="DOUBLE" property="incMean" />
    <result column="inc_stddev" jdbcType="DOUBLE" property="incStddev" />
    <result column="inc_skewness" jdbcType="DOUBLE" property="incSkewness" />
    <result column="inc_kurtosis" jdbcType="DOUBLE" property="incKurtosis" />
    <result column="hitodds_min" jdbcType="DOUBLE" property="hitoddsMin" />
    <result column="hitodds_max" jdbcType="DOUBLE" property="hitoddsMax" />
    <result column="hitodds_mean" jdbcType="DOUBLE" property="hitoddsMean" />
    <result column="hitodds_stddev" jdbcType="DOUBLE" property="hitoddsStddev" />
    <result column="hitodds_median" jdbcType="DOUBLE" property="hitoddsMedian" />
    <result column="hitodds_skewness" jdbcType="DOUBLE" property="hitoddsSkewness" />
    <result column="hitodds_kurtosis" jdbcType="DOUBLE" property="hitoddsKurtosis" />
    <result column="odds_min" jdbcType="DOUBLE" property="oddsMin" />
    <result column="odds_max" jdbcType="DOUBLE" property="oddsMax" />
    <result column="odds_mean" jdbcType="DOUBLE" property="oddsMean" />
    <result column="odds_stddev" jdbcType="DOUBLE" property="oddsStddev" />
    <result column="odds_median" jdbcType="DOUBLE" property="oddsMedian" />
    <result column="odds_skewness" jdbcType="DOUBLE" property="oddsSkewness" />
    <result column="odds_kurtosis" jdbcType="DOUBLE" property="oddsKurtosis" />
    <result column="beforeodds_min" jdbcType="DOUBLE" property="beforeoddsMin" />
    <result column="beforeodds_max" jdbcType="DOUBLE" property="beforeoddsMax" />
    <result column="beforeodds_mean" jdbcType="DOUBLE" property="beforeoddsMean" />
    <result column="beforeodds_stddev" jdbcType="DOUBLE" property="beforeoddsStddev" />
    <result column="beforeodds_median" jdbcType="DOUBLE" property="beforeoddsMedian" />
    <result column="beforeodds_skewness" jdbcType="DOUBLE" property="beforeoddsSkewness" />
    <result column="beforeodds_kurtosis" jdbcType="DOUBLE" property="beforeoddsKurtosis" />
    <result column="betr_slope" jdbcType="DOUBLE" property="betrSlope" />
    <result column="hitr_slope" jdbcType="DOUBLE" property="hitrSlope" />
    <result column="incr_slope" jdbcType="DOUBLE" property="incrSlope" />
    <result column="probability_min" jdbcType="DOUBLE" property="probabilityMin" />
    <result column="probability_max" jdbcType="DOUBLE" property="probabilityMax" />
    <result column="probability_mean" jdbcType="DOUBLE" property="probabilityMean" />
    <result column="probability_stddev" jdbcType="DOUBLE" property="probabilityStddev" />
    <result column="probability_skewness" jdbcType="DOUBLE" property="probabilitySkewness" />
    <result column="probability_kurtosis" jdbcType="DOUBLE" property="probabilityKurtosis" />
    <result column="probability_median" jdbcType="DOUBLE" property="probabilityMedian" />
    <result column="range_bestmin" jdbcType="DOUBLE" property="rangeBestmin" />
    <result column="range_bestmax" jdbcType="DOUBLE" property="rangeBestmax" />
    <result column="range_worstmin" jdbcType="DOUBLE" property="rangeWorstmin" />
    <result column="range_worstmax" jdbcType="DOUBLE" property="rangeWorstmax" />
    <result column="range_betcnt" jdbcType="INTEGER" property="rangeBetcnt" />
    <result column="range_hitcnt" jdbcType="INTEGER" property="rangeHitcnt" />
    <result column="range_hitamt" jdbcType="INTEGER" property="rangeHitamt" />
    <result column="range_betrate" jdbcType="DOUBLE" property="rangeBetrate" />
    <result column="range_hitrate" jdbcType="DOUBLE" property="rangeHitrate" />
    <result column="range_incomerate" jdbcType="DOUBLE" property="rangeIncomerate" />
    <result column="range_hitbetrate" jdbcType="DOUBLE" property="rangeHitbetrate" />
    <result column="range_hitamtrate" jdbcType="DOUBLE" property="rangeHitamtrate" />
    <result column="range_hitrslope" jdbcType="DOUBLE" property="rangeHitrslope" />
    <result column="range_incrslope" jdbcType="DOUBLE" property="rangeIncrslope" />
    <result column="range_incmslope" jdbcType="DOUBLE" property="rangeIncmslope" />
    <result column="range_hmeanrate" jdbcType="DOUBLE" property="rangeHmeanrate" />
    <result column="rangeodds_bestmin" jdbcType="DOUBLE" property="rangeoddsBestmin" />
    <result column="rangeodds_bestmax" jdbcType="DOUBLE" property="rangeoddsBestmax" />
    <result column="rangeodds_worstmin" jdbcType="DOUBLE" property="rangeoddsWorstmin" />
    <result column="rangeodds_worstmax" jdbcType="DOUBLE" property="rangeoddsWorstmax" />
    <result column="rangeodds_betcnt" jdbcType="INTEGER" property="rangeoddsBetcnt" />
    <result column="rangeodds_hitcnt" jdbcType="INTEGER" property="rangeoddsHitcnt" />
    <result column="rangeodds_hitamt" jdbcType="INTEGER" property="rangeoddsHitamt" />
    <result column="rangeodds_betrate" jdbcType="DOUBLE" property="rangeoddsBetrate" />
    <result column="rangeodds_hitrate" jdbcType="DOUBLE" property="rangeoddsHitrate" />
    <result column="rangeodds_incomerate" jdbcType="DOUBLE" property="rangeoddsIncomerate" />
    <result column="rangeodds_hitbetrate" jdbcType="DOUBLE" property="rangeoddsHitbetrate" />
    <result column="rangeodds_hitamtrate" jdbcType="DOUBLE" property="rangeoddsHitamtrate" />
    <result column="rangeodds_hitrslope" jdbcType="DOUBLE" property="rangeoddsHitrslope" />
    <result column="rangeodds_incrslope" jdbcType="DOUBLE" property="rangeoddsIncrslope" />
    <result column="rangeodds_incmslope" jdbcType="DOUBLE" property="rangeoddsIncmslope" />
    <result column="rangeodds_hmeanrate" jdbcType="DOUBLE" property="rangeoddsHmeanrate" />
    <result column="bal_pluscnt" jdbcType="INTEGER" property="balPluscnt" />
    <result column="result_type" jdbcType="VARCHAR" property="resultType" />
    <result column="evaluations_id" jdbcType="VARCHAR" property="evaluationsId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    resultno, modelno, patternid, pattern, bettype, kumiban, betcnt, hitcnt, betamt, 
    hitamt, betrate, hitrate, incomerate, hmeanrate, balance, bal_slope, pt_precision, 
    pt_recall, pt_fmeasure, inc_min, inc_max, inc_mean, inc_stddev, inc_skewness, inc_kurtosis, 
    hitodds_min, hitodds_max, hitodds_mean, hitodds_stddev, hitodds_median, hitodds_skewness, 
    hitodds_kurtosis, odds_min, odds_max, odds_mean, odds_stddev, odds_median, odds_skewness, 
    odds_kurtosis, beforeodds_min, beforeodds_max, beforeodds_mean, beforeodds_stddev, 
    beforeodds_median, beforeodds_skewness, beforeodds_kurtosis, betr_slope, hitr_slope, 
    incr_slope, probability_min, probability_max, probability_mean, probability_stddev, 
    probability_skewness, probability_kurtosis, probability_median, range_bestmin, range_bestmax, 
    range_worstmin, range_worstmax, range_betcnt, range_hitcnt, range_hitamt, range_betrate, 
    range_hitrate, range_incomerate, range_hitbetrate, range_hitamtrate, range_hitrslope, 
    range_incrslope, range_incmslope, range_hmeanrate, rangeodds_bestmin, rangeodds_bestmax, 
    rangeodds_worstmin, rangeodds_worstmax, rangeodds_betcnt, rangeodds_hitcnt, rangeodds_hitamt, 
    rangeodds_betrate, rangeodds_hitrate, rangeodds_incomerate, rangeodds_hitbetrate, 
    rangeodds_hitamtrate, rangeodds_hitrslope, rangeodds_incrslope, rangeodds_incmslope, 
    rangeodds_hmeanrate, bal_pluscnt, result_type, evaluations_id
  </sql>
  <select id="selectByExample" parameterType="com.pengkong.boatrace.mybatis.entity.MlEvaluationExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from public.ml_evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.pengkong.boatrace.mybatis.entity.MlEvaluationExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from public.ml_evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pengkong.boatrace.mybatis.entity.MlEvaluation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into public.ml_evaluation (resultno, modelno, patternid, 
      pattern, bettype, kumiban, 
      betcnt, hitcnt, betamt, 
      hitamt, betrate, hitrate, 
      incomerate, hmeanrate, balance, 
      bal_slope, pt_precision, pt_recall, 
      pt_fmeasure, inc_min, inc_max, 
      inc_mean, inc_stddev, inc_skewness, 
      inc_kurtosis, hitodds_min, hitodds_max, 
      hitodds_mean, hitodds_stddev, hitodds_median, 
      hitodds_skewness, hitodds_kurtosis, odds_min, 
      odds_max, odds_mean, odds_stddev, 
      odds_median, odds_skewness, odds_kurtosis, 
      beforeodds_min, beforeodds_max, beforeodds_mean, 
      beforeodds_stddev, beforeodds_median, beforeodds_skewness, 
      beforeodds_kurtosis, betr_slope, hitr_slope, 
      incr_slope, probability_min, probability_max, 
      probability_mean, probability_stddev, probability_skewness, 
      probability_kurtosis, probability_median, range_bestmin, 
      range_bestmax, range_worstmin, range_worstmax, 
      range_betcnt, range_hitcnt, range_hitamt, 
      range_betrate, range_hitrate, range_incomerate, 
      range_hitbetrate, range_hitamtrate, range_hitrslope, 
      range_incrslope, range_incmslope, range_hmeanrate, 
      rangeodds_bestmin, rangeodds_bestmax, rangeodds_worstmin, 
      rangeodds_worstmax, rangeodds_betcnt, rangeodds_hitcnt, 
      rangeodds_hitamt, rangeodds_betrate, rangeodds_hitrate, 
      rangeodds_incomerate, rangeodds_hitbetrate, 
      rangeodds_hitamtrate, rangeodds_hitrslope, 
      rangeodds_incrslope, rangeodds_incmslope, rangeodds_hmeanrate, 
      bal_pluscnt, result_type, evaluations_id
      )
    values (#{resultno,jdbcType=VARCHAR}, #{modelno,jdbcType=VARCHAR}, #{patternid,jdbcType=VARCHAR}, 
      #{pattern,jdbcType=VARCHAR}, #{bettype,jdbcType=VARCHAR}, #{kumiban,jdbcType=VARCHAR}, 
      #{betcnt,jdbcType=INTEGER}, #{hitcnt,jdbcType=INTEGER}, #{betamt,jdbcType=INTEGER}, 
      #{hitamt,jdbcType=INTEGER}, #{betrate,jdbcType=DOUBLE}, #{hitrate,jdbcType=DOUBLE}, 
      #{incomerate,jdbcType=DOUBLE}, #{hmeanrate,jdbcType=DOUBLE}, 
      #{balance,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler}, 
      #{balSlope,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler}, 
      #{ptPrecision,jdbcType=DOUBLE}, #{ptRecall,jdbcType=DOUBLE}, 
      #{ptFmeasure,jdbcType=DOUBLE}, #{incMin,jdbcType=DOUBLE}, #{incMax,jdbcType=DOUBLE}, 
      #{incMean,jdbcType=DOUBLE}, #{incStddev,jdbcType=DOUBLE}, #{incSkewness,jdbcType=DOUBLE}, 
      #{incKurtosis,jdbcType=DOUBLE}, #{hitoddsMin,jdbcType=DOUBLE}, #{hitoddsMax,jdbcType=DOUBLE}, 
      #{hitoddsMean,jdbcType=DOUBLE}, #{hitoddsStddev,jdbcType=DOUBLE}, #{hitoddsMedian,jdbcType=DOUBLE}, 
      #{hitoddsSkewness,jdbcType=DOUBLE}, #{hitoddsKurtosis,jdbcType=DOUBLE}, #{oddsMin,jdbcType=DOUBLE}, 
      #{oddsMax,jdbcType=DOUBLE}, #{oddsMean,jdbcType=DOUBLE}, #{oddsStddev,jdbcType=DOUBLE}, 
      #{oddsMedian,jdbcType=DOUBLE}, #{oddsSkewness,jdbcType=DOUBLE}, #{oddsKurtosis,jdbcType=DOUBLE}, 
      #{beforeoddsMin,jdbcType=DOUBLE}, #{beforeoddsMax,jdbcType=DOUBLE}, #{beforeoddsMean,jdbcType=DOUBLE}, 
      #{beforeoddsStddev,jdbcType=DOUBLE}, #{beforeoddsMedian,jdbcType=DOUBLE}, #{beforeoddsSkewness,jdbcType=DOUBLE}, 
      #{beforeoddsKurtosis,jdbcType=DOUBLE}, #{betrSlope,jdbcType=DOUBLE}, #{hitrSlope,jdbcType=DOUBLE}, 
      #{incrSlope,jdbcType=DOUBLE}, #{probabilityMin,jdbcType=DOUBLE}, #{probabilityMax,jdbcType=DOUBLE}, 
      #{probabilityMean,jdbcType=DOUBLE}, #{probabilityStddev,jdbcType=DOUBLE}, #{probabilitySkewness,jdbcType=DOUBLE}, 
      #{probabilityKurtosis,jdbcType=DOUBLE}, #{probabilityMedian,jdbcType=DOUBLE}, #{rangeBestmin,jdbcType=DOUBLE}, 
      #{rangeBestmax,jdbcType=DOUBLE}, #{rangeWorstmin,jdbcType=DOUBLE}, #{rangeWorstmax,jdbcType=DOUBLE}, 
      #{rangeBetcnt,jdbcType=INTEGER}, #{rangeHitcnt,jdbcType=INTEGER}, #{rangeHitamt,jdbcType=INTEGER}, 
      #{rangeBetrate,jdbcType=DOUBLE}, #{rangeHitrate,jdbcType=DOUBLE}, #{rangeIncomerate,jdbcType=DOUBLE}, 
      #{rangeHitbetrate,jdbcType=DOUBLE}, #{rangeHitamtrate,jdbcType=DOUBLE}, #{rangeHitrslope,jdbcType=DOUBLE}, 
      #{rangeIncrslope,jdbcType=DOUBLE}, #{rangeIncmslope,jdbcType=DOUBLE}, #{rangeHmeanrate,jdbcType=DOUBLE}, 
      #{rangeoddsBestmin,jdbcType=DOUBLE}, #{rangeoddsBestmax,jdbcType=DOUBLE}, #{rangeoddsWorstmin,jdbcType=DOUBLE}, 
      #{rangeoddsWorstmax,jdbcType=DOUBLE}, #{rangeoddsBetcnt,jdbcType=INTEGER}, #{rangeoddsHitcnt,jdbcType=INTEGER}, 
      #{rangeoddsHitamt,jdbcType=INTEGER}, #{rangeoddsBetrate,jdbcType=DOUBLE}, #{rangeoddsHitrate,jdbcType=DOUBLE}, 
      #{rangeoddsIncomerate,jdbcType=DOUBLE}, #{rangeoddsHitbetrate,jdbcType=DOUBLE}, 
      #{rangeoddsHitamtrate,jdbcType=DOUBLE}, #{rangeoddsHitrslope,jdbcType=DOUBLE}, 
      #{rangeoddsIncrslope,jdbcType=DOUBLE}, #{rangeoddsIncmslope,jdbcType=DOUBLE}, #{rangeoddsHmeanrate,jdbcType=DOUBLE}, 
      #{balPluscnt,jdbcType=INTEGER}, #{resultType,jdbcType=VARCHAR}, #{evaluationsId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pengkong.boatrace.mybatis.entity.MlEvaluation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into public.ml_evaluation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resultno != null">
        resultno,
      </if>
      <if test="modelno != null">
        modelno,
      </if>
      <if test="patternid != null">
        patternid,
      </if>
      <if test="pattern != null">
        pattern,
      </if>
      <if test="bettype != null">
        bettype,
      </if>
      <if test="kumiban != null">
        kumiban,
      </if>
      <if test="betcnt != null">
        betcnt,
      </if>
      <if test="hitcnt != null">
        hitcnt,
      </if>
      <if test="betamt != null">
        betamt,
      </if>
      <if test="hitamt != null">
        hitamt,
      </if>
      <if test="betrate != null">
        betrate,
      </if>
      <if test="hitrate != null">
        hitrate,
      </if>
      <if test="incomerate != null">
        incomerate,
      </if>
      <if test="hmeanrate != null">
        hmeanrate,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="balSlope != null">
        bal_slope,
      </if>
      <if test="ptPrecision != null">
        pt_precision,
      </if>
      <if test="ptRecall != null">
        pt_recall,
      </if>
      <if test="ptFmeasure != null">
        pt_fmeasure,
      </if>
      <if test="incMin != null">
        inc_min,
      </if>
      <if test="incMax != null">
        inc_max,
      </if>
      <if test="incMean != null">
        inc_mean,
      </if>
      <if test="incStddev != null">
        inc_stddev,
      </if>
      <if test="incSkewness != null">
        inc_skewness,
      </if>
      <if test="incKurtosis != null">
        inc_kurtosis,
      </if>
      <if test="hitoddsMin != null">
        hitodds_min,
      </if>
      <if test="hitoddsMax != null">
        hitodds_max,
      </if>
      <if test="hitoddsMean != null">
        hitodds_mean,
      </if>
      <if test="hitoddsStddev != null">
        hitodds_stddev,
      </if>
      <if test="hitoddsMedian != null">
        hitodds_median,
      </if>
      <if test="hitoddsSkewness != null">
        hitodds_skewness,
      </if>
      <if test="hitoddsKurtosis != null">
        hitodds_kurtosis,
      </if>
      <if test="oddsMin != null">
        odds_min,
      </if>
      <if test="oddsMax != null">
        odds_max,
      </if>
      <if test="oddsMean != null">
        odds_mean,
      </if>
      <if test="oddsStddev != null">
        odds_stddev,
      </if>
      <if test="oddsMedian != null">
        odds_median,
      </if>
      <if test="oddsSkewness != null">
        odds_skewness,
      </if>
      <if test="oddsKurtosis != null">
        odds_kurtosis,
      </if>
      <if test="beforeoddsMin != null">
        beforeodds_min,
      </if>
      <if test="beforeoddsMax != null">
        beforeodds_max,
      </if>
      <if test="beforeoddsMean != null">
        beforeodds_mean,
      </if>
      <if test="beforeoddsStddev != null">
        beforeodds_stddev,
      </if>
      <if test="beforeoddsMedian != null">
        beforeodds_median,
      </if>
      <if test="beforeoddsSkewness != null">
        beforeodds_skewness,
      </if>
      <if test="beforeoddsKurtosis != null">
        beforeodds_kurtosis,
      </if>
      <if test="betrSlope != null">
        betr_slope,
      </if>
      <if test="hitrSlope != null">
        hitr_slope,
      </if>
      <if test="incrSlope != null">
        incr_slope,
      </if>
      <if test="probabilityMin != null">
        probability_min,
      </if>
      <if test="probabilityMax != null">
        probability_max,
      </if>
      <if test="probabilityMean != null">
        probability_mean,
      </if>
      <if test="probabilityStddev != null">
        probability_stddev,
      </if>
      <if test="probabilitySkewness != null">
        probability_skewness,
      </if>
      <if test="probabilityKurtosis != null">
        probability_kurtosis,
      </if>
      <if test="probabilityMedian != null">
        probability_median,
      </if>
      <if test="rangeBestmin != null">
        range_bestmin,
      </if>
      <if test="rangeBestmax != null">
        range_bestmax,
      </if>
      <if test="rangeWorstmin != null">
        range_worstmin,
      </if>
      <if test="rangeWorstmax != null">
        range_worstmax,
      </if>
      <if test="rangeBetcnt != null">
        range_betcnt,
      </if>
      <if test="rangeHitcnt != null">
        range_hitcnt,
      </if>
      <if test="rangeHitamt != null">
        range_hitamt,
      </if>
      <if test="rangeBetrate != null">
        range_betrate,
      </if>
      <if test="rangeHitrate != null">
        range_hitrate,
      </if>
      <if test="rangeIncomerate != null">
        range_incomerate,
      </if>
      <if test="rangeHitbetrate != null">
        range_hitbetrate,
      </if>
      <if test="rangeHitamtrate != null">
        range_hitamtrate,
      </if>
      <if test="rangeHitrslope != null">
        range_hitrslope,
      </if>
      <if test="rangeIncrslope != null">
        range_incrslope,
      </if>
      <if test="rangeIncmslope != null">
        range_incmslope,
      </if>
      <if test="rangeHmeanrate != null">
        range_hmeanrate,
      </if>
      <if test="rangeoddsBestmin != null">
        rangeodds_bestmin,
      </if>
      <if test="rangeoddsBestmax != null">
        rangeodds_bestmax,
      </if>
      <if test="rangeoddsWorstmin != null">
        rangeodds_worstmin,
      </if>
      <if test="rangeoddsWorstmax != null">
        rangeodds_worstmax,
      </if>
      <if test="rangeoddsBetcnt != null">
        rangeodds_betcnt,
      </if>
      <if test="rangeoddsHitcnt != null">
        rangeodds_hitcnt,
      </if>
      <if test="rangeoddsHitamt != null">
        rangeodds_hitamt,
      </if>
      <if test="rangeoddsBetrate != null">
        rangeodds_betrate,
      </if>
      <if test="rangeoddsHitrate != null">
        rangeodds_hitrate,
      </if>
      <if test="rangeoddsIncomerate != null">
        rangeodds_incomerate,
      </if>
      <if test="rangeoddsHitbetrate != null">
        rangeodds_hitbetrate,
      </if>
      <if test="rangeoddsHitamtrate != null">
        rangeodds_hitamtrate,
      </if>
      <if test="rangeoddsHitrslope != null">
        rangeodds_hitrslope,
      </if>
      <if test="rangeoddsIncrslope != null">
        rangeodds_incrslope,
      </if>
      <if test="rangeoddsIncmslope != null">
        rangeodds_incmslope,
      </if>
      <if test="rangeoddsHmeanrate != null">
        rangeodds_hmeanrate,
      </if>
      <if test="balPluscnt != null">
        bal_pluscnt,
      </if>
      <if test="resultType != null">
        result_type,
      </if>
      <if test="evaluationsId != null">
        evaluations_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resultno != null">
        #{resultno,jdbcType=VARCHAR},
      </if>
      <if test="modelno != null">
        #{modelno,jdbcType=VARCHAR},
      </if>
      <if test="patternid != null">
        #{patternid,jdbcType=VARCHAR},
      </if>
      <if test="pattern != null">
        #{pattern,jdbcType=VARCHAR},
      </if>
      <if test="bettype != null">
        #{bettype,jdbcType=VARCHAR},
      </if>
      <if test="kumiban != null">
        #{kumiban,jdbcType=VARCHAR},
      </if>
      <if test="betcnt != null">
        #{betcnt,jdbcType=INTEGER},
      </if>
      <if test="hitcnt != null">
        #{hitcnt,jdbcType=INTEGER},
      </if>
      <if test="betamt != null">
        #{betamt,jdbcType=INTEGER},
      </if>
      <if test="hitamt != null">
        #{hitamt,jdbcType=INTEGER},
      </if>
      <if test="betrate != null">
        #{betrate,jdbcType=DOUBLE},
      </if>
      <if test="hitrate != null">
        #{hitrate,jdbcType=DOUBLE},
      </if>
      <if test="incomerate != null">
        #{incomerate,jdbcType=DOUBLE},
      </if>
      <if test="hmeanrate != null">
        #{hmeanrate,jdbcType=DOUBLE},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler},
      </if>
      <if test="balSlope != null">
        #{balSlope,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler},
      </if>
      <if test="ptPrecision != null">
        #{ptPrecision,jdbcType=DOUBLE},
      </if>
      <if test="ptRecall != null">
        #{ptRecall,jdbcType=DOUBLE},
      </if>
      <if test="ptFmeasure != null">
        #{ptFmeasure,jdbcType=DOUBLE},
      </if>
      <if test="incMin != null">
        #{incMin,jdbcType=DOUBLE},
      </if>
      <if test="incMax != null">
        #{incMax,jdbcType=DOUBLE},
      </if>
      <if test="incMean != null">
        #{incMean,jdbcType=DOUBLE},
      </if>
      <if test="incStddev != null">
        #{incStddev,jdbcType=DOUBLE},
      </if>
      <if test="incSkewness != null">
        #{incSkewness,jdbcType=DOUBLE},
      </if>
      <if test="incKurtosis != null">
        #{incKurtosis,jdbcType=DOUBLE},
      </if>
      <if test="hitoddsMin != null">
        #{hitoddsMin,jdbcType=DOUBLE},
      </if>
      <if test="hitoddsMax != null">
        #{hitoddsMax,jdbcType=DOUBLE},
      </if>
      <if test="hitoddsMean != null">
        #{hitoddsMean,jdbcType=DOUBLE},
      </if>
      <if test="hitoddsStddev != null">
        #{hitoddsStddev,jdbcType=DOUBLE},
      </if>
      <if test="hitoddsMedian != null">
        #{hitoddsMedian,jdbcType=DOUBLE},
      </if>
      <if test="hitoddsSkewness != null">
        #{hitoddsSkewness,jdbcType=DOUBLE},
      </if>
      <if test="hitoddsKurtosis != null">
        #{hitoddsKurtosis,jdbcType=DOUBLE},
      </if>
      <if test="oddsMin != null">
        #{oddsMin,jdbcType=DOUBLE},
      </if>
      <if test="oddsMax != null">
        #{oddsMax,jdbcType=DOUBLE},
      </if>
      <if test="oddsMean != null">
        #{oddsMean,jdbcType=DOUBLE},
      </if>
      <if test="oddsStddev != null">
        #{oddsStddev,jdbcType=DOUBLE},
      </if>
      <if test="oddsMedian != null">
        #{oddsMedian,jdbcType=DOUBLE},
      </if>
      <if test="oddsSkewness != null">
        #{oddsSkewness,jdbcType=DOUBLE},
      </if>
      <if test="oddsKurtosis != null">
        #{oddsKurtosis,jdbcType=DOUBLE},
      </if>
      <if test="beforeoddsMin != null">
        #{beforeoddsMin,jdbcType=DOUBLE},
      </if>
      <if test="beforeoddsMax != null">
        #{beforeoddsMax,jdbcType=DOUBLE},
      </if>
      <if test="beforeoddsMean != null">
        #{beforeoddsMean,jdbcType=DOUBLE},
      </if>
      <if test="beforeoddsStddev != null">
        #{beforeoddsStddev,jdbcType=DOUBLE},
      </if>
      <if test="beforeoddsMedian != null">
        #{beforeoddsMedian,jdbcType=DOUBLE},
      </if>
      <if test="beforeoddsSkewness != null">
        #{beforeoddsSkewness,jdbcType=DOUBLE},
      </if>
      <if test="beforeoddsKurtosis != null">
        #{beforeoddsKurtosis,jdbcType=DOUBLE},
      </if>
      <if test="betrSlope != null">
        #{betrSlope,jdbcType=DOUBLE},
      </if>
      <if test="hitrSlope != null">
        #{hitrSlope,jdbcType=DOUBLE},
      </if>
      <if test="incrSlope != null">
        #{incrSlope,jdbcType=DOUBLE},
      </if>
      <if test="probabilityMin != null">
        #{probabilityMin,jdbcType=DOUBLE},
      </if>
      <if test="probabilityMax != null">
        #{probabilityMax,jdbcType=DOUBLE},
      </if>
      <if test="probabilityMean != null">
        #{probabilityMean,jdbcType=DOUBLE},
      </if>
      <if test="probabilityStddev != null">
        #{probabilityStddev,jdbcType=DOUBLE},
      </if>
      <if test="probabilitySkewness != null">
        #{probabilitySkewness,jdbcType=DOUBLE},
      </if>
      <if test="probabilityKurtosis != null">
        #{probabilityKurtosis,jdbcType=DOUBLE},
      </if>
      <if test="probabilityMedian != null">
        #{probabilityMedian,jdbcType=DOUBLE},
      </if>
      <if test="rangeBestmin != null">
        #{rangeBestmin,jdbcType=DOUBLE},
      </if>
      <if test="rangeBestmax != null">
        #{rangeBestmax,jdbcType=DOUBLE},
      </if>
      <if test="rangeWorstmin != null">
        #{rangeWorstmin,jdbcType=DOUBLE},
      </if>
      <if test="rangeWorstmax != null">
        #{rangeWorstmax,jdbcType=DOUBLE},
      </if>
      <if test="rangeBetcnt != null">
        #{rangeBetcnt,jdbcType=INTEGER},
      </if>
      <if test="rangeHitcnt != null">
        #{rangeHitcnt,jdbcType=INTEGER},
      </if>
      <if test="rangeHitamt != null">
        #{rangeHitamt,jdbcType=INTEGER},
      </if>
      <if test="rangeBetrate != null">
        #{rangeBetrate,jdbcType=DOUBLE},
      </if>
      <if test="rangeHitrate != null">
        #{rangeHitrate,jdbcType=DOUBLE},
      </if>
      <if test="rangeIncomerate != null">
        #{rangeIncomerate,jdbcType=DOUBLE},
      </if>
      <if test="rangeHitbetrate != null">
        #{rangeHitbetrate,jdbcType=DOUBLE},
      </if>
      <if test="rangeHitamtrate != null">
        #{rangeHitamtrate,jdbcType=DOUBLE},
      </if>
      <if test="rangeHitrslope != null">
        #{rangeHitrslope,jdbcType=DOUBLE},
      </if>
      <if test="rangeIncrslope != null">
        #{rangeIncrslope,jdbcType=DOUBLE},
      </if>
      <if test="rangeIncmslope != null">
        #{rangeIncmslope,jdbcType=DOUBLE},
      </if>
      <if test="rangeHmeanrate != null">
        #{rangeHmeanrate,jdbcType=DOUBLE},
      </if>
      <if test="rangeoddsBestmin != null">
        #{rangeoddsBestmin,jdbcType=DOUBLE},
      </if>
      <if test="rangeoddsBestmax != null">
        #{rangeoddsBestmax,jdbcType=DOUBLE},
      </if>
      <if test="rangeoddsWorstmin != null">
        #{rangeoddsWorstmin,jdbcType=DOUBLE},
      </if>
      <if test="rangeoddsWorstmax != null">
        #{rangeoddsWorstmax,jdbcType=DOUBLE},
      </if>
      <if test="rangeoddsBetcnt != null">
        #{rangeoddsBetcnt,jdbcType=INTEGER},
      </if>
      <if test="rangeoddsHitcnt != null">
        #{rangeoddsHitcnt,jdbcType=INTEGER},
      </if>
      <if test="rangeoddsHitamt != null">
        #{rangeoddsHitamt,jdbcType=INTEGER},
      </if>
      <if test="rangeoddsBetrate != null">
        #{rangeoddsBetrate,jdbcType=DOUBLE},
      </if>
      <if test="rangeoddsHitrate != null">
        #{rangeoddsHitrate,jdbcType=DOUBLE},
      </if>
      <if test="rangeoddsIncomerate != null">
        #{rangeoddsIncomerate,jdbcType=DOUBLE},
      </if>
      <if test="rangeoddsHitbetrate != null">
        #{rangeoddsHitbetrate,jdbcType=DOUBLE},
      </if>
      <if test="rangeoddsHitamtrate != null">
        #{rangeoddsHitamtrate,jdbcType=DOUBLE},
      </if>
      <if test="rangeoddsHitrslope != null">
        #{rangeoddsHitrslope,jdbcType=DOUBLE},
      </if>
      <if test="rangeoddsIncrslope != null">
        #{rangeoddsIncrslope,jdbcType=DOUBLE},
      </if>
      <if test="rangeoddsIncmslope != null">
        #{rangeoddsIncmslope,jdbcType=DOUBLE},
      </if>
      <if test="rangeoddsHmeanrate != null">
        #{rangeoddsHmeanrate,jdbcType=DOUBLE},
      </if>
      <if test="balPluscnt != null">
        #{balPluscnt,jdbcType=INTEGER},
      </if>
      <if test="resultType != null">
        #{resultType,jdbcType=VARCHAR},
      </if>
      <if test="evaluationsId != null">
        #{evaluationsId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.ml_evaluation
    <set>
      <if test="record.resultno != null">
        resultno = #{record.resultno,jdbcType=VARCHAR},
      </if>
      <if test="record.modelno != null">
        modelno = #{record.modelno,jdbcType=VARCHAR},
      </if>
      <if test="record.patternid != null">
        patternid = #{record.patternid,jdbcType=VARCHAR},
      </if>
      <if test="record.pattern != null">
        pattern = #{record.pattern,jdbcType=VARCHAR},
      </if>
      <if test="record.bettype != null">
        bettype = #{record.bettype,jdbcType=VARCHAR},
      </if>
      <if test="record.kumiban != null">
        kumiban = #{record.kumiban,jdbcType=VARCHAR},
      </if>
      <if test="record.betcnt != null">
        betcnt = #{record.betcnt,jdbcType=INTEGER},
      </if>
      <if test="record.hitcnt != null">
        hitcnt = #{record.hitcnt,jdbcType=INTEGER},
      </if>
      <if test="record.betamt != null">
        betamt = #{record.betamt,jdbcType=INTEGER},
      </if>
      <if test="record.hitamt != null">
        hitamt = #{record.hitamt,jdbcType=INTEGER},
      </if>
      <if test="record.betrate != null">
        betrate = #{record.betrate,jdbcType=DOUBLE},
      </if>
      <if test="record.hitrate != null">
        hitrate = #{record.hitrate,jdbcType=DOUBLE},
      </if>
      <if test="record.incomerate != null">
        incomerate = #{record.incomerate,jdbcType=DOUBLE},
      </if>
      <if test="record.hmeanrate != null">
        hmeanrate = #{record.hmeanrate,jdbcType=DOUBLE},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler},
      </if>
      <if test="record.balSlope != null">
        bal_slope = #{record.balSlope,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler},
      </if>
      <if test="record.ptPrecision != null">
        pt_precision = #{record.ptPrecision,jdbcType=DOUBLE},
      </if>
      <if test="record.ptRecall != null">
        pt_recall = #{record.ptRecall,jdbcType=DOUBLE},
      </if>
      <if test="record.ptFmeasure != null">
        pt_fmeasure = #{record.ptFmeasure,jdbcType=DOUBLE},
      </if>
      <if test="record.incMin != null">
        inc_min = #{record.incMin,jdbcType=DOUBLE},
      </if>
      <if test="record.incMax != null">
        inc_max = #{record.incMax,jdbcType=DOUBLE},
      </if>
      <if test="record.incMean != null">
        inc_mean = #{record.incMean,jdbcType=DOUBLE},
      </if>
      <if test="record.incStddev != null">
        inc_stddev = #{record.incStddev,jdbcType=DOUBLE},
      </if>
      <if test="record.incSkewness != null">
        inc_skewness = #{record.incSkewness,jdbcType=DOUBLE},
      </if>
      <if test="record.incKurtosis != null">
        inc_kurtosis = #{record.incKurtosis,jdbcType=DOUBLE},
      </if>
      <if test="record.hitoddsMin != null">
        hitodds_min = #{record.hitoddsMin,jdbcType=DOUBLE},
      </if>
      <if test="record.hitoddsMax != null">
        hitodds_max = #{record.hitoddsMax,jdbcType=DOUBLE},
      </if>
      <if test="record.hitoddsMean != null">
        hitodds_mean = #{record.hitoddsMean,jdbcType=DOUBLE},
      </if>
      <if test="record.hitoddsStddev != null">
        hitodds_stddev = #{record.hitoddsStddev,jdbcType=DOUBLE},
      </if>
      <if test="record.hitoddsMedian != null">
        hitodds_median = #{record.hitoddsMedian,jdbcType=DOUBLE},
      </if>
      <if test="record.hitoddsSkewness != null">
        hitodds_skewness = #{record.hitoddsSkewness,jdbcType=DOUBLE},
      </if>
      <if test="record.hitoddsKurtosis != null">
        hitodds_kurtosis = #{record.hitoddsKurtosis,jdbcType=DOUBLE},
      </if>
      <if test="record.oddsMin != null">
        odds_min = #{record.oddsMin,jdbcType=DOUBLE},
      </if>
      <if test="record.oddsMax != null">
        odds_max = #{record.oddsMax,jdbcType=DOUBLE},
      </if>
      <if test="record.oddsMean != null">
        odds_mean = #{record.oddsMean,jdbcType=DOUBLE},
      </if>
      <if test="record.oddsStddev != null">
        odds_stddev = #{record.oddsStddev,jdbcType=DOUBLE},
      </if>
      <if test="record.oddsMedian != null">
        odds_median = #{record.oddsMedian,jdbcType=DOUBLE},
      </if>
      <if test="record.oddsSkewness != null">
        odds_skewness = #{record.oddsSkewness,jdbcType=DOUBLE},
      </if>
      <if test="record.oddsKurtosis != null">
        odds_kurtosis = #{record.oddsKurtosis,jdbcType=DOUBLE},
      </if>
      <if test="record.beforeoddsMin != null">
        beforeodds_min = #{record.beforeoddsMin,jdbcType=DOUBLE},
      </if>
      <if test="record.beforeoddsMax != null">
        beforeodds_max = #{record.beforeoddsMax,jdbcType=DOUBLE},
      </if>
      <if test="record.beforeoddsMean != null">
        beforeodds_mean = #{record.beforeoddsMean,jdbcType=DOUBLE},
      </if>
      <if test="record.beforeoddsStddev != null">
        beforeodds_stddev = #{record.beforeoddsStddev,jdbcType=DOUBLE},
      </if>
      <if test="record.beforeoddsMedian != null">
        beforeodds_median = #{record.beforeoddsMedian,jdbcType=DOUBLE},
      </if>
      <if test="record.beforeoddsSkewness != null">
        beforeodds_skewness = #{record.beforeoddsSkewness,jdbcType=DOUBLE},
      </if>
      <if test="record.beforeoddsKurtosis != null">
        beforeodds_kurtosis = #{record.beforeoddsKurtosis,jdbcType=DOUBLE},
      </if>
      <if test="record.betrSlope != null">
        betr_slope = #{record.betrSlope,jdbcType=DOUBLE},
      </if>
      <if test="record.hitrSlope != null">
        hitr_slope = #{record.hitrSlope,jdbcType=DOUBLE},
      </if>
      <if test="record.incrSlope != null">
        incr_slope = #{record.incrSlope,jdbcType=DOUBLE},
      </if>
      <if test="record.probabilityMin != null">
        probability_min = #{record.probabilityMin,jdbcType=DOUBLE},
      </if>
      <if test="record.probabilityMax != null">
        probability_max = #{record.probabilityMax,jdbcType=DOUBLE},
      </if>
      <if test="record.probabilityMean != null">
        probability_mean = #{record.probabilityMean,jdbcType=DOUBLE},
      </if>
      <if test="record.probabilityStddev != null">
        probability_stddev = #{record.probabilityStddev,jdbcType=DOUBLE},
      </if>
      <if test="record.probabilitySkewness != null">
        probability_skewness = #{record.probabilitySkewness,jdbcType=DOUBLE},
      </if>
      <if test="record.probabilityKurtosis != null">
        probability_kurtosis = #{record.probabilityKurtosis,jdbcType=DOUBLE},
      </if>
      <if test="record.probabilityMedian != null">
        probability_median = #{record.probabilityMedian,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeBestmin != null">
        range_bestmin = #{record.rangeBestmin,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeBestmax != null">
        range_bestmax = #{record.rangeBestmax,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeWorstmin != null">
        range_worstmin = #{record.rangeWorstmin,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeWorstmax != null">
        range_worstmax = #{record.rangeWorstmax,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeBetcnt != null">
        range_betcnt = #{record.rangeBetcnt,jdbcType=INTEGER},
      </if>
      <if test="record.rangeHitcnt != null">
        range_hitcnt = #{record.rangeHitcnt,jdbcType=INTEGER},
      </if>
      <if test="record.rangeHitamt != null">
        range_hitamt = #{record.rangeHitamt,jdbcType=INTEGER},
      </if>
      <if test="record.rangeBetrate != null">
        range_betrate = #{record.rangeBetrate,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeHitrate != null">
        range_hitrate = #{record.rangeHitrate,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeIncomerate != null">
        range_incomerate = #{record.rangeIncomerate,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeHitbetrate != null">
        range_hitbetrate = #{record.rangeHitbetrate,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeHitamtrate != null">
        range_hitamtrate = #{record.rangeHitamtrate,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeHitrslope != null">
        range_hitrslope = #{record.rangeHitrslope,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeIncrslope != null">
        range_incrslope = #{record.rangeIncrslope,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeIncmslope != null">
        range_incmslope = #{record.rangeIncmslope,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeHmeanrate != null">
        range_hmeanrate = #{record.rangeHmeanrate,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeoddsBestmin != null">
        rangeodds_bestmin = #{record.rangeoddsBestmin,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeoddsBestmax != null">
        rangeodds_bestmax = #{record.rangeoddsBestmax,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeoddsWorstmin != null">
        rangeodds_worstmin = #{record.rangeoddsWorstmin,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeoddsWorstmax != null">
        rangeodds_worstmax = #{record.rangeoddsWorstmax,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeoddsBetcnt != null">
        rangeodds_betcnt = #{record.rangeoddsBetcnt,jdbcType=INTEGER},
      </if>
      <if test="record.rangeoddsHitcnt != null">
        rangeodds_hitcnt = #{record.rangeoddsHitcnt,jdbcType=INTEGER},
      </if>
      <if test="record.rangeoddsHitamt != null">
        rangeodds_hitamt = #{record.rangeoddsHitamt,jdbcType=INTEGER},
      </if>
      <if test="record.rangeoddsBetrate != null">
        rangeodds_betrate = #{record.rangeoddsBetrate,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeoddsHitrate != null">
        rangeodds_hitrate = #{record.rangeoddsHitrate,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeoddsIncomerate != null">
        rangeodds_incomerate = #{record.rangeoddsIncomerate,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeoddsHitbetrate != null">
        rangeodds_hitbetrate = #{record.rangeoddsHitbetrate,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeoddsHitamtrate != null">
        rangeodds_hitamtrate = #{record.rangeoddsHitamtrate,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeoddsHitrslope != null">
        rangeodds_hitrslope = #{record.rangeoddsHitrslope,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeoddsIncrslope != null">
        rangeodds_incrslope = #{record.rangeoddsIncrslope,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeoddsIncmslope != null">
        rangeodds_incmslope = #{record.rangeoddsIncmslope,jdbcType=DOUBLE},
      </if>
      <if test="record.rangeoddsHmeanrate != null">
        rangeodds_hmeanrate = #{record.rangeoddsHmeanrate,jdbcType=DOUBLE},
      </if>
      <if test="record.balPluscnt != null">
        bal_pluscnt = #{record.balPluscnt,jdbcType=INTEGER},
      </if>
      <if test="record.resultType != null">
        result_type = #{record.resultType,jdbcType=VARCHAR},
      </if>
      <if test="record.evaluationsId != null">
        evaluations_id = #{record.evaluationsId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.ml_evaluation
    set resultno = #{record.resultno,jdbcType=VARCHAR},
      modelno = #{record.modelno,jdbcType=VARCHAR},
      patternid = #{record.patternid,jdbcType=VARCHAR},
      pattern = #{record.pattern,jdbcType=VARCHAR},
      bettype = #{record.bettype,jdbcType=VARCHAR},
      kumiban = #{record.kumiban,jdbcType=VARCHAR},
      betcnt = #{record.betcnt,jdbcType=INTEGER},
      hitcnt = #{record.hitcnt,jdbcType=INTEGER},
      betamt = #{record.betamt,jdbcType=INTEGER},
      hitamt = #{record.hitamt,jdbcType=INTEGER},
      betrate = #{record.betrate,jdbcType=DOUBLE},
      hitrate = #{record.hitrate,jdbcType=DOUBLE},
      incomerate = #{record.incomerate,jdbcType=DOUBLE},
      hmeanrate = #{record.hmeanrate,jdbcType=DOUBLE},
      balance = #{record.balance,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler},
      bal_slope = #{record.balSlope,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler},
      pt_precision = #{record.ptPrecision,jdbcType=DOUBLE},
      pt_recall = #{record.ptRecall,jdbcType=DOUBLE},
      pt_fmeasure = #{record.ptFmeasure,jdbcType=DOUBLE},
      inc_min = #{record.incMin,jdbcType=DOUBLE},
      inc_max = #{record.incMax,jdbcType=DOUBLE},
      inc_mean = #{record.incMean,jdbcType=DOUBLE},
      inc_stddev = #{record.incStddev,jdbcType=DOUBLE},
      inc_skewness = #{record.incSkewness,jdbcType=DOUBLE},
      inc_kurtosis = #{record.incKurtosis,jdbcType=DOUBLE},
      hitodds_min = #{record.hitoddsMin,jdbcType=DOUBLE},
      hitodds_max = #{record.hitoddsMax,jdbcType=DOUBLE},
      hitodds_mean = #{record.hitoddsMean,jdbcType=DOUBLE},
      hitodds_stddev = #{record.hitoddsStddev,jdbcType=DOUBLE},
      hitodds_median = #{record.hitoddsMedian,jdbcType=DOUBLE},
      hitodds_skewness = #{record.hitoddsSkewness,jdbcType=DOUBLE},
      hitodds_kurtosis = #{record.hitoddsKurtosis,jdbcType=DOUBLE},
      odds_min = #{record.oddsMin,jdbcType=DOUBLE},
      odds_max = #{record.oddsMax,jdbcType=DOUBLE},
      odds_mean = #{record.oddsMean,jdbcType=DOUBLE},
      odds_stddev = #{record.oddsStddev,jdbcType=DOUBLE},
      odds_median = #{record.oddsMedian,jdbcType=DOUBLE},
      odds_skewness = #{record.oddsSkewness,jdbcType=DOUBLE},
      odds_kurtosis = #{record.oddsKurtosis,jdbcType=DOUBLE},
      beforeodds_min = #{record.beforeoddsMin,jdbcType=DOUBLE},
      beforeodds_max = #{record.beforeoddsMax,jdbcType=DOUBLE},
      beforeodds_mean = #{record.beforeoddsMean,jdbcType=DOUBLE},
      beforeodds_stddev = #{record.beforeoddsStddev,jdbcType=DOUBLE},
      beforeodds_median = #{record.beforeoddsMedian,jdbcType=DOUBLE},
      beforeodds_skewness = #{record.beforeoddsSkewness,jdbcType=DOUBLE},
      beforeodds_kurtosis = #{record.beforeoddsKurtosis,jdbcType=DOUBLE},
      betr_slope = #{record.betrSlope,jdbcType=DOUBLE},
      hitr_slope = #{record.hitrSlope,jdbcType=DOUBLE},
      incr_slope = #{record.incrSlope,jdbcType=DOUBLE},
      probability_min = #{record.probabilityMin,jdbcType=DOUBLE},
      probability_max = #{record.probabilityMax,jdbcType=DOUBLE},
      probability_mean = #{record.probabilityMean,jdbcType=DOUBLE},
      probability_stddev = #{record.probabilityStddev,jdbcType=DOUBLE},
      probability_skewness = #{record.probabilitySkewness,jdbcType=DOUBLE},
      probability_kurtosis = #{record.probabilityKurtosis,jdbcType=DOUBLE},
      probability_median = #{record.probabilityMedian,jdbcType=DOUBLE},
      range_bestmin = #{record.rangeBestmin,jdbcType=DOUBLE},
      range_bestmax = #{record.rangeBestmax,jdbcType=DOUBLE},
      range_worstmin = #{record.rangeWorstmin,jdbcType=DOUBLE},
      range_worstmax = #{record.rangeWorstmax,jdbcType=DOUBLE},
      range_betcnt = #{record.rangeBetcnt,jdbcType=INTEGER},
      range_hitcnt = #{record.rangeHitcnt,jdbcType=INTEGER},
      range_hitamt = #{record.rangeHitamt,jdbcType=INTEGER},
      range_betrate = #{record.rangeBetrate,jdbcType=DOUBLE},
      range_hitrate = #{record.rangeHitrate,jdbcType=DOUBLE},
      range_incomerate = #{record.rangeIncomerate,jdbcType=DOUBLE},
      range_hitbetrate = #{record.rangeHitbetrate,jdbcType=DOUBLE},
      range_hitamtrate = #{record.rangeHitamtrate,jdbcType=DOUBLE},
      range_hitrslope = #{record.rangeHitrslope,jdbcType=DOUBLE},
      range_incrslope = #{record.rangeIncrslope,jdbcType=DOUBLE},
      range_incmslope = #{record.rangeIncmslope,jdbcType=DOUBLE},
      range_hmeanrate = #{record.rangeHmeanrate,jdbcType=DOUBLE},
      rangeodds_bestmin = #{record.rangeoddsBestmin,jdbcType=DOUBLE},
      rangeodds_bestmax = #{record.rangeoddsBestmax,jdbcType=DOUBLE},
      rangeodds_worstmin = #{record.rangeoddsWorstmin,jdbcType=DOUBLE},
      rangeodds_worstmax = #{record.rangeoddsWorstmax,jdbcType=DOUBLE},
      rangeodds_betcnt = #{record.rangeoddsBetcnt,jdbcType=INTEGER},
      rangeodds_hitcnt = #{record.rangeoddsHitcnt,jdbcType=INTEGER},
      rangeodds_hitamt = #{record.rangeoddsHitamt,jdbcType=INTEGER},
      rangeodds_betrate = #{record.rangeoddsBetrate,jdbcType=DOUBLE},
      rangeodds_hitrate = #{record.rangeoddsHitrate,jdbcType=DOUBLE},
      rangeodds_incomerate = #{record.rangeoddsIncomerate,jdbcType=DOUBLE},
      rangeodds_hitbetrate = #{record.rangeoddsHitbetrate,jdbcType=DOUBLE},
      rangeodds_hitamtrate = #{record.rangeoddsHitamtrate,jdbcType=DOUBLE},
      rangeodds_hitrslope = #{record.rangeoddsHitrslope,jdbcType=DOUBLE},
      rangeodds_incrslope = #{record.rangeoddsIncrslope,jdbcType=DOUBLE},
      rangeodds_incmslope = #{record.rangeoddsIncmslope,jdbcType=DOUBLE},
      rangeodds_hmeanrate = #{record.rangeoddsHmeanrate,jdbcType=DOUBLE},
      bal_pluscnt = #{record.balPluscnt,jdbcType=INTEGER},
      result_type = #{record.resultType,jdbcType=VARCHAR},
      evaluations_id = #{record.evaluationsId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>