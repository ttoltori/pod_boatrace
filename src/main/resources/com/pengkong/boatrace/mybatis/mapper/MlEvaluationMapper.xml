<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pengkong.boatrace.mybatis.client.MlEvaluationMapper">
  <resultMap id="BaseResultMap" type="com.pengkong.boatrace.mybatis.entity.MlEvaluation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="resultno" jdbcType="VARCHAR" property="resultno" />
    <result column="modelno" jdbcType="VARCHAR" property="modelno" />
    <result column="patternid" jdbcType="VARCHAR" property="patternid" />
    <result column="pattern" jdbcType="VARCHAR" property="pattern" />
    <result column="bettype" jdbcType="VARCHAR" property="bettype" />
    <result column="kumiban" jdbcType="VARCHAR" property="kumiban" />
    <result column="betcnt" jdbcType="INTEGER" property="betcnt" />
    <result column="hitcnt" jdbcType="INTEGER" property="hitcnt" />
    <result column="betamt" jdbcType="INTEGER" property="betamt" />
    <result column="hitamt" jdbcType="INTEGER" property="hitamt" />
    <result column="betrate" jdbcType="DOUBLE" property="betrate" />
    <result column="hitrate" jdbcType="DOUBLE" property="hitrate" />
    <result column="incomerate" jdbcType="DOUBLE" property="incomerate" />
    <result column="hmeanrate" jdbcType="DOUBLE" property="hmeanrate" />
    <result column="balance" jdbcType="ARRAY" property="balance" typeHandler="com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler" />
    <result column="bal_slope" jdbcType="ARRAY" property="balSlope" typeHandler="com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler" />
    <result column="betr_slope" jdbcType="DOUBLE" property="betrSlope" />
    <result column="hitr_slope" jdbcType="DOUBLE" property="hitrSlope" />
    <result column="incr_slope" jdbcType="DOUBLE" property="incrSlope" />
    <result column="pt_precision" jdbcType="DOUBLE" property="ptPrecision" />
    <result column="pt_recall" jdbcType="DOUBLE" property="ptRecall" />
    <result column="pt_fmeasure" jdbcType="DOUBLE" property="ptFmeasure" />
    <result column="hodds_min" jdbcType="DOUBLE" property="hoddsMin" />
    <result column="hodds_max" jdbcType="DOUBLE" property="hoddsMax" />
    <result column="hodds_mean" jdbcType="DOUBLE" property="hoddsMean" />
    <result column="hodds_stddev" jdbcType="DOUBLE" property="hoddsStddev" />
    <result column="hodds_median" jdbcType="DOUBLE" property="hoddsMedian" />
    <result column="hoddsrk_min" jdbcType="DOUBLE" property="hoddsrkMin" />
    <result column="hoddsrk_max" jdbcType="DOUBLE" property="hoddsrkMax" />
    <result column="hoddsrk_mean" jdbcType="DOUBLE" property="hoddsrkMean" />
    <result column="hoddsrk_stddev" jdbcType="DOUBLE" property="hoddsrkStddev" />
    <result column="hoddsrk_median" jdbcType="DOUBLE" property="hoddsrkMedian" />
    <result column="rodds_min" jdbcType="DOUBLE" property="roddsMin" />
    <result column="rodds_max" jdbcType="DOUBLE" property="roddsMax" />
    <result column="rodds_mean" jdbcType="DOUBLE" property="roddsMean" />
    <result column="rodds_stddev" jdbcType="DOUBLE" property="roddsStddev" />
    <result column="rodds_median" jdbcType="DOUBLE" property="roddsMedian" />
    <result column="roddsrk_min" jdbcType="DOUBLE" property="roddsrkMin" />
    <result column="roddsrk_max" jdbcType="DOUBLE" property="roddsrkMax" />
    <result column="roddsrk_mean" jdbcType="DOUBLE" property="roddsrkMean" />
    <result column="roddsrk_stddev" jdbcType="DOUBLE" property="roddsrkStddev" />
    <result column="roddsrk_median" jdbcType="DOUBLE" property="roddsrkMedian" />
    <result column="bodds_min" jdbcType="DOUBLE" property="boddsMin" />
    <result column="bodds_max" jdbcType="DOUBLE" property="boddsMax" />
    <result column="bodds_mean" jdbcType="DOUBLE" property="boddsMean" />
    <result column="bodds_stddev" jdbcType="DOUBLE" property="boddsStddev" />
    <result column="bodds_median" jdbcType="DOUBLE" property="boddsMedian" />
    <result column="boddsrk_min" jdbcType="DOUBLE" property="boddsrkMin" />
    <result column="boddsrk_max" jdbcType="DOUBLE" property="boddsrkMax" />
    <result column="boddsrk_mean" jdbcType="DOUBLE" property="boddsrkMean" />
    <result column="boddsrk_stddev" jdbcType="DOUBLE" property="boddsrkStddev" />
    <result column="boddsrk_median" jdbcType="DOUBLE" property="boddsrkMedian" />
    <result column="prob_min" jdbcType="DOUBLE" property="probMin" />
    <result column="prob_max" jdbcType="DOUBLE" property="probMax" />
    <result column="prob_mean" jdbcType="DOUBLE" property="probMean" />
    <result column="prob_stddev" jdbcType="DOUBLE" property="probStddev" />
    <result column="prob_median" jdbcType="DOUBLE" property="probMedian" />
    <result column="ror_bestmin" jdbcType="DOUBLE" property="rorBestmin" />
    <result column="ror_bestmax" jdbcType="DOUBLE" property="rorBestmax" />
    <result column="ror_betcnt" jdbcType="INTEGER" property="rorBetcnt" />
    <result column="ror_betamt" jdbcType="INTEGER" property="rorBetamt" />
    <result column="ror_hitcnt" jdbcType="INTEGER" property="rorHitcnt" />
    <result column="ror_hitamt" jdbcType="INTEGER" property="rorHitamt" />
    <result column="ror_betrate" jdbcType="DOUBLE" property="rorBetrate" />
    <result column="ror_hitrate" jdbcType="DOUBLE" property="rorHitrate" />
    <result column="ror_incomerate" jdbcType="DOUBLE" property="rorIncomerate" />
    <result column="rork_bestmin" jdbcType="DOUBLE" property="rorkBestmin" />
    <result column="rork_bestmax" jdbcType="DOUBLE" property="rorkBestmax" />
    <result column="rork_betcnt" jdbcType="INTEGER" property="rorkBetcnt" />
    <result column="rork_betamt" jdbcType="INTEGER" property="rorkBetamt" />
    <result column="rork_hitcnt" jdbcType="INTEGER" property="rorkHitcnt" />
    <result column="rork_hitamt" jdbcType="INTEGER" property="rorkHitamt" />
    <result column="rork_betrate" jdbcType="DOUBLE" property="rorkBetrate" />
    <result column="rork_hitrate" jdbcType="DOUBLE" property="rorkHitrate" />
    <result column="rork_incomerate" jdbcType="DOUBLE" property="rorkIncomerate" />
    <result column="bor_bestmin" jdbcType="DOUBLE" property="borBestmin" />
    <result column="bor_bestmax" jdbcType="DOUBLE" property="borBestmax" />
    <result column="bor_betcnt" jdbcType="INTEGER" property="borBetcnt" />
    <result column="bor_betamt" jdbcType="INTEGER" property="borBetamt" />
    <result column="bor_hitcnt" jdbcType="INTEGER" property="borHitcnt" />
    <result column="bor_hitamt" jdbcType="INTEGER" property="borHitamt" />
    <result column="bor_betrate" jdbcType="DOUBLE" property="borBetrate" />
    <result column="bor_hitrate" jdbcType="DOUBLE" property="borHitrate" />
    <result column="bor_incomerate" jdbcType="DOUBLE" property="borIncomerate" />
    <result column="bork_bestmin" jdbcType="DOUBLE" property="borkBestmin" />
    <result column="bork_bestmax" jdbcType="DOUBLE" property="borkBestmax" />
    <result column="bork_betcnt" jdbcType="INTEGER" property="borkBetcnt" />
    <result column="bork_betamt" jdbcType="INTEGER" property="borkBetamt" />
    <result column="bork_hitcnt" jdbcType="INTEGER" property="borkHitcnt" />
    <result column="bork_hitamt" jdbcType="INTEGER" property="borkHitamt" />
    <result column="bork_betrate" jdbcType="DOUBLE" property="borkBetrate" />
    <result column="bork_hitrate" jdbcType="DOUBLE" property="borkHitrate" />
    <result column="bork_incomerate" jdbcType="DOUBLE" property="borkIncomerate" />
    <result column="pr_bestmin" jdbcType="DOUBLE" property="prBestmin" />
    <result column="pr_bestmax" jdbcType="DOUBLE" property="prBestmax" />
    <result column="pr_betcnt" jdbcType="INTEGER" property="prBetcnt" />
    <result column="pr_betamt" jdbcType="INTEGER" property="prBetamt" />
    <result column="pr_hitcnt" jdbcType="INTEGER" property="prHitcnt" />
    <result column="pr_hitamt" jdbcType="INTEGER" property="prHitamt" />
    <result column="pr_betrate" jdbcType="DOUBLE" property="prBetrate" />
    <result column="pr_hitrate" jdbcType="DOUBLE" property="prHitrate" />
    <result column="pr_incomerate" jdbcType="DOUBLE" property="prIncomerate" />
    <result column="bal_pluscnt" jdbcType="INTEGER" property="balPluscnt" />
    <result column="result_type" jdbcType="VARCHAR" property="resultType" />
    <result column="evaluations_id" jdbcType="VARCHAR" property="evaluationsId" />
    <result column="bonus_pr" jdbcType="VARCHAR" property="bonusPr" />
    <result column="bonus_bor" jdbcType="VARCHAR" property="bonusBor" />
    <result column="bonus_bork" jdbcType="VARCHAR" property="bonusBork" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    resultno, modelno, patternid, pattern, bettype, kumiban, betcnt, hitcnt, betamt, 
    hitamt, betrate, hitrate, incomerate, hmeanrate, balance, bal_slope, betr_slope, 
    hitr_slope, incr_slope, pt_precision, pt_recall, pt_fmeasure, hodds_min, hodds_max, 
    hodds_mean, hodds_stddev, hodds_median, hoddsrk_min, hoddsrk_max, hoddsrk_mean, hoddsrk_stddev, 
    hoddsrk_median, rodds_min, rodds_max, rodds_mean, rodds_stddev, rodds_median, roddsrk_min, 
    roddsrk_max, roddsrk_mean, roddsrk_stddev, roddsrk_median, bodds_min, bodds_max, 
    bodds_mean, bodds_stddev, bodds_median, boddsrk_min, boddsrk_max, boddsrk_mean, boddsrk_stddev, 
    boddsrk_median, prob_min, prob_max, prob_mean, prob_stddev, prob_median, ror_bestmin, 
    ror_bestmax, ror_betcnt, ror_betamt, ror_hitcnt, ror_hitamt, ror_betrate, ror_hitrate, 
    ror_incomerate, rork_bestmin, rork_bestmax, rork_betcnt, rork_betamt, rork_hitcnt, 
    rork_hitamt, rork_betrate, rork_hitrate, rork_incomerate, bor_bestmin, bor_bestmax, 
    bor_betcnt, bor_betamt, bor_hitcnt, bor_hitamt, bor_betrate, bor_hitrate, bor_incomerate, 
    bork_bestmin, bork_bestmax, bork_betcnt, bork_betamt, bork_hitcnt, bork_hitamt, bork_betrate, 
    bork_hitrate, bork_incomerate, pr_bestmin, pr_bestmax, pr_betcnt, pr_betamt, pr_hitcnt, 
    pr_hitamt, pr_betrate, pr_hitrate, pr_incomerate, bal_pluscnt, result_type, evaluations_id, 
    bonus_pr, bonus_bor, bonus_bork
  </sql>
  <select id="selectByExample" parameterType="com.pengkong.boatrace.mybatis.entity.MlEvaluationExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from public.ml_evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.pengkong.boatrace.mybatis.entity.MlEvaluationExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from public.ml_evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pengkong.boatrace.mybatis.entity.MlEvaluation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into public.ml_evaluation (resultno, modelno, patternid, 
      pattern, bettype, kumiban, 
      betcnt, hitcnt, betamt, 
      hitamt, betrate, hitrate, 
      incomerate, hmeanrate, balance, 
      bal_slope, betr_slope, hitr_slope, 
      incr_slope, pt_precision, pt_recall, 
      pt_fmeasure, hodds_min, hodds_max, 
      hodds_mean, hodds_stddev, hodds_median, 
      hoddsrk_min, hoddsrk_max, hoddsrk_mean, 
      hoddsrk_stddev, hoddsrk_median, rodds_min, 
      rodds_max, rodds_mean, rodds_stddev, 
      rodds_median, roddsrk_min, roddsrk_max, 
      roddsrk_mean, roddsrk_stddev, roddsrk_median, 
      bodds_min, bodds_max, bodds_mean, 
      bodds_stddev, bodds_median, boddsrk_min, 
      boddsrk_max, boddsrk_mean, boddsrk_stddev, 
      boddsrk_median, prob_min, prob_max, 
      prob_mean, prob_stddev, prob_median, 
      ror_bestmin, ror_bestmax, ror_betcnt, 
      ror_betamt, ror_hitcnt, ror_hitamt, 
      ror_betrate, ror_hitrate, ror_incomerate, 
      rork_bestmin, rork_bestmax, rork_betcnt, 
      rork_betamt, rork_hitcnt, rork_hitamt, 
      rork_betrate, rork_hitrate, rork_incomerate, 
      bor_bestmin, bor_bestmax, bor_betcnt, 
      bor_betamt, bor_hitcnt, bor_hitamt, 
      bor_betrate, bor_hitrate, bor_incomerate, 
      bork_bestmin, bork_bestmax, bork_betcnt, 
      bork_betamt, bork_hitcnt, bork_hitamt, 
      bork_betrate, bork_hitrate, bork_incomerate, 
      pr_bestmin, pr_bestmax, pr_betcnt, 
      pr_betamt, pr_hitcnt, pr_hitamt, 
      pr_betrate, pr_hitrate, pr_incomerate, 
      bal_pluscnt, result_type, evaluations_id, 
      bonus_pr, bonus_bor, bonus_bork
      )
    values (#{resultno,jdbcType=VARCHAR}, #{modelno,jdbcType=VARCHAR}, #{patternid,jdbcType=VARCHAR}, 
      #{pattern,jdbcType=VARCHAR}, #{bettype,jdbcType=VARCHAR}, #{kumiban,jdbcType=VARCHAR}, 
      #{betcnt,jdbcType=INTEGER}, #{hitcnt,jdbcType=INTEGER}, #{betamt,jdbcType=INTEGER}, 
      #{hitamt,jdbcType=INTEGER}, #{betrate,jdbcType=DOUBLE}, #{hitrate,jdbcType=DOUBLE}, 
      #{incomerate,jdbcType=DOUBLE}, #{hmeanrate,jdbcType=DOUBLE}, 
      #{balance,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler}, 
      #{balSlope,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler}, 
      #{betrSlope,jdbcType=DOUBLE}, #{hitrSlope,jdbcType=DOUBLE}, 
      #{incrSlope,jdbcType=DOUBLE}, #{ptPrecision,jdbcType=DOUBLE}, #{ptRecall,jdbcType=DOUBLE}, 
      #{ptFmeasure,jdbcType=DOUBLE}, #{hoddsMin,jdbcType=DOUBLE}, #{hoddsMax,jdbcType=DOUBLE}, 
      #{hoddsMean,jdbcType=DOUBLE}, #{hoddsStddev,jdbcType=DOUBLE}, #{hoddsMedian,jdbcType=DOUBLE}, 
      #{hoddsrkMin,jdbcType=DOUBLE}, #{hoddsrkMax,jdbcType=DOUBLE}, #{hoddsrkMean,jdbcType=DOUBLE}, 
      #{hoddsrkStddev,jdbcType=DOUBLE}, #{hoddsrkMedian,jdbcType=DOUBLE}, #{roddsMin,jdbcType=DOUBLE}, 
      #{roddsMax,jdbcType=DOUBLE}, #{roddsMean,jdbcType=DOUBLE}, #{roddsStddev,jdbcType=DOUBLE}, 
      #{roddsMedian,jdbcType=DOUBLE}, #{roddsrkMin,jdbcType=DOUBLE}, #{roddsrkMax,jdbcType=DOUBLE}, 
      #{roddsrkMean,jdbcType=DOUBLE}, #{roddsrkStddev,jdbcType=DOUBLE}, #{roddsrkMedian,jdbcType=DOUBLE}, 
      #{boddsMin,jdbcType=DOUBLE}, #{boddsMax,jdbcType=DOUBLE}, #{boddsMean,jdbcType=DOUBLE}, 
      #{boddsStddev,jdbcType=DOUBLE}, #{boddsMedian,jdbcType=DOUBLE}, #{boddsrkMin,jdbcType=DOUBLE}, 
      #{boddsrkMax,jdbcType=DOUBLE}, #{boddsrkMean,jdbcType=DOUBLE}, #{boddsrkStddev,jdbcType=DOUBLE}, 
      #{boddsrkMedian,jdbcType=DOUBLE}, #{probMin,jdbcType=DOUBLE}, #{probMax,jdbcType=DOUBLE}, 
      #{probMean,jdbcType=DOUBLE}, #{probStddev,jdbcType=DOUBLE}, #{probMedian,jdbcType=DOUBLE}, 
      #{rorBestmin,jdbcType=DOUBLE}, #{rorBestmax,jdbcType=DOUBLE}, #{rorBetcnt,jdbcType=INTEGER}, 
      #{rorBetamt,jdbcType=INTEGER}, #{rorHitcnt,jdbcType=INTEGER}, #{rorHitamt,jdbcType=INTEGER}, 
      #{rorBetrate,jdbcType=DOUBLE}, #{rorHitrate,jdbcType=DOUBLE}, #{rorIncomerate,jdbcType=DOUBLE}, 
      #{rorkBestmin,jdbcType=DOUBLE}, #{rorkBestmax,jdbcType=DOUBLE}, #{rorkBetcnt,jdbcType=INTEGER}, 
      #{rorkBetamt,jdbcType=INTEGER}, #{rorkHitcnt,jdbcType=INTEGER}, #{rorkHitamt,jdbcType=INTEGER}, 
      #{rorkBetrate,jdbcType=DOUBLE}, #{rorkHitrate,jdbcType=DOUBLE}, #{rorkIncomerate,jdbcType=DOUBLE}, 
      #{borBestmin,jdbcType=DOUBLE}, #{borBestmax,jdbcType=DOUBLE}, #{borBetcnt,jdbcType=INTEGER}, 
      #{borBetamt,jdbcType=INTEGER}, #{borHitcnt,jdbcType=INTEGER}, #{borHitamt,jdbcType=INTEGER}, 
      #{borBetrate,jdbcType=DOUBLE}, #{borHitrate,jdbcType=DOUBLE}, #{borIncomerate,jdbcType=DOUBLE}, 
      #{borkBestmin,jdbcType=DOUBLE}, #{borkBestmax,jdbcType=DOUBLE}, #{borkBetcnt,jdbcType=INTEGER}, 
      #{borkBetamt,jdbcType=INTEGER}, #{borkHitcnt,jdbcType=INTEGER}, #{borkHitamt,jdbcType=INTEGER}, 
      #{borkBetrate,jdbcType=DOUBLE}, #{borkHitrate,jdbcType=DOUBLE}, #{borkIncomerate,jdbcType=DOUBLE}, 
      #{prBestmin,jdbcType=DOUBLE}, #{prBestmax,jdbcType=DOUBLE}, #{prBetcnt,jdbcType=INTEGER}, 
      #{prBetamt,jdbcType=INTEGER}, #{prHitcnt,jdbcType=INTEGER}, #{prHitamt,jdbcType=INTEGER}, 
      #{prBetrate,jdbcType=DOUBLE}, #{prHitrate,jdbcType=DOUBLE}, #{prIncomerate,jdbcType=DOUBLE}, 
      #{balPluscnt,jdbcType=INTEGER}, #{resultType,jdbcType=VARCHAR}, #{evaluationsId,jdbcType=VARCHAR}, 
      #{bonusPr,jdbcType=VARCHAR}, #{bonusBor,jdbcType=VARCHAR}, #{bonusBork,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pengkong.boatrace.mybatis.entity.MlEvaluation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into public.ml_evaluation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resultno != null">
        resultno,
      </if>
      <if test="modelno != null">
        modelno,
      </if>
      <if test="patternid != null">
        patternid,
      </if>
      <if test="pattern != null">
        pattern,
      </if>
      <if test="bettype != null">
        bettype,
      </if>
      <if test="kumiban != null">
        kumiban,
      </if>
      <if test="betcnt != null">
        betcnt,
      </if>
      <if test="hitcnt != null">
        hitcnt,
      </if>
      <if test="betamt != null">
        betamt,
      </if>
      <if test="hitamt != null">
        hitamt,
      </if>
      <if test="betrate != null">
        betrate,
      </if>
      <if test="hitrate != null">
        hitrate,
      </if>
      <if test="incomerate != null">
        incomerate,
      </if>
      <if test="hmeanrate != null">
        hmeanrate,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="balSlope != null">
        bal_slope,
      </if>
      <if test="betrSlope != null">
        betr_slope,
      </if>
      <if test="hitrSlope != null">
        hitr_slope,
      </if>
      <if test="incrSlope != null">
        incr_slope,
      </if>
      <if test="ptPrecision != null">
        pt_precision,
      </if>
      <if test="ptRecall != null">
        pt_recall,
      </if>
      <if test="ptFmeasure != null">
        pt_fmeasure,
      </if>
      <if test="hoddsMin != null">
        hodds_min,
      </if>
      <if test="hoddsMax != null">
        hodds_max,
      </if>
      <if test="hoddsMean != null">
        hodds_mean,
      </if>
      <if test="hoddsStddev != null">
        hodds_stddev,
      </if>
      <if test="hoddsMedian != null">
        hodds_median,
      </if>
      <if test="hoddsrkMin != null">
        hoddsrk_min,
      </if>
      <if test="hoddsrkMax != null">
        hoddsrk_max,
      </if>
      <if test="hoddsrkMean != null">
        hoddsrk_mean,
      </if>
      <if test="hoddsrkStddev != null">
        hoddsrk_stddev,
      </if>
      <if test="hoddsrkMedian != null">
        hoddsrk_median,
      </if>
      <if test="roddsMin != null">
        rodds_min,
      </if>
      <if test="roddsMax != null">
        rodds_max,
      </if>
      <if test="roddsMean != null">
        rodds_mean,
      </if>
      <if test="roddsStddev != null">
        rodds_stddev,
      </if>
      <if test="roddsMedian != null">
        rodds_median,
      </if>
      <if test="roddsrkMin != null">
        roddsrk_min,
      </if>
      <if test="roddsrkMax != null">
        roddsrk_max,
      </if>
      <if test="roddsrkMean != null">
        roddsrk_mean,
      </if>
      <if test="roddsrkStddev != null">
        roddsrk_stddev,
      </if>
      <if test="roddsrkMedian != null">
        roddsrk_median,
      </if>
      <if test="boddsMin != null">
        bodds_min,
      </if>
      <if test="boddsMax != null">
        bodds_max,
      </if>
      <if test="boddsMean != null">
        bodds_mean,
      </if>
      <if test="boddsStddev != null">
        bodds_stddev,
      </if>
      <if test="boddsMedian != null">
        bodds_median,
      </if>
      <if test="boddsrkMin != null">
        boddsrk_min,
      </if>
      <if test="boddsrkMax != null">
        boddsrk_max,
      </if>
      <if test="boddsrkMean != null">
        boddsrk_mean,
      </if>
      <if test="boddsrkStddev != null">
        boddsrk_stddev,
      </if>
      <if test="boddsrkMedian != null">
        boddsrk_median,
      </if>
      <if test="probMin != null">
        prob_min,
      </if>
      <if test="probMax != null">
        prob_max,
      </if>
      <if test="probMean != null">
        prob_mean,
      </if>
      <if test="probStddev != null">
        prob_stddev,
      </if>
      <if test="probMedian != null">
        prob_median,
      </if>
      <if test="rorBestmin != null">
        ror_bestmin,
      </if>
      <if test="rorBestmax != null">
        ror_bestmax,
      </if>
      <if test="rorBetcnt != null">
        ror_betcnt,
      </if>
      <if test="rorBetamt != null">
        ror_betamt,
      </if>
      <if test="rorHitcnt != null">
        ror_hitcnt,
      </if>
      <if test="rorHitamt != null">
        ror_hitamt,
      </if>
      <if test="rorBetrate != null">
        ror_betrate,
      </if>
      <if test="rorHitrate != null">
        ror_hitrate,
      </if>
      <if test="rorIncomerate != null">
        ror_incomerate,
      </if>
      <if test="rorkBestmin != null">
        rork_bestmin,
      </if>
      <if test="rorkBestmax != null">
        rork_bestmax,
      </if>
      <if test="rorkBetcnt != null">
        rork_betcnt,
      </if>
      <if test="rorkBetamt != null">
        rork_betamt,
      </if>
      <if test="rorkHitcnt != null">
        rork_hitcnt,
      </if>
      <if test="rorkHitamt != null">
        rork_hitamt,
      </if>
      <if test="rorkBetrate != null">
        rork_betrate,
      </if>
      <if test="rorkHitrate != null">
        rork_hitrate,
      </if>
      <if test="rorkIncomerate != null">
        rork_incomerate,
      </if>
      <if test="borBestmin != null">
        bor_bestmin,
      </if>
      <if test="borBestmax != null">
        bor_bestmax,
      </if>
      <if test="borBetcnt != null">
        bor_betcnt,
      </if>
      <if test="borBetamt != null">
        bor_betamt,
      </if>
      <if test="borHitcnt != null">
        bor_hitcnt,
      </if>
      <if test="borHitamt != null">
        bor_hitamt,
      </if>
      <if test="borBetrate != null">
        bor_betrate,
      </if>
      <if test="borHitrate != null">
        bor_hitrate,
      </if>
      <if test="borIncomerate != null">
        bor_incomerate,
      </if>
      <if test="borkBestmin != null">
        bork_bestmin,
      </if>
      <if test="borkBestmax != null">
        bork_bestmax,
      </if>
      <if test="borkBetcnt != null">
        bork_betcnt,
      </if>
      <if test="borkBetamt != null">
        bork_betamt,
      </if>
      <if test="borkHitcnt != null">
        bork_hitcnt,
      </if>
      <if test="borkHitamt != null">
        bork_hitamt,
      </if>
      <if test="borkBetrate != null">
        bork_betrate,
      </if>
      <if test="borkHitrate != null">
        bork_hitrate,
      </if>
      <if test="borkIncomerate != null">
        bork_incomerate,
      </if>
      <if test="prBestmin != null">
        pr_bestmin,
      </if>
      <if test="prBestmax != null">
        pr_bestmax,
      </if>
      <if test="prBetcnt != null">
        pr_betcnt,
      </if>
      <if test="prBetamt != null">
        pr_betamt,
      </if>
      <if test="prHitcnt != null">
        pr_hitcnt,
      </if>
      <if test="prHitamt != null">
        pr_hitamt,
      </if>
      <if test="prBetrate != null">
        pr_betrate,
      </if>
      <if test="prHitrate != null">
        pr_hitrate,
      </if>
      <if test="prIncomerate != null">
        pr_incomerate,
      </if>
      <if test="balPluscnt != null">
        bal_pluscnt,
      </if>
      <if test="resultType != null">
        result_type,
      </if>
      <if test="evaluationsId != null">
        evaluations_id,
      </if>
      <if test="bonusPr != null">
        bonus_pr,
      </if>
      <if test="bonusBor != null">
        bonus_bor,
      </if>
      <if test="bonusBork != null">
        bonus_bork,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resultno != null">
        #{resultno,jdbcType=VARCHAR},
      </if>
      <if test="modelno != null">
        #{modelno,jdbcType=VARCHAR},
      </if>
      <if test="patternid != null">
        #{patternid,jdbcType=VARCHAR},
      </if>
      <if test="pattern != null">
        #{pattern,jdbcType=VARCHAR},
      </if>
      <if test="bettype != null">
        #{bettype,jdbcType=VARCHAR},
      </if>
      <if test="kumiban != null">
        #{kumiban,jdbcType=VARCHAR},
      </if>
      <if test="betcnt != null">
        #{betcnt,jdbcType=INTEGER},
      </if>
      <if test="hitcnt != null">
        #{hitcnt,jdbcType=INTEGER},
      </if>
      <if test="betamt != null">
        #{betamt,jdbcType=INTEGER},
      </if>
      <if test="hitamt != null">
        #{hitamt,jdbcType=INTEGER},
      </if>
      <if test="betrate != null">
        #{betrate,jdbcType=DOUBLE},
      </if>
      <if test="hitrate != null">
        #{hitrate,jdbcType=DOUBLE},
      </if>
      <if test="incomerate != null">
        #{incomerate,jdbcType=DOUBLE},
      </if>
      <if test="hmeanrate != null">
        #{hmeanrate,jdbcType=DOUBLE},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler},
      </if>
      <if test="balSlope != null">
        #{balSlope,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler},
      </if>
      <if test="betrSlope != null">
        #{betrSlope,jdbcType=DOUBLE},
      </if>
      <if test="hitrSlope != null">
        #{hitrSlope,jdbcType=DOUBLE},
      </if>
      <if test="incrSlope != null">
        #{incrSlope,jdbcType=DOUBLE},
      </if>
      <if test="ptPrecision != null">
        #{ptPrecision,jdbcType=DOUBLE},
      </if>
      <if test="ptRecall != null">
        #{ptRecall,jdbcType=DOUBLE},
      </if>
      <if test="ptFmeasure != null">
        #{ptFmeasure,jdbcType=DOUBLE},
      </if>
      <if test="hoddsMin != null">
        #{hoddsMin,jdbcType=DOUBLE},
      </if>
      <if test="hoddsMax != null">
        #{hoddsMax,jdbcType=DOUBLE},
      </if>
      <if test="hoddsMean != null">
        #{hoddsMean,jdbcType=DOUBLE},
      </if>
      <if test="hoddsStddev != null">
        #{hoddsStddev,jdbcType=DOUBLE},
      </if>
      <if test="hoddsMedian != null">
        #{hoddsMedian,jdbcType=DOUBLE},
      </if>
      <if test="hoddsrkMin != null">
        #{hoddsrkMin,jdbcType=DOUBLE},
      </if>
      <if test="hoddsrkMax != null">
        #{hoddsrkMax,jdbcType=DOUBLE},
      </if>
      <if test="hoddsrkMean != null">
        #{hoddsrkMean,jdbcType=DOUBLE},
      </if>
      <if test="hoddsrkStddev != null">
        #{hoddsrkStddev,jdbcType=DOUBLE},
      </if>
      <if test="hoddsrkMedian != null">
        #{hoddsrkMedian,jdbcType=DOUBLE},
      </if>
      <if test="roddsMin != null">
        #{roddsMin,jdbcType=DOUBLE},
      </if>
      <if test="roddsMax != null">
        #{roddsMax,jdbcType=DOUBLE},
      </if>
      <if test="roddsMean != null">
        #{roddsMean,jdbcType=DOUBLE},
      </if>
      <if test="roddsStddev != null">
        #{roddsStddev,jdbcType=DOUBLE},
      </if>
      <if test="roddsMedian != null">
        #{roddsMedian,jdbcType=DOUBLE},
      </if>
      <if test="roddsrkMin != null">
        #{roddsrkMin,jdbcType=DOUBLE},
      </if>
      <if test="roddsrkMax != null">
        #{roddsrkMax,jdbcType=DOUBLE},
      </if>
      <if test="roddsrkMean != null">
        #{roddsrkMean,jdbcType=DOUBLE},
      </if>
      <if test="roddsrkStddev != null">
        #{roddsrkStddev,jdbcType=DOUBLE},
      </if>
      <if test="roddsrkMedian != null">
        #{roddsrkMedian,jdbcType=DOUBLE},
      </if>
      <if test="boddsMin != null">
        #{boddsMin,jdbcType=DOUBLE},
      </if>
      <if test="boddsMax != null">
        #{boddsMax,jdbcType=DOUBLE},
      </if>
      <if test="boddsMean != null">
        #{boddsMean,jdbcType=DOUBLE},
      </if>
      <if test="boddsStddev != null">
        #{boddsStddev,jdbcType=DOUBLE},
      </if>
      <if test="boddsMedian != null">
        #{boddsMedian,jdbcType=DOUBLE},
      </if>
      <if test="boddsrkMin != null">
        #{boddsrkMin,jdbcType=DOUBLE},
      </if>
      <if test="boddsrkMax != null">
        #{boddsrkMax,jdbcType=DOUBLE},
      </if>
      <if test="boddsrkMean != null">
        #{boddsrkMean,jdbcType=DOUBLE},
      </if>
      <if test="boddsrkStddev != null">
        #{boddsrkStddev,jdbcType=DOUBLE},
      </if>
      <if test="boddsrkMedian != null">
        #{boddsrkMedian,jdbcType=DOUBLE},
      </if>
      <if test="probMin != null">
        #{probMin,jdbcType=DOUBLE},
      </if>
      <if test="probMax != null">
        #{probMax,jdbcType=DOUBLE},
      </if>
      <if test="probMean != null">
        #{probMean,jdbcType=DOUBLE},
      </if>
      <if test="probStddev != null">
        #{probStddev,jdbcType=DOUBLE},
      </if>
      <if test="probMedian != null">
        #{probMedian,jdbcType=DOUBLE},
      </if>
      <if test="rorBestmin != null">
        #{rorBestmin,jdbcType=DOUBLE},
      </if>
      <if test="rorBestmax != null">
        #{rorBestmax,jdbcType=DOUBLE},
      </if>
      <if test="rorBetcnt != null">
        #{rorBetcnt,jdbcType=INTEGER},
      </if>
      <if test="rorBetamt != null">
        #{rorBetamt,jdbcType=INTEGER},
      </if>
      <if test="rorHitcnt != null">
        #{rorHitcnt,jdbcType=INTEGER},
      </if>
      <if test="rorHitamt != null">
        #{rorHitamt,jdbcType=INTEGER},
      </if>
      <if test="rorBetrate != null">
        #{rorBetrate,jdbcType=DOUBLE},
      </if>
      <if test="rorHitrate != null">
        #{rorHitrate,jdbcType=DOUBLE},
      </if>
      <if test="rorIncomerate != null">
        #{rorIncomerate,jdbcType=DOUBLE},
      </if>
      <if test="rorkBestmin != null">
        #{rorkBestmin,jdbcType=DOUBLE},
      </if>
      <if test="rorkBestmax != null">
        #{rorkBestmax,jdbcType=DOUBLE},
      </if>
      <if test="rorkBetcnt != null">
        #{rorkBetcnt,jdbcType=INTEGER},
      </if>
      <if test="rorkBetamt != null">
        #{rorkBetamt,jdbcType=INTEGER},
      </if>
      <if test="rorkHitcnt != null">
        #{rorkHitcnt,jdbcType=INTEGER},
      </if>
      <if test="rorkHitamt != null">
        #{rorkHitamt,jdbcType=INTEGER},
      </if>
      <if test="rorkBetrate != null">
        #{rorkBetrate,jdbcType=DOUBLE},
      </if>
      <if test="rorkHitrate != null">
        #{rorkHitrate,jdbcType=DOUBLE},
      </if>
      <if test="rorkIncomerate != null">
        #{rorkIncomerate,jdbcType=DOUBLE},
      </if>
      <if test="borBestmin != null">
        #{borBestmin,jdbcType=DOUBLE},
      </if>
      <if test="borBestmax != null">
        #{borBestmax,jdbcType=DOUBLE},
      </if>
      <if test="borBetcnt != null">
        #{borBetcnt,jdbcType=INTEGER},
      </if>
      <if test="borBetamt != null">
        #{borBetamt,jdbcType=INTEGER},
      </if>
      <if test="borHitcnt != null">
        #{borHitcnt,jdbcType=INTEGER},
      </if>
      <if test="borHitamt != null">
        #{borHitamt,jdbcType=INTEGER},
      </if>
      <if test="borBetrate != null">
        #{borBetrate,jdbcType=DOUBLE},
      </if>
      <if test="borHitrate != null">
        #{borHitrate,jdbcType=DOUBLE},
      </if>
      <if test="borIncomerate != null">
        #{borIncomerate,jdbcType=DOUBLE},
      </if>
      <if test="borkBestmin != null">
        #{borkBestmin,jdbcType=DOUBLE},
      </if>
      <if test="borkBestmax != null">
        #{borkBestmax,jdbcType=DOUBLE},
      </if>
      <if test="borkBetcnt != null">
        #{borkBetcnt,jdbcType=INTEGER},
      </if>
      <if test="borkBetamt != null">
        #{borkBetamt,jdbcType=INTEGER},
      </if>
      <if test="borkHitcnt != null">
        #{borkHitcnt,jdbcType=INTEGER},
      </if>
      <if test="borkHitamt != null">
        #{borkHitamt,jdbcType=INTEGER},
      </if>
      <if test="borkBetrate != null">
        #{borkBetrate,jdbcType=DOUBLE},
      </if>
      <if test="borkHitrate != null">
        #{borkHitrate,jdbcType=DOUBLE},
      </if>
      <if test="borkIncomerate != null">
        #{borkIncomerate,jdbcType=DOUBLE},
      </if>
      <if test="prBestmin != null">
        #{prBestmin,jdbcType=DOUBLE},
      </if>
      <if test="prBestmax != null">
        #{prBestmax,jdbcType=DOUBLE},
      </if>
      <if test="prBetcnt != null">
        #{prBetcnt,jdbcType=INTEGER},
      </if>
      <if test="prBetamt != null">
        #{prBetamt,jdbcType=INTEGER},
      </if>
      <if test="prHitcnt != null">
        #{prHitcnt,jdbcType=INTEGER},
      </if>
      <if test="prHitamt != null">
        #{prHitamt,jdbcType=INTEGER},
      </if>
      <if test="prBetrate != null">
        #{prBetrate,jdbcType=DOUBLE},
      </if>
      <if test="prHitrate != null">
        #{prHitrate,jdbcType=DOUBLE},
      </if>
      <if test="prIncomerate != null">
        #{prIncomerate,jdbcType=DOUBLE},
      </if>
      <if test="balPluscnt != null">
        #{balPluscnt,jdbcType=INTEGER},
      </if>
      <if test="resultType != null">
        #{resultType,jdbcType=VARCHAR},
      </if>
      <if test="evaluationsId != null">
        #{evaluationsId,jdbcType=VARCHAR},
      </if>
      <if test="bonusPr != null">
        #{bonusPr,jdbcType=VARCHAR},
      </if>
      <if test="bonusBor != null">
        #{bonusBor,jdbcType=VARCHAR},
      </if>
      <if test="bonusBork != null">
        #{bonusBork,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.ml_evaluation
    <set>
      <if test="record.resultno != null">
        resultno = #{record.resultno,jdbcType=VARCHAR},
      </if>
      <if test="record.modelno != null">
        modelno = #{record.modelno,jdbcType=VARCHAR},
      </if>
      <if test="record.patternid != null">
        patternid = #{record.patternid,jdbcType=VARCHAR},
      </if>
      <if test="record.pattern != null">
        pattern = #{record.pattern,jdbcType=VARCHAR},
      </if>
      <if test="record.bettype != null">
        bettype = #{record.bettype,jdbcType=VARCHAR},
      </if>
      <if test="record.kumiban != null">
        kumiban = #{record.kumiban,jdbcType=VARCHAR},
      </if>
      <if test="record.betcnt != null">
        betcnt = #{record.betcnt,jdbcType=INTEGER},
      </if>
      <if test="record.hitcnt != null">
        hitcnt = #{record.hitcnt,jdbcType=INTEGER},
      </if>
      <if test="record.betamt != null">
        betamt = #{record.betamt,jdbcType=INTEGER},
      </if>
      <if test="record.hitamt != null">
        hitamt = #{record.hitamt,jdbcType=INTEGER},
      </if>
      <if test="record.betrate != null">
        betrate = #{record.betrate,jdbcType=DOUBLE},
      </if>
      <if test="record.hitrate != null">
        hitrate = #{record.hitrate,jdbcType=DOUBLE},
      </if>
      <if test="record.incomerate != null">
        incomerate = #{record.incomerate,jdbcType=DOUBLE},
      </if>
      <if test="record.hmeanrate != null">
        hmeanrate = #{record.hmeanrate,jdbcType=DOUBLE},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler},
      </if>
      <if test="record.balSlope != null">
        bal_slope = #{record.balSlope,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler},
      </if>
      <if test="record.betrSlope != null">
        betr_slope = #{record.betrSlope,jdbcType=DOUBLE},
      </if>
      <if test="record.hitrSlope != null">
        hitr_slope = #{record.hitrSlope,jdbcType=DOUBLE},
      </if>
      <if test="record.incrSlope != null">
        incr_slope = #{record.incrSlope,jdbcType=DOUBLE},
      </if>
      <if test="record.ptPrecision != null">
        pt_precision = #{record.ptPrecision,jdbcType=DOUBLE},
      </if>
      <if test="record.ptRecall != null">
        pt_recall = #{record.ptRecall,jdbcType=DOUBLE},
      </if>
      <if test="record.ptFmeasure != null">
        pt_fmeasure = #{record.ptFmeasure,jdbcType=DOUBLE},
      </if>
      <if test="record.hoddsMin != null">
        hodds_min = #{record.hoddsMin,jdbcType=DOUBLE},
      </if>
      <if test="record.hoddsMax != null">
        hodds_max = #{record.hoddsMax,jdbcType=DOUBLE},
      </if>
      <if test="record.hoddsMean != null">
        hodds_mean = #{record.hoddsMean,jdbcType=DOUBLE},
      </if>
      <if test="record.hoddsStddev != null">
        hodds_stddev = #{record.hoddsStddev,jdbcType=DOUBLE},
      </if>
      <if test="record.hoddsMedian != null">
        hodds_median = #{record.hoddsMedian,jdbcType=DOUBLE},
      </if>
      <if test="record.hoddsrkMin != null">
        hoddsrk_min = #{record.hoddsrkMin,jdbcType=DOUBLE},
      </if>
      <if test="record.hoddsrkMax != null">
        hoddsrk_max = #{record.hoddsrkMax,jdbcType=DOUBLE},
      </if>
      <if test="record.hoddsrkMean != null">
        hoddsrk_mean = #{record.hoddsrkMean,jdbcType=DOUBLE},
      </if>
      <if test="record.hoddsrkStddev != null">
        hoddsrk_stddev = #{record.hoddsrkStddev,jdbcType=DOUBLE},
      </if>
      <if test="record.hoddsrkMedian != null">
        hoddsrk_median = #{record.hoddsrkMedian,jdbcType=DOUBLE},
      </if>
      <if test="record.roddsMin != null">
        rodds_min = #{record.roddsMin,jdbcType=DOUBLE},
      </if>
      <if test="record.roddsMax != null">
        rodds_max = #{record.roddsMax,jdbcType=DOUBLE},
      </if>
      <if test="record.roddsMean != null">
        rodds_mean = #{record.roddsMean,jdbcType=DOUBLE},
      </if>
      <if test="record.roddsStddev != null">
        rodds_stddev = #{record.roddsStddev,jdbcType=DOUBLE},
      </if>
      <if test="record.roddsMedian != null">
        rodds_median = #{record.roddsMedian,jdbcType=DOUBLE},
      </if>
      <if test="record.roddsrkMin != null">
        roddsrk_min = #{record.roddsrkMin,jdbcType=DOUBLE},
      </if>
      <if test="record.roddsrkMax != null">
        roddsrk_max = #{record.roddsrkMax,jdbcType=DOUBLE},
      </if>
      <if test="record.roddsrkMean != null">
        roddsrk_mean = #{record.roddsrkMean,jdbcType=DOUBLE},
      </if>
      <if test="record.roddsrkStddev != null">
        roddsrk_stddev = #{record.roddsrkStddev,jdbcType=DOUBLE},
      </if>
      <if test="record.roddsrkMedian != null">
        roddsrk_median = #{record.roddsrkMedian,jdbcType=DOUBLE},
      </if>
      <if test="record.boddsMin != null">
        bodds_min = #{record.boddsMin,jdbcType=DOUBLE},
      </if>
      <if test="record.boddsMax != null">
        bodds_max = #{record.boddsMax,jdbcType=DOUBLE},
      </if>
      <if test="record.boddsMean != null">
        bodds_mean = #{record.boddsMean,jdbcType=DOUBLE},
      </if>
      <if test="record.boddsStddev != null">
        bodds_stddev = #{record.boddsStddev,jdbcType=DOUBLE},
      </if>
      <if test="record.boddsMedian != null">
        bodds_median = #{record.boddsMedian,jdbcType=DOUBLE},
      </if>
      <if test="record.boddsrkMin != null">
        boddsrk_min = #{record.boddsrkMin,jdbcType=DOUBLE},
      </if>
      <if test="record.boddsrkMax != null">
        boddsrk_max = #{record.boddsrkMax,jdbcType=DOUBLE},
      </if>
      <if test="record.boddsrkMean != null">
        boddsrk_mean = #{record.boddsrkMean,jdbcType=DOUBLE},
      </if>
      <if test="record.boddsrkStddev != null">
        boddsrk_stddev = #{record.boddsrkStddev,jdbcType=DOUBLE},
      </if>
      <if test="record.boddsrkMedian != null">
        boddsrk_median = #{record.boddsrkMedian,jdbcType=DOUBLE},
      </if>
      <if test="record.probMin != null">
        prob_min = #{record.probMin,jdbcType=DOUBLE},
      </if>
      <if test="record.probMax != null">
        prob_max = #{record.probMax,jdbcType=DOUBLE},
      </if>
      <if test="record.probMean != null">
        prob_mean = #{record.probMean,jdbcType=DOUBLE},
      </if>
      <if test="record.probStddev != null">
        prob_stddev = #{record.probStddev,jdbcType=DOUBLE},
      </if>
      <if test="record.probMedian != null">
        prob_median = #{record.probMedian,jdbcType=DOUBLE},
      </if>
      <if test="record.rorBestmin != null">
        ror_bestmin = #{record.rorBestmin,jdbcType=DOUBLE},
      </if>
      <if test="record.rorBestmax != null">
        ror_bestmax = #{record.rorBestmax,jdbcType=DOUBLE},
      </if>
      <if test="record.rorBetcnt != null">
        ror_betcnt = #{record.rorBetcnt,jdbcType=INTEGER},
      </if>
      <if test="record.rorBetamt != null">
        ror_betamt = #{record.rorBetamt,jdbcType=INTEGER},
      </if>
      <if test="record.rorHitcnt != null">
        ror_hitcnt = #{record.rorHitcnt,jdbcType=INTEGER},
      </if>
      <if test="record.rorHitamt != null">
        ror_hitamt = #{record.rorHitamt,jdbcType=INTEGER},
      </if>
      <if test="record.rorBetrate != null">
        ror_betrate = #{record.rorBetrate,jdbcType=DOUBLE},
      </if>
      <if test="record.rorHitrate != null">
        ror_hitrate = #{record.rorHitrate,jdbcType=DOUBLE},
      </if>
      <if test="record.rorIncomerate != null">
        ror_incomerate = #{record.rorIncomerate,jdbcType=DOUBLE},
      </if>
      <if test="record.rorkBestmin != null">
        rork_bestmin = #{record.rorkBestmin,jdbcType=DOUBLE},
      </if>
      <if test="record.rorkBestmax != null">
        rork_bestmax = #{record.rorkBestmax,jdbcType=DOUBLE},
      </if>
      <if test="record.rorkBetcnt != null">
        rork_betcnt = #{record.rorkBetcnt,jdbcType=INTEGER},
      </if>
      <if test="record.rorkBetamt != null">
        rork_betamt = #{record.rorkBetamt,jdbcType=INTEGER},
      </if>
      <if test="record.rorkHitcnt != null">
        rork_hitcnt = #{record.rorkHitcnt,jdbcType=INTEGER},
      </if>
      <if test="record.rorkHitamt != null">
        rork_hitamt = #{record.rorkHitamt,jdbcType=INTEGER},
      </if>
      <if test="record.rorkBetrate != null">
        rork_betrate = #{record.rorkBetrate,jdbcType=DOUBLE},
      </if>
      <if test="record.rorkHitrate != null">
        rork_hitrate = #{record.rorkHitrate,jdbcType=DOUBLE},
      </if>
      <if test="record.rorkIncomerate != null">
        rork_incomerate = #{record.rorkIncomerate,jdbcType=DOUBLE},
      </if>
      <if test="record.borBestmin != null">
        bor_bestmin = #{record.borBestmin,jdbcType=DOUBLE},
      </if>
      <if test="record.borBestmax != null">
        bor_bestmax = #{record.borBestmax,jdbcType=DOUBLE},
      </if>
      <if test="record.borBetcnt != null">
        bor_betcnt = #{record.borBetcnt,jdbcType=INTEGER},
      </if>
      <if test="record.borBetamt != null">
        bor_betamt = #{record.borBetamt,jdbcType=INTEGER},
      </if>
      <if test="record.borHitcnt != null">
        bor_hitcnt = #{record.borHitcnt,jdbcType=INTEGER},
      </if>
      <if test="record.borHitamt != null">
        bor_hitamt = #{record.borHitamt,jdbcType=INTEGER},
      </if>
      <if test="record.borBetrate != null">
        bor_betrate = #{record.borBetrate,jdbcType=DOUBLE},
      </if>
      <if test="record.borHitrate != null">
        bor_hitrate = #{record.borHitrate,jdbcType=DOUBLE},
      </if>
      <if test="record.borIncomerate != null">
        bor_incomerate = #{record.borIncomerate,jdbcType=DOUBLE},
      </if>
      <if test="record.borkBestmin != null">
        bork_bestmin = #{record.borkBestmin,jdbcType=DOUBLE},
      </if>
      <if test="record.borkBestmax != null">
        bork_bestmax = #{record.borkBestmax,jdbcType=DOUBLE},
      </if>
      <if test="record.borkBetcnt != null">
        bork_betcnt = #{record.borkBetcnt,jdbcType=INTEGER},
      </if>
      <if test="record.borkBetamt != null">
        bork_betamt = #{record.borkBetamt,jdbcType=INTEGER},
      </if>
      <if test="record.borkHitcnt != null">
        bork_hitcnt = #{record.borkHitcnt,jdbcType=INTEGER},
      </if>
      <if test="record.borkHitamt != null">
        bork_hitamt = #{record.borkHitamt,jdbcType=INTEGER},
      </if>
      <if test="record.borkBetrate != null">
        bork_betrate = #{record.borkBetrate,jdbcType=DOUBLE},
      </if>
      <if test="record.borkHitrate != null">
        bork_hitrate = #{record.borkHitrate,jdbcType=DOUBLE},
      </if>
      <if test="record.borkIncomerate != null">
        bork_incomerate = #{record.borkIncomerate,jdbcType=DOUBLE},
      </if>
      <if test="record.prBestmin != null">
        pr_bestmin = #{record.prBestmin,jdbcType=DOUBLE},
      </if>
      <if test="record.prBestmax != null">
        pr_bestmax = #{record.prBestmax,jdbcType=DOUBLE},
      </if>
      <if test="record.prBetcnt != null">
        pr_betcnt = #{record.prBetcnt,jdbcType=INTEGER},
      </if>
      <if test="record.prBetamt != null">
        pr_betamt = #{record.prBetamt,jdbcType=INTEGER},
      </if>
      <if test="record.prHitcnt != null">
        pr_hitcnt = #{record.prHitcnt,jdbcType=INTEGER},
      </if>
      <if test="record.prHitamt != null">
        pr_hitamt = #{record.prHitamt,jdbcType=INTEGER},
      </if>
      <if test="record.prBetrate != null">
        pr_betrate = #{record.prBetrate,jdbcType=DOUBLE},
      </if>
      <if test="record.prHitrate != null">
        pr_hitrate = #{record.prHitrate,jdbcType=DOUBLE},
      </if>
      <if test="record.prIncomerate != null">
        pr_incomerate = #{record.prIncomerate,jdbcType=DOUBLE},
      </if>
      <if test="record.balPluscnt != null">
        bal_pluscnt = #{record.balPluscnt,jdbcType=INTEGER},
      </if>
      <if test="record.resultType != null">
        result_type = #{record.resultType,jdbcType=VARCHAR},
      </if>
      <if test="record.evaluationsId != null">
        evaluations_id = #{record.evaluationsId,jdbcType=VARCHAR},
      </if>
      <if test="record.bonusPr != null">
        bonus_pr = #{record.bonusPr,jdbcType=VARCHAR},
      </if>
      <if test="record.bonusBor != null">
        bonus_bor = #{record.bonusBor,jdbcType=VARCHAR},
      </if>
      <if test="record.bonusBork != null">
        bonus_bork = #{record.bonusBork,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.ml_evaluation
    set resultno = #{record.resultno,jdbcType=VARCHAR},
      modelno = #{record.modelno,jdbcType=VARCHAR},
      patternid = #{record.patternid,jdbcType=VARCHAR},
      pattern = #{record.pattern,jdbcType=VARCHAR},
      bettype = #{record.bettype,jdbcType=VARCHAR},
      kumiban = #{record.kumiban,jdbcType=VARCHAR},
      betcnt = #{record.betcnt,jdbcType=INTEGER},
      hitcnt = #{record.hitcnt,jdbcType=INTEGER},
      betamt = #{record.betamt,jdbcType=INTEGER},
      hitamt = #{record.hitamt,jdbcType=INTEGER},
      betrate = #{record.betrate,jdbcType=DOUBLE},
      hitrate = #{record.hitrate,jdbcType=DOUBLE},
      incomerate = #{record.incomerate,jdbcType=DOUBLE},
      hmeanrate = #{record.hmeanrate,jdbcType=DOUBLE},
      balance = #{record.balance,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.IntegerArrayTypeHandler},
      bal_slope = #{record.balSlope,jdbcType=ARRAY,typeHandler=com.pengkong.boatrace.mybatis.typehandle.DoubleArrayTypeHandler},
      betr_slope = #{record.betrSlope,jdbcType=DOUBLE},
      hitr_slope = #{record.hitrSlope,jdbcType=DOUBLE},
      incr_slope = #{record.incrSlope,jdbcType=DOUBLE},
      pt_precision = #{record.ptPrecision,jdbcType=DOUBLE},
      pt_recall = #{record.ptRecall,jdbcType=DOUBLE},
      pt_fmeasure = #{record.ptFmeasure,jdbcType=DOUBLE},
      hodds_min = #{record.hoddsMin,jdbcType=DOUBLE},
      hodds_max = #{record.hoddsMax,jdbcType=DOUBLE},
      hodds_mean = #{record.hoddsMean,jdbcType=DOUBLE},
      hodds_stddev = #{record.hoddsStddev,jdbcType=DOUBLE},
      hodds_median = #{record.hoddsMedian,jdbcType=DOUBLE},
      hoddsrk_min = #{record.hoddsrkMin,jdbcType=DOUBLE},
      hoddsrk_max = #{record.hoddsrkMax,jdbcType=DOUBLE},
      hoddsrk_mean = #{record.hoddsrkMean,jdbcType=DOUBLE},
      hoddsrk_stddev = #{record.hoddsrkStddev,jdbcType=DOUBLE},
      hoddsrk_median = #{record.hoddsrkMedian,jdbcType=DOUBLE},
      rodds_min = #{record.roddsMin,jdbcType=DOUBLE},
      rodds_max = #{record.roddsMax,jdbcType=DOUBLE},
      rodds_mean = #{record.roddsMean,jdbcType=DOUBLE},
      rodds_stddev = #{record.roddsStddev,jdbcType=DOUBLE},
      rodds_median = #{record.roddsMedian,jdbcType=DOUBLE},
      roddsrk_min = #{record.roddsrkMin,jdbcType=DOUBLE},
      roddsrk_max = #{record.roddsrkMax,jdbcType=DOUBLE},
      roddsrk_mean = #{record.roddsrkMean,jdbcType=DOUBLE},
      roddsrk_stddev = #{record.roddsrkStddev,jdbcType=DOUBLE},
      roddsrk_median = #{record.roddsrkMedian,jdbcType=DOUBLE},
      bodds_min = #{record.boddsMin,jdbcType=DOUBLE},
      bodds_max = #{record.boddsMax,jdbcType=DOUBLE},
      bodds_mean = #{record.boddsMean,jdbcType=DOUBLE},
      bodds_stddev = #{record.boddsStddev,jdbcType=DOUBLE},
      bodds_median = #{record.boddsMedian,jdbcType=DOUBLE},
      boddsrk_min = #{record.boddsrkMin,jdbcType=DOUBLE},
      boddsrk_max = #{record.boddsrkMax,jdbcType=DOUBLE},
      boddsrk_mean = #{record.boddsrkMean,jdbcType=DOUBLE},
      boddsrk_stddev = #{record.boddsrkStddev,jdbcType=DOUBLE},
      boddsrk_median = #{record.boddsrkMedian,jdbcType=DOUBLE},
      prob_min = #{record.probMin,jdbcType=DOUBLE},
      prob_max = #{record.probMax,jdbcType=DOUBLE},
      prob_mean = #{record.probMean,jdbcType=DOUBLE},
      prob_stddev = #{record.probStddev,jdbcType=DOUBLE},
      prob_median = #{record.probMedian,jdbcType=DOUBLE},
      ror_bestmin = #{record.rorBestmin,jdbcType=DOUBLE},
      ror_bestmax = #{record.rorBestmax,jdbcType=DOUBLE},
      ror_betcnt = #{record.rorBetcnt,jdbcType=INTEGER},
      ror_betamt = #{record.rorBetamt,jdbcType=INTEGER},
      ror_hitcnt = #{record.rorHitcnt,jdbcType=INTEGER},
      ror_hitamt = #{record.rorHitamt,jdbcType=INTEGER},
      ror_betrate = #{record.rorBetrate,jdbcType=DOUBLE},
      ror_hitrate = #{record.rorHitrate,jdbcType=DOUBLE},
      ror_incomerate = #{record.rorIncomerate,jdbcType=DOUBLE},
      rork_bestmin = #{record.rorkBestmin,jdbcType=DOUBLE},
      rork_bestmax = #{record.rorkBestmax,jdbcType=DOUBLE},
      rork_betcnt = #{record.rorkBetcnt,jdbcType=INTEGER},
      rork_betamt = #{record.rorkBetamt,jdbcType=INTEGER},
      rork_hitcnt = #{record.rorkHitcnt,jdbcType=INTEGER},
      rork_hitamt = #{record.rorkHitamt,jdbcType=INTEGER},
      rork_betrate = #{record.rorkBetrate,jdbcType=DOUBLE},
      rork_hitrate = #{record.rorkHitrate,jdbcType=DOUBLE},
      rork_incomerate = #{record.rorkIncomerate,jdbcType=DOUBLE},
      bor_bestmin = #{record.borBestmin,jdbcType=DOUBLE},
      bor_bestmax = #{record.borBestmax,jdbcType=DOUBLE},
      bor_betcnt = #{record.borBetcnt,jdbcType=INTEGER},
      bor_betamt = #{record.borBetamt,jdbcType=INTEGER},
      bor_hitcnt = #{record.borHitcnt,jdbcType=INTEGER},
      bor_hitamt = #{record.borHitamt,jdbcType=INTEGER},
      bor_betrate = #{record.borBetrate,jdbcType=DOUBLE},
      bor_hitrate = #{record.borHitrate,jdbcType=DOUBLE},
      bor_incomerate = #{record.borIncomerate,jdbcType=DOUBLE},
      bork_bestmin = #{record.borkBestmin,jdbcType=DOUBLE},
      bork_bestmax = #{record.borkBestmax,jdbcType=DOUBLE},
      bork_betcnt = #{record.borkBetcnt,jdbcType=INTEGER},
      bork_betamt = #{record.borkBetamt,jdbcType=INTEGER},
      bork_hitcnt = #{record.borkHitcnt,jdbcType=INTEGER},
      bork_hitamt = #{record.borkHitamt,jdbcType=INTEGER},
      bork_betrate = #{record.borkBetrate,jdbcType=DOUBLE},
      bork_hitrate = #{record.borkHitrate,jdbcType=DOUBLE},
      bork_incomerate = #{record.borkIncomerate,jdbcType=DOUBLE},
      pr_bestmin = #{record.prBestmin,jdbcType=DOUBLE},
      pr_bestmax = #{record.prBestmax,jdbcType=DOUBLE},
      pr_betcnt = #{record.prBetcnt,jdbcType=INTEGER},
      pr_betamt = #{record.prBetamt,jdbcType=INTEGER},
      pr_hitcnt = #{record.prHitcnt,jdbcType=INTEGER},
      pr_hitamt = #{record.prHitamt,jdbcType=INTEGER},
      pr_betrate = #{record.prBetrate,jdbcType=DOUBLE},
      pr_hitrate = #{record.prHitrate,jdbcType=DOUBLE},
      pr_incomerate = #{record.prIncomerate,jdbcType=DOUBLE},
      bal_pluscnt = #{record.balPluscnt,jdbcType=INTEGER},
      result_type = #{record.resultType,jdbcType=VARCHAR},
      evaluations_id = #{record.evaluationsId,jdbcType=VARCHAR},
      bonus_pr = #{record.bonusPr,jdbcType=VARCHAR},
      bonus_bor = #{record.bonusBor,jdbcType=VARCHAR},
      bonus_bork = #{record.bonusBork,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>